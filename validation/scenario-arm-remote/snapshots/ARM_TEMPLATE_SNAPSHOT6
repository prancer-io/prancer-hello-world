{
  "structure": "filesystem",
  "error": null,
  "reference": "master",
  "contentType": "json",
  "source": "gitConnectorArm",
  "paths": [
    "/SERVICE_FABRIC/azuredeploy.json",
    "/SERVICE_FABRIC/azuredeploy.parameters.json"
  ],
  "timestamp": 1628758915822,
  "queryuser": null,
  "checksum": "99914b932bd37a50b983c5e7c90ae93b",
  "node": {
    "masterSnapshotId": "ARM_TEMPLATE_SNAPSHOT",
    "type": "arm",
    "collection": "armtemplate",
    "paths": [
      "/SERVICE_FABRIC/azuredeploy.json",
      "/SERVICE_FABRIC/azuredeploy.parameters.json"
    ],
    "snapshotId": "ARM_TEMPLATE_SNAPSHOT6",
    "status": "active",
    "validate": true
  },
  "snapshotId": "ARM_TEMPLATE_SNAPSHOT6",
  "collection": "armtemplate",
  "json": {
    "contentVersion": "1.0.0.0",
    "parameters": {
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Location of the Cluster"
        }
      },
      "clusterName": {
        "type": "string",
        "metadata": {
          "description": "Name of your cluster - Between 3 and 23 characters. Letters and numbers only"
        },
        "value": "GEN-UNIQUE"
      },
      "adminUsername": {
        "type": "string",
        "metadata": {
          "description": "Remote desktop user Id"
        },
        "value": "GEN-UNIQUE"
      },
      "adminPassword": {
        "type": "securestring",
        "metadata": {
          "description": "Remote desktop user password. Must be a strong password"
        },
        "value": "GEN-PASSWORD"
      },
      "vmImagePublisher": {
        "type": "string",
        "defaultValue": "MicrosoftWindowsServer",
        "metadata": {
          "description": "VM image Publisher"
        }
      },
      "vmImageOffer": {
        "type": "string",
        "defaultValue": "WindowsServer",
        "metadata": {
          "description": "VM image offer"
        }
      },
      "vmImageSku": {
        "type": "string",
        "defaultValue": "2019-Datacenter",
        "metadata": {
          "description": "VM image SKU"
        }
      },
      "vmImageVersion": {
        "type": "string",
        "defaultValue": "latest",
        "metadata": {
          "description": "VM image version"
        }
      },
      "loadBalancedAppPort1": {
        "type": "int",
        "defaultValue": 80,
        "metadata": {
          "description": "Input endpoint1 for the application to use. Replace it with what your application uses"
        }
      },
      "loadBalancedAppPort2": {
        "type": "int",
        "defaultValue": 8081,
        "metadata": {
          "description": "Input endpoint2 for the application to use. Replace it with what your application uses"
        }
      },
      "certificateStoreValue": {
        "type": "string",
        "defaultValue": "My",
        "allowedValues": [
          "My"
        ],
        "metadata": {
          "description": "The store name where the cert will be deployed in the virtual machine"
        }
      },
      "certificateThumbprint": {
        "type": "string",
        "metadata": {
          "description": "Certificate Thumbprint"
        },
        "value": "GEN-SF-CERT-THUMBPRINT"
      },
      "sourceVaultResourceId": {
        "type": "string",
        "metadata": {
          "description": "Resource Id of the key vault, is should be in the format of /subscriptions/<Sub ID>/resourceGroups/<Resource group name>/providers/Microsoft.KeyVault/vaults/<vault name>"
        },
        "value": "GEN-KEYVAULT-RESOURCE-ID"
      },
      "certificateUrlValue": {
        "type": "string",
        "metadata": {
          "description": "Refers to the location URL in your key vault where the certificate was uploaded"
        },
        "value": "GEN-SF-CERT-URL"
      },
      "clusterProtectionLevel": {
        "type": "string",
        "defaultValue": "EncryptAndSign",
        "allowedValues": [
          "None",
          "Sign",
          "EncryptAndSign"
        ],
        "metadata": {
          "description": "Protection level.Three values are allowed - EncryptAndSign, Sign, None. It is best to keep the default of EncryptAndSign, unless you have a need not to"
        }
      },
      "nt0InstanceCount": {
        "type": "int",
        "defaultValue": 5,
        "metadata": {
          "description": "Instance count for node type"
        }
      },
      "nodeDataDrive": {
        "type": "string",
        "defaultValue": "Temp",
        "allowedValues": [
          "OS",
          "Temp"
        ],
        "metadata": {
          "description": "The drive to use to store data on a cluster node."
        }
      },
      "nodeTypeSize": {
        "type": "string",
        "defaultValue": "Standard_D2_v2",
        "metadata": {
          "description": "The VM size to use for cluster nodes."
        }
      },
      "tenantId": {
        "value": "****-****-****-****-************"
      },
      "clusterApplicationId": {
        "value": "****-****-****-****-************"
      },
      "clientApplicationId": {
        "value": "****-****-****-****-************"
      }
    },
    "variables": {
      "dnsName": "GEN-UNIQUE",
      "vmName": "vm",
      "virtualNetworkName": "VNet",
      "addressPrefix": "10.0.0.0/16",
      "nicName": "NIC",
      "lbIPName": "PublicIP-LB-FE",
      "overProvision": false,
      "nt0applicationStartPort": "20000",
      "nt0applicationEndPort": "30000",
      "nt0ephemeralStartPort": "49152",
      "nt0ephemeralEndPort": "65534",
      "nt0fabricTcpGatewayPort": "19000",
      "nt0fabricHttpGatewayPort": "19080",
      "subnet0Name": "Subnet-0",
      "subnet0Prefix": "10.0.0.0/24",
      "subnet0Ref": "[resourceId('Microsoft.Network/virtualNetworks/subnets/', variables('virtualNetworkName'), variables('subnet0Name'))]",
      "supportLogStorageAccountName": "[concat( uniqueString(resourceGroup().id),'2')]",
      "applicationDiagnosticsStorageAccountName": "[concat(uniqueString(resourceGroup().id), '3' )]",
      "lbName": "LB-GEN-UNIQUE-[toLower(concat('NT1', variables('vmName')))]",
      "lbIPConfig0": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations/', variables('lbName'), 'LoadBalancerIPConfig')]",
      "lbPoolID0": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('lbName'), 'LoadBalancerBEAddressPool')]",
      "lbProbeID0": "[resourceId('Microsoft.Network/loadBalancers/probes', variables('lbName'), 'FabricGatewayProbe')]",
      "lbHttpProbeID0": "[resourceId('Microsoft.Network/loadBalancers/probes', variables('lbName'), 'FabricHttpGatewayProbe')]",
      "lbNatPoolID0": "[resourceId('Microsoft.Network/loadBalancers/inboundNatPools', variables('lbName'), 'LoadBalancerBEAddressNatPool')]",
      "vmNodeType0Name": "[toLower(concat('NT1', variables('vmName')))]",
      "vmNodeType0Size": "Standard_D2_v2"
    },
    "resources": [
      {
        "apiVersion": "2019-03-01",
        "type": "Microsoft.ServiceFabric/clusters",
        "name": "GEN-UNIQUE",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "[variables('supportLogStorageAccountName')]"
        ],
        "azureActiveDirectory": {
          "tenantId": "****-****-****-****-************",
          "clusterApplication": "****-****-****-****-************",
          "clientApplication": "****-****-****-****-************"
        },
        "tags": {
          "resourceType": "Service Fabric",
          "clusterName": "GEN-UNIQUE"
        },
        "properties": {
          "certificate": {
            "thumbprint": "GEN-SF-CERT-THUMBPRINT",
            "x509StoreName": "My"
          },
          "clusterState": "Default",
          "diagnosticsStorageAccountConfig": {
            "blobEndpoint": "[reference(resourceId('Microsoft.Storage/storageAccounts', variables('supportLogStorageAccountName')), '2018-07-01').primaryEndpoints.blob]",
            "protectedAccountKeyName": "StorageAccountKey1",
            "queueEndpoint": "[reference(resourceId('Microsoft.Storage/storageAccounts', variables('supportLogStorageAccountName')), '2018-07-01').primaryEndpoints.queue]",
            "storageAccountName": "[variables('supportLogStorageAccountName')]",
            "tableEndpoint": "[reference(resourceId('Microsoft.Storage/storageAccounts', variables('supportLogStorageAccountName')), '2018-07-01').primaryEndpoints.table]"
          },
          "fabricSettings": [
            {
              "parameters": [
                {
                  "name": "ClusterProtectionLevel",
                  "value": "EncryptAndSign"
                }
              ],
              "name": "Security"
            }
          ],
          "managementEndpoint": "[concat('https://',reference(variables('lbIPName')).dnsSettings.fqdn,':',variables('nt0fabricHttpGatewayPort'))]",
          "nodeTypes": [
            {
              "name": "[toLower(concat('NT1', variables('vmName')))]",
              "applicationPorts": {
                "endPort": "30000",
                "startPort": "20000"
              },
              "clientConnectionEndpointPort": "19000",
              "durabilityLevel": "Silver",
              "ephemeralPorts": {
                "endPort": "65534",
                "startPort": "49152"
              },
              "httpGatewayEndpointPort": "19080",
              "isPrimary": true,
              "vmInstanceCount": 5
            }
          ],
          "provisioningState": "Default",
          "reliabilityLevel": "Silver",
          "upgradeMode": "Automatic",
          "vmImage": "Windows"
        }
      }
    ],
    "outputs": {
      "clusterProperties": {
        "value": "[reference(parameters('clusterName'))]",
        "type": "object"
      }
    },
    "\uff04schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#"
  }
}