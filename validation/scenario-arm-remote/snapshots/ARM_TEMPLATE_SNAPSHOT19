{
  "structure": "filesystem",
  "error": null,
  "reference": "master",
  "contentType": "json",
  "source": "gitConnectorArm",
  "paths": [
    "/VNet-Peering/peering.azuredeploy.json",
    "/VNet-Peering/peering.azuredeploy.parameters.json"
  ],
  "timestamp": 1628758918543,
  "queryuser": null,
  "checksum": "99914b932bd37a50b983c5e7c90ae93b",
  "node": {
    "masterSnapshotId": "ARM_TEMPLATE_SNAPSHOT",
    "type": "arm",
    "collection": "armtemplate",
    "paths": [
      "/VNet-Peering/peering.azuredeploy.json",
      "/VNet-Peering/peering.azuredeploy.parameters.json"
    ],
    "snapshotId": "ARM_TEMPLATE_SNAPSHOT19",
    "status": "active",
    "validate": true
  },
  "snapshotId": "ARM_TEMPLATE_SNAPSHOT19",
  "collection": "armtemplate",
  "json": {
    "contentVersion": "1.0.0.0",
    "parameters": {
      "VNET1": {
        "type": "string",
        "metadata": {
          "description": "Set the local VNet name"
        },
        "value": "prancer-vnet"
      },
      "VNET1RG": {
        "type": "string",
        "metadata": {
          "description": "Sets the remote VNet Resource group"
        },
        "value": "Prancer"
      },
      "VNET2": {
        "type": "string",
        "metadata": {
          "description": "Set the remote VNet name"
        },
        "value": "prancer-vnet2"
      },
      "VNET2RG": {
        "type": "string",
        "metadata": {
          "description": "Sets the remote VNet Resource group"
        },
        "value": "Prancer"
      },
      "AllowVirtualNetworkAccess": {
        "type": "string",
        "defaultvalue": "true",
        "allowedValues": [
          "true",
          "false"
        ],
        "metadata": {
          "description": "Select this option if you wish to allow communication betweem two virtual network"
        },
        "value": "true"
      },
      "AllowForwardedTraffic": {
        "type": "string",
        "defaultvalue": "true",
        "allowedValues": [
          "true",
          "false"
        ],
        "metadata": {
          "description": "allow traffic forwarded by a network virtual appliance in a virtual network to flow to this virtual network through a peering"
        },
        "value": "true"
      },
      "AllowGatewayTransit": {
        "type": "string",
        "defaultvalue": "false",
        "allowedValues": [
          "true",
          "false"
        ],
        "metadata": {
          "description": "Allow if you have a virtual network gateway attached to this virtual network and want to allow traffic from the peered virtual network to flow through the gateway"
        },
        "value": "false"
      },
      "UseRemoteGateways": {
        "type": "string",
        "defaultvalue": "false",
        "allowedValues": [
          "true",
          "false"
        ],
        "metadata": {
          "description": "Allow traffic from this virtual network to flow through a virtual network gateway attached to the virtual network you're peering with"
        },
        "value": "false"
      }
    },
    "variables": {
      "PeeringName1": "prancer-vnet-to-prancer-vnet2-vnetpeering",
      "PeeringName2": "prancer-vnet2-to-prancer-vnet-vnetpeering"
    },
    "resources": [
      {
        "apiVersion": "2020-05-01",
        "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
        "name": "prancer-vnet/prancer-vnet-to-prancer-vnet2-vnetpeering",
        "location": "[resourceGroup().location]",
        "properties": {
          "allowVirtualNetworkAccess": "true",
          "allowForwardedTraffic": "true",
          "allowGatewayTransit": "false",
          "useRemoteGateways": "false",
          "remoteVirtualNetwork": {
            "id": "[resourceId(parameters('VNET2RG'), 'Microsoft.Network/virtualNetworks', parameters('VNET2'))]"
          }
        }
      },
      {
        "apiVersion": "2020-05-01",
        "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
        "name": "prancer-vnet2/prancer-vnet2-to-prancer-vnet-vnetpeering",
        "location": "[resourceGroup().location]",
        "properties": {
          "allowVirtualNetworkAccess": "true",
          "allowForwardedTraffic": "true",
          "allowGatewayTransit": "false",
          "useRemoteGateways": "false",
          "remoteVirtualNetwork": {
            "id": "[resourceId(parameters('VNET1RG'), 'Microsoft.Network/virtualNetworks', parameters('VNET1'))]"
          },
          "peeringState": "Disconnected"
        }
      }
    ],
    "\uff04schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
  }
}