{
  "structure": "filesystem",
  "error": null,
  "reference": "master",
  "contentType": "json",
  "source": "gitConnectorAzureQuickStart",
  "paths": [
    "/application-workloads/tableau/tableau-server-single-node/azuredeploy.json",
    "/application-workloads/tableau/tableau-server-single-node/azuredeploy.parameters.json"
  ],
  "timestamp": 1642962896779,
  "queryuser": null,
  "checksum": "99914b932bd37a50b983c5e7c90ae93b",
  "node": {
    "masterSnapshotId": "ARM_TEMPLATE_SNAPSHOT",
    "type": "arm",
    "collection": "armtemplate",
    "paths": [
      "/application-workloads/tableau/tableau-server-single-node/azuredeploy.json",
      "/application-workloads/tableau/tableau-server-single-node/azuredeploy.parameters.json"
    ],
    "snapshotId": "ARM_TEMPLATE_SNAPSHOT560",
    "status": "active",
    "validate": true,
    "resourceTypes": [
      "microsoft.network/publicipaddresses",
      "microsoft.resources/deployments",
      "microsoft.network/virtualnetworks",
      "microsoft.network/networkinterfaces",
      "microsoft.compute/virtualmachines",
      "microsoft.network/networksecuritygroups"
    ]
  },
  "snapshotId": "ARM_TEMPLATE_SNAPSHOT560",
  "collection": "armtemplate",
  "json": {
    "contentVersion": "1.0.0.0",
    "parameters": {
      "_artifactsLocation": {
        "type": "string",
        "metadata": {
          "description": "The base URI where artifacts required by this template are located including a trailing '/'"
        },
        "defaultValue": "[deployment().properties.templateLink.uri]"
      },
      "_artifactsLocationSasToken": {
        "type": "securestring",
        "metadata": {
          "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated. Use the defaultValue if the staging location is not secured."
        },
        "defaultValue": ""
      },
      "location": {
        "type": "string",
        "metadata": {
          "description": "The location where these resources will be deployed.  By default this will be the location of the resource group."
        },
        "defaultValue": "[resourceGroup().location]"
      },
      "OS": {
        "type": "string",
        "allowedValues": [
          "Ubuntu 16.04 LTS",
          "CentOS 7.5",
          "RHEL 7.7",
          "Windows 2019-Datacenter",
          "Windows 2016-Datacenter",
          "Windows 2012-R2-Datacenter",
          "Windows 2012-Datacenter"
        ],
        "metadata": {
          "description": "The operating system of the VM."
        },
        "value": "RHEL 7.7"
      },
      "tableau_version": {
        "type": "string",
        "allowedValues": [
          "2020.1.3",
          "2019.4.6",
          "2019.3.7",
          "2019.2.11",
          "2019.1.15"
        ],
        "metadata": {
          "description": "The version of Tableau Server to install."
        },
        "defaultValue": "2020.1.3",
        "value": "2019.4.6"
      },
      "VMSize": {
        "type": "string",
        "allowedValues": [
          "Standard_D16s_v3",
          "Standard_D32s_v3",
          "Standard_D48s_v3",
          "Standard_D4s_v3"
        ],
        "metadata": {
          "description": "Please select the size of the VM you wish to deploy.  Tableau Server should be deployed on a machine with at least 16 vCPUs.  Standard_D4s_v3 is provided for testing only.  Read more about sizing options here: https://docs.microsoft.com/en-us/azure/virtual-machines/sizes-general"
        },
        "defaultValue": "Standard_D16s_v3",
        "value": "Standard_D4s_v3"
      },
      "adminUsername": {
        "type": "string",
        "metadata": {
          "description": "Admin username for Virtual Machine"
        },
        "value": "GEN-UNIQUE"
      },
      "adminPassword": {
        "type": "securestring",
        "metadata": {
          "description": "Password for the Virtual Machine."
        },
        "value": "GEN-PASSWORD"
      },
      "source_CIDR": {
        "type": "string",
        "metadata": {
          "description": "CIDR block for SSH source - limit to your IP for secure access."
        },
        "value": "0.0.0.0/0"
      },
      "tableau_admin_username": {
        "type": "string",
        "metadata": {
          "description": "Tableau Server administrator username."
        },
        "value": "GEN-UNIQUE"
      },
      "tableau_admin_password": {
        "type": "securestring",
        "metadata": {
          "description": "Tableau Server administrator password."
        },
        "value": "GEN-PASSWORD"
      },
      "registration_first_name": {
        "type": "string",
        "metadata": {
          "description": "First name to use for registering Tableau Server"
        },
        "value": "GEN-UNIQUE"
      },
      "registration_last_name": {
        "type": "string",
        "metadata": {
          "description": "Last name to use for registering Tableau Server"
        },
        "value": "GEN-UNIQUE"
      },
      "registration_email": {
        "type": "string",
        "metadata": {
          "description": "Email address to use for registering Tableau Server"
        },
        "value": "GEN-UNIQUE"
      },
      "registration_company": {
        "type": "string",
        "metadata": {
          "description": "Company name to use for registering Tableau Server"
        },
        "value": "GEN-UNIQUE"
      },
      "registration_title": {
        "type": "string",
        "metadata": {
          "description": "Job title to use for registering Tableau Server"
        },
        "value": "GEN-UNIQUE"
      },
      "registration_department": {
        "type": "string",
        "metadata": {
          "description": "Department name to use for registering Tableau Server"
        },
        "value": "GEN-UNIQUE"
      },
      "registration_industry": {
        "type": "string",
        "metadata": {
          "description": "Industry name to use for registering Tableau Server"
        },
        "value": "GEN-UNIQUE"
      },
      "registration_phone": {
        "type": "string",
        "metadata": {
          "description": "Phone number to use for registering Tableau Server"
        },
        "value": "GEN-UNIQUE"
      },
      "registration_city": {
        "type": "string",
        "metadata": {
          "description": "Your current City - to use for registering Tableau Server"
        },
        "value": "GEN-UNIQUE"
      },
      "registration_state": {
        "type": "string",
        "metadata": {
          "description": "Your current State - to use for registering Tableau Server"
        },
        "value": "GEN-UNIQUE"
      },
      "registration_zip": {
        "type": "string",
        "metadata": {
          "description": "Your current zip - to use for registering Tableau Server"
        },
        "value": "GEN-UNIQUE"
      },
      "registration_country": {
        "type": "string",
        "metadata": {
          "description": "Your current Country - to use for registering Tableau Server"
        },
        "value": "GEN-UNIQUE"
      },
      "license_key": {
        "type": "string",
        "defaultValue": "trial",
        "metadata": {
          "description": "Enter Tableau Server License key.  ** If you would like to run a 2-week free trial please leave as 'trial'"
        }
      },
      "accept_eula": {
        "type": "string",
        "allowedValues": [
          "Yes",
          "No"
        ],
        "metadata": {
          "description": "Please type 'Yes' to accept the Tableau EULA which can be found here: https://mkt.tableau.com/files/tableau_eula.pdf. If you type No then the Azure resources will still be deployed but Tableau Server will not be installed."
        },
        "value": "Yes"
      }
    },
    "variables": {
      "virtualNetworkName": "TABVNET",
      "NSGName": "TABNSG",
      "publicIPAddressType": "Dynamic",
      "addressPrefix": "10.0.0.0/16",
      "subnet1Name": "Subnet-1",
      "subnet1Prefix": "10.0.0.0/24",
      "numberOfInstances": 1,
      "virtualMachineSize": "Standard_D4s_v3",
      "linux_os": [
        "Ubuntu 16.04 LTS",
        "CentOS 7.5",
        "RHEL 7.7"
      ],
      "os_is_linux": "[contains(variables('linux_os'),parameters('OS'))]",
      "imageReference": {
        "Ubuntu 16.04 LTS": {
          "publisher": "Canonical",
          "offer": "UbuntuServer",
          "sku": "16.04.0-LTS",
          "version": "latest"
        },
        "CentOS 7.5": {
          "publisher": "OpenLogic",
          "offer": "CentOS",
          "sku": "7.5",
          "version": "latest"
        },
        "RHEL 7.7": {
          "publisher": "RedHat",
          "offer": "RHEL",
          "sku": "7-RAW",
          "version": "latest"
        },
        "Windows 2016-Datacenter": {
          "publisher": "MicrosoftWindowsServer",
          "offer": "WindowsServer",
          "sku": "2016-Datacenter",
          "version": "latest"
        },
        "Windows 2019-Datacenter": {
          "publisher": "MicrosoftWindowsServer",
          "offer": "WindowsServer",
          "sku": "2019-Datacenter",
          "version": "latest"
        },
        "Windows 2012-Datacenter": {
          "publisher": "MicrosoftWindowsServer",
          "offer": "WindowsServer",
          "sku": "2012-Datacenter",
          "version": "latest"
        },
        "Windows 2012-R2-Datacenter": {
          "publisher": "MicrosoftWindowsServer",
          "offer": "WindowsServer",
          "sku": "2012-R2-Datacenter",
          "version": "latest"
        }
      },
      "publicIpName": "[substring(concat(uniqueString(resourceGroup().id, deployment().name)), 0, 6)]",
      "LinuxExecute": "-u GEN-UNIQUE -p GEN-PASSWORD -h GEN-UNIQUE -e 2019.4.6 -i GEN-PASSWORD -j GEN-UNIQUE -k GEN-UNIQUE -l GEN-UNIQUE -m GEN-UNIQUE -n GEN-UNIQUE -o yes -q GEN-UNIQUE -r GEN-UNIQUE -s GEN-UNIQUE -t GEN-UNIQUE -x GEN-UNIQUE -v GEN-UNIQUE -g [uri(parameters('_artifactsLocation'), concat('scripts/automated-installer', parameters('_artifactsLocationSasToken')))] -y trial -f RHEL 7.7 -w GEN-UNIQUE",
      "LinCmdWrapper": "bash ./config-linux.sh -u GEN-UNIQUE -p GEN-PASSWORD -h GEN-UNIQUE -e 2019.4.6 -i GEN-PASSWORD -j GEN-UNIQUE -k GEN-UNIQUE -l GEN-UNIQUE -m GEN-UNIQUE -n GEN-UNIQUE -o yes -q GEN-UNIQUE -r GEN-UNIQUE -s GEN-UNIQUE -t GEN-UNIQUE -x GEN-UNIQUE -v GEN-UNIQUE -g [uri(parameters('_artifactsLocation'), concat('scripts/automated-installer', parameters('_artifactsLocationSasToken')))] -y trial -f RHEL 7.7 -w GEN-UNIQUE",
      "linuxscripturi": "[uri(parameters('_artifactsLocation'), concat('scripts/config-linux.sh', parameters('_artifactsLocationSasToken')))]",
      "installscripturi": "[uri(parameters('_artifactsLocation'), concat('scripts/automated-installer', parameters('_artifactsLocationSasToken')))]",
      "winscriptfile": "config-win.ps1",
      "winscripturi": "[deployment().properties.templateLink.uri]scripts/config-win.ps1 parameters('_artifactsLocationSasToken')",
      "WinExecute": "-local_admin_user GEN-UNIQUE -local_admin_pass GEN-PASSWORD -ts_admin_un GEN-UNIQUE -ts_admin_pass GEN-PASSWORD -reg_zip GEN-UNIQUE -reg_country GEN-UNIQUE -reg_city GEN-UNIQUE -reg_last_name GEN-UNIQUE -reg_industry GEN-UNIQUE -eula Yes -reg_title GEN-UNIQUE -reg_phone GEN-UNIQUE -reg_company GEN-UNIQUE -reg_state GEN-UNIQUE -reg_email GEN-UNIQUE -reg_department GEN-UNIQUE -install_script_url [deployment().properties.templateLink.uri]scripts/config-win.ps1 parameters('_artifactsLocationSasToken') -license_key trial -reg_first_name GEN-UNIQUE -ts_build 2019.4.6",
      "WinCmdWrapper": "powershell -ExecutionPolicy Unrestricted -File config-win.ps1 -local_admin_user GEN-UNIQUE -local_admin_pass GEN-PASSWORD -ts_admin_un GEN-UNIQUE -ts_admin_pass GEN-PASSWORD -reg_zip GEN-UNIQUE -reg_country GEN-UNIQUE -reg_city GEN-UNIQUE -reg_last_name GEN-UNIQUE -reg_industry GEN-UNIQUE -eula Yes -reg_title GEN-UNIQUE -reg_phone GEN-UNIQUE -reg_company GEN-UNIQUE -reg_state GEN-UNIQUE -reg_email GEN-UNIQUE -reg_department GEN-UNIQUE -install_script_url [deployment().properties.templateLink.uri]scripts/config-win.ps1 parameters('_artifactsLocationSasToken') -license_key trial -reg_first_name GEN-UNIQUE -ts_build 2019.4.6",
      "win_CSE_properties": {
        "publisher": "Microsoft.Compute",
        "type": "CustomScriptExtension",
        "typeHandlerVersion": "1.7",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": "[split(variables('winscripturi'), ' ')]"
        },
        "protectedSettings": {
          "commandToExecute": "powershell -ExecutionPolicy Unrestricted -File config-win.ps1 -local_admin_user GEN-UNIQUE -local_admin_pass GEN-PASSWORD -ts_admin_un GEN-UNIQUE -ts_admin_pass GEN-PASSWORD -reg_zip GEN-UNIQUE -reg_country GEN-UNIQUE -reg_city GEN-UNIQUE -reg_last_name GEN-UNIQUE -reg_industry GEN-UNIQUE -eula Yes -reg_title GEN-UNIQUE -reg_phone GEN-UNIQUE -reg_company GEN-UNIQUE -reg_state GEN-UNIQUE -reg_email GEN-UNIQUE -reg_department GEN-UNIQUE -install_script_url [deployment().properties.templateLink.uri]scripts/config-win.ps1 parameters('_artifactsLocationSasToken') -license_key trial -reg_first_name GEN-UNIQUE -ts_build 2019.4.6"
        }
      },
      "lin_CSE_properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "skipDos2Unix": false,
          "timestamp": 123456789
        },
        "protectedSettings": {
          "commandToExecute": "bash ./config-linux.sh -u GEN-UNIQUE -p GEN-PASSWORD -h GEN-UNIQUE -e 2019.4.6 -i GEN-PASSWORD -j GEN-UNIQUE -k GEN-UNIQUE -l GEN-UNIQUE -m GEN-UNIQUE -n GEN-UNIQUE -o yes -q GEN-UNIQUE -r GEN-UNIQUE -s GEN-UNIQUE -t GEN-UNIQUE -x GEN-UNIQUE -v GEN-UNIQUE -g [uri(parameters('_artifactsLocation'), concat('scripts/automated-installer', parameters('_artifactsLocationSasToken')))] -y trial -f RHEL 7.7 -w GEN-UNIQUE",
          "fileUris": [
            "[uri(parameters('_artifactsLocation'), concat('scripts/config-linux.sh', parameters('_artifactsLocationSasToken')))]"
          ]
        }
      },
      "LinuxsecurityRules": [
        {
          "name": "ssh-rule",
          "properties": {
            "description": "Allow SSH",
            "protocol": "Tcp",
            "sourcePortRange": "*",
            "destinationPortRange": "22",
            "sourceAddressPrefix": "0.0.0.0/0",
            "destinationAddressPrefix": "*",
            "access": "Allow",
            "priority": 100,
            "direction": "Inbound"
          }
        },
        {
          "name": "mngagent-rule",
          "properties": {
            "description": "Allow Management",
            "protocol": "Tcp",
            "sourcePortRange": "*",
            "destinationPortRange": "8850",
            "sourceAddressPrefix": "0.0.0.0/0",
            "destinationAddressPrefix": "*",
            "access": "Allow",
            "priority": 110,
            "direction": "Inbound"
          }
        },
        {
          "name": "web-rule",
          "properties": {
            "description": "Allow WEB",
            "protocol": "Tcp",
            "sourcePortRange": "*",
            "destinationPortRange": "80",
            "sourceAddressPrefix": "Internet",
            "destinationAddressPrefix": "*",
            "access": "Allow",
            "priority": 120,
            "direction": "Inbound"
          }
        }
      ],
      "WindowssecurityRules": [
        {
          "name": "rdp-rule",
          "properties": {
            "description": "Allow RDP",
            "protocol": "Tcp",
            "sourcePortRange": "*",
            "destinationPortRange": "3389",
            "sourceAddressPrefix": "0.0.0.0/0",
            "destinationAddressPrefix": "*",
            "access": "Allow",
            "priority": 100,
            "direction": "Inbound"
          }
        },
        {
          "name": "mngagent-rule",
          "properties": {
            "description": "Allow Management",
            "protocol": "Tcp",
            "sourcePortRange": "*",
            "destinationPortRange": "8850",
            "sourceAddressPrefix": "0.0.0.0/0",
            "destinationAddressPrefix": "*",
            "access": "Allow",
            "priority": 110,
            "direction": "Inbound"
          }
        },
        {
          "name": "web-rule",
          "properties": {
            "description": "Allow WEB",
            "protocol": "Tcp",
            "sourcePortRange": "*",
            "destinationPortRange": "80",
            "sourceAddressPrefix": "Internet",
            "destinationAddressPrefix": "*",
            "access": "Allow",
            "priority": 120,
            "direction": "Inbound"
          }
        }
      ]
    },
    "resources": [
      {
        "apiVersion": "2020-10-01",
        "name": "pid-6c922c23-cc65-4b76-8290-74feb0f3c476",
        "type": "Microsoft.Resources/deployments",
        "properties": {
          "mode": "Incremental",
          "template": {
            "contentVersion": "1.0.0.0",
            "resources": [],
            "\uff04schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
          }
        }
      },
      {
        "type": "Microsoft.Network/virtualNetworks",
        "name": "TABVNET",
        "apiVersion": "2020-07-01",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "TABNSG"
        ],
        "properties": {
          "addressSpace": {
            "addressPrefixes": [
              "10.0.0.0/16"
            ]
          },
          "subnets": [
            {
              "name": "Subnet-1",
              "properties": {
                "addressPrefix": "10.0.0.0/24",
                "networkSecurityGroup": {
                  "id": "Microsoft.Network/networkSecurityGroups/TABNSG"
                }
              }
            }
          ]
        }
      },
      {
        "apiVersion": "2020-07-01",
        "type": "Microsoft.Network/networkSecurityGroups",
        "name": "TABNSG",
        "location": "[resourceGroup().location]",
        "tags": {
          "displayName": "TABNSG"
        },
        "properties": {
          "securityRules": "[if(variables('os_is_linux'),variables('LinuxsecurityRules'),variables('WindowssecurityRules'))]"
        }
      },
      {
        "type": "Microsoft.Network/publicIPAddresses",
        "name": "[concat('tabpip', copyindex(1))]",
        "apiVersion": "2020-07-01",
        "location": "[resourceGroup().location]",
        "copy": {
          "name": "PipLoop",
          "count": 1
        },
        "dependsOn": [
          "TABVNET"
        ],
        "properties": {
          "publicIPAllocationMethod": "Dynamic",
          "dnsSettings": {
            "domainNameLabel": "[concat('a', variables('publicIpName'), copyIndex(1))]"
          }
        }
      },
      {
        "type": "Microsoft.Network/networkInterfaces",
        "name": "[concat('tabnic', copyIndex(1))]",
        "apiVersion": "2020-07-01",
        "location": "[resourceGroup().location]",
        "copy": {
          "name": "nicLoop",
          "count": 1
        },
        "dependsOn": [
          "TABVNET",
          "PipLoop"
        ],
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipconfig1",
              "properties": {
                "publicIPAddress": {
                  "id": "[resourceId('Microsoft.Network/publicIPAddresses/', concat('tabpip', copyIndex(1)))]"
                },
                "privateIPAllocationMethod": "Dynamic",
                "subnet": {
                  "id": "Microsoft.Network/virtualNetworks/subnets/TABVNET/Subnet-1"
                }
              }
            }
          ]
        }
      },
      {
        "type": "Microsoft.Compute/virtualMachines",
        "name": "[concat('tableau', copyIndex(1))]",
        "apiVersion": "2020-12-01",
        "location": "[resourceGroup().location]",
        "copy": {
          "name": "virtualMachineLoop",
          "count": 1
        },
        "dependsOn": [
          "nicLoop"
        ],
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_D4s_v3"
          },
          "osProfile": {
            "computerName": "[concat('tableauvm', copyIndex(1))]",
            "adminUsername": "GEN-UNIQUE",
            "adminPassword": "GEN-PASSWORD"
          },
          "storageProfile": {
            "imageReference": "(imageReference)[parameters(OS)]",
            "osDisk": {
              "caching": "ReadWrite",
              "createOption": "FromImage"
            },
            "copy": [
              {
                "name": "dataDisks",
                "count": 1,
                "input": {
                  "diskSizeGB": 64,
                  "lun": "[copyIndex('dataDisks')]",
                  "createOption": "Empty"
                }
              }
            ]
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "[resourceId('Microsoft.Network/networkInterfaces',concat('tabnic', copyIndex(1)))]"
              }
            ]
          }
        },
        "resources": [
          {
            "condition": false,
            "name": "[concat('tableau', copyIndex(1),'/CustomScript')]",
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "location": "[resourceGroup().location]",
            "apiVersion": "2020-12-01",
            "dependsOn": [
              "[resourceId('Microsoft.Compute/virtualMachines', concat('tableau', copyIndex(1)))]"
            ],
            "tags": {
              "displayName": "customscriptextension"
            },
            "properties": "[if(variables('os_is_linux'),variables('lin_CSE_properties'),variables('win_CSE_properties'))]"
          }
        ]
      }
    ],
    "\uff04schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#"
  }
}