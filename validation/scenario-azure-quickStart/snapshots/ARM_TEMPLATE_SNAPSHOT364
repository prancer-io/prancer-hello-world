{
  "structure": "filesystem",
  "error": null,
  "reference": "master",
  "contentType": "json",
  "source": "gitConnectorAzureQuickStart",
  "paths": [
    "/application-workloads/rds/rds-deployment/azuredeploy.json",
    "/application-workloads/rds/rds-deployment/azuredeploy.parameters.json"
  ],
  "timestamp": 1642962893244,
  "queryuser": null,
  "checksum": "99914b932bd37a50b983c5e7c90ae93b",
  "node": {
    "masterSnapshotId": "ARM_TEMPLATE_SNAPSHOT",
    "type": "arm",
    "collection": "armtemplate",
    "paths": [
      "/application-workloads/rds/rds-deployment/azuredeploy.json",
      "/application-workloads/rds/rds-deployment/azuredeploy.parameters.json"
    ],
    "snapshotId": "ARM_TEMPLATE_SNAPSHOT364",
    "status": "active",
    "validate": true,
    "resourceTypes": [
      "microsoft.network/publicipaddresses",
      "microsoft.network/virtualnetworks",
      "microsoft.network/loadbalancers",
      "microsoft.resources/deployments",
      "microsoft.network/networkinterfaces",
      "microsoft.compute/virtualmachines/extensions",
      "microsoft.compute/virtualmachines",
      "microsoft.network/networksecuritygroups",
      "microsoft.storage/storageaccounts",
      "microsoft.compute/availabilitysets"
    ]
  },
  "snapshotId": "ARM_TEMPLATE_SNAPSHOT364",
  "collection": "armtemplate",
  "json": {
    "contentVersion": "1.0.0.0",
    "parameters": {
      "gwdnsLabelPrefix": {
        "type": "string",
        "metadata": {
          "description": "Unique gateway public DNS prefix for the deployment. The fqdn will look something like '<dnsname>.westus.cloudapp.azure.com'. Up to 62 chars, digits or dashes, lowercase, should start with a letter: must conform to '^[a-z][a-z0-9-]{1,61}[a-z0-9]$'. For example johndns1 will result the final RDWEB access url like https://johndns1.westus.cloudapp.azure.com/RDWeb"
        },
        "value": "GEN-UNIQUE"
      },
      "gwpublicIPAddressName": {
        "type": "string",
        "metadata": {
          "description": "The name of gateway PublicIPAddress object"
        },
        "defaultValue": "gwpip"
      },
      "adDomainName": {
        "type": "string",
        "metadata": {
          "description": "The name of the AD domain. For example contoso.com"
        },
        "defaultValue": "contoso.com"
      },
      "adminUsername": {
        "type": "string",
        "metadata": {
          "description": "The name of the administrator of the new VM and the domain. Exclusion list: 'administrator'. For example johnadmin"
        },
        "defaultValue": "vmadmin"
      },
      "adminPassword": {
        "type": "securestring",
        "metadata": {
          "description": "The password for the administrator account of the new VM and the domain"
        },
        "value": "GEN-PASSWORD"
      },
      "imageSKU": {
        "type": "string",
        "allowedValues": [
          "2012-R2-Datacenter",
          "2016-Datacenter"
        ],
        "metadata": {
          "description": "Windows server SKU"
        },
        "defaultValue": "2016-Datacenter"
      },
      "numberOfRdshInstances": {
        "type": "int",
        "defaultValue": 1,
        "metadata": {
          "description": "Number of RemoteDesktopSessionHosts"
        }
      },
      "VmSize": {
        "type": "string",
        "defaultValue": "Standard_A2",
        "allowedValues": [
          "Standard_A2"
        ]
      },
      "rdshVmSize": {
        "type": "string",
        "allowedValues": [
          "Standard_A1_v2",
          "Standard_A2_v2",
          "Standard_A4_v2",
          "Standard_A8_v2",
          "Standard_A2m_v2",
          "Standard_A4m_v2",
          "Standard_A8m_v2",
          "Standard_D2_v3",
          "Standard_D4_v3",
          "Standard_D8_v3",
          "Standard_D16_v3",
          "Standard_D32_v3",
          "Standard_D48_v3",
          "Standard_D64_v3"
        ],
        "metadata": {
          "description": "The size of the RDSH VMs"
        },
        "defaultValue": "Standard_D4_v3"
      },
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Location for all resources."
        }
      },
      "_artifactsLocation": {
        "type": "string",
        "defaultValue": "[deployment().properties.templatelink.uri]",
        "metadata": {
          "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
        }
      },
      "_artifactsLocationSasToken": {
        "type": "securestring",
        "metadata": {
          "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."
        },
        "defaultValue": ""
      }
    },
    "variables": {
      "adAssetLocation": "https://raw.githubusercontent.com/Azure/AzureStack-QuickStart-Templates/master/ad-non-ha",
      "adVMSize": "Standard_A1",
      "adVnetName": "[concat('ADVNET',resourceGroup().name)]",
      "adSubnetName": "[concat('ADStaticSubnet',resourceGroup().name)]",
      "staticSubnetID": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('adVnetName'), variables('adSubnetName'))]",
      "adTemplateURL": "https://raw.githubusercontent.com/Azure/AzureStack-QuickStart-Templates/master/ad-non-ha/adVmTemplate.json",
      "adStorageName": "[tolower(concat('adsa',uniqueString(resourceGroup().id)))]",
      "adVmDeployment": "CreateAdVms",
      "adVmDeploymentId": "Microsoft.Resources/deployments/CreateAdVms",
      "deployPrimaryAdTemplateURL": "https://raw.githubusercontent.com/Azure/AzureStack-QuickStart-Templates/master/ad-non-ha/deployPrimaryAD.json",
      "deployPrimaryAd": "DeployPrimaryAd",
      "deployPrimaryAdID": "Microsoft.Resources/deployments/DeployPrimaryAd",
      "adPDCVMName": "advm",
      "vnetwithDNSTemplateURL": "https://raw.githubusercontent.com/Azure/AzureStack-QuickStart-Templates/master/ad-non-ha/vnet-with-dns-server.json",
      "updateVNetDNS1": "updateVNetDNS",
      "publicLBName": "[concat('ADPLB',resourceGroup().name)]",
      "publicIPAddressID": "Microsoft.Network/publicIPAddresses/[tolower(concat('adpip',uniqueString(resourceGroup().Id)))]",
      "lbFE": "ADLBFE",
      "rdpNAT": "ADRDPNAT",
      "publiclbID": "[resourceId('Microsoft.Network/loadBalancers',variables('publicLBName'))]",
      "publiclbFEConfigID": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations',variables('publicLBName'),variables('lbFE'))]",
      "rdpPort": 3389,
      "adRDPNATRuleID": "[resourceId('Microsoft.Network/loadBalancers/inboundNatRules/',variables('publicLBName'),variables('rdpNAT'))]",
      "adNICName": "[concat('ADNic',resourceGroup().name)]",
      "lbBE": "ADLBBE",
      "gwLBName": "[concat('GWPLB',resourceGroup().name)]",
      "publicIPAddressName": "[tolower(concat('adpip',uniqueString(resourceGroup().Id)))]",
      "gwIPAddressID": "Microsoft.Network/publicIPAddresses/gwpip",
      "gwlbFE": "GWLBFE",
      "gwlbID": "[resourceId('Microsoft.Network/loadBalancers',variables('gwLBName'))]",
      "gwlbFEConfigID": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations/',variables('gwLBName'),variables('gwlbFE'))]",
      "gwlbBE": "GWLBBE",
      "gwBEAddressPoolID": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools/',variables('gwLBName'),variables('gwlbBE'))]",
      "dnsLabelPrefix": "[tolower(concat('adns', resourceGroup().name))]",
      "storageAccountName": "[tolower(concat('rdsa',uniqueString(resourceGroup().id)))]",
      "storageAccountType": "Standard_LRS",
      "uniqueStorageAccountContainerName": "[tolower(concat('sc', uniqueString(resourceGroup().id)))]",
      "imagePublisher": "MicrosoftWindowsServer",
      "imageOffer": "WindowsServer",
      "vnetAddressRange": "10.0.0.0/16",
      "subnetAddressRange": "10.0.0.0/24",
      "dnsServerPrivateIp": "10.0.0.4",
      "subnet-id": "[resourceId('Microsoft.Network/virtualNetworks/subnets/', variables('adVnetName'), variables('adSubnetName'))]",
      "nsgName": "RDSNsg",
      "nsgID": "Microsoft.Network/networkSecurityGroups/RDSNsg",
      "subnets": [
        {
          "name": "[variables('adSubnetName')]",
          "properties": {
            "addressPrefix": "10.0.0.0/24",
            "networkSecurityGroup": {
              "id": "Microsoft.Network/networkSecurityGroups/RDSNsg"
            }
          }
        }
      ]
    },
    "resources": [
      {
        "name": "RDSNsg",
        "type": "Microsoft.Network/networkSecurityGroups",
        "location": "[resourceGroup().location]",
        "apiVersion": "2020-08-01",
        "properties": {
          "securityRules": [
            {
              "name": "rule1",
              "properties": {
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 101,
                "direction": "Inbound"
              }
            }
          ]
        }
      },
      {
        "name": "[variables('adVnetName')]",
        "type": "Microsoft.Network/virtualNetworks",
        "location": "[resourceGroup().location]",
        "apiVersion": "2020-08-01",
        "dependsOn": [
          "Microsoft.Network/networkSecurityGroups/RDSNsg"
        ],
        "properties": {
          "addressSpace": {
            "addressPrefixes": [
              "10.0.0.0/16"
            ]
          },
          "subnets": [
            {
              "name": "[variables('adSubnetName')]",
              "properties": {
                "addressPrefix": "10.0.0.0/24",
                "networkSecurityGroup": {
                  "id": "Microsoft.Network/networkSecurityGroups/RDSNsg"
                }
              }
            }
          ]
        }
      },
      {
        "name": "[tolower(concat('adpip',uniqueString(resourceGroup().Id)))]",
        "type": "Microsoft.Network/publicIPAddresses",
        "location": "[resourceGroup().location]",
        "apiVersion": "2020-08-01",
        "dependsOn": [
          "[variables('adVnetName')]"
        ],
        "properties": {
          "publicIPAllocationMethod": "Dynamic",
          "dnsSettings": {
            "domainNameLabel": "[tolower(concat('adns', resourceGroup().name))]"
          }
        }
      },
      {
        "name": "gwpip",
        "type": "Microsoft.Network/publicIPAddresses",
        "location": "[resourceGroup().location]",
        "apiVersion": "2020-08-01",
        "dependsOn": [
          "Microsoft.Resources/deployments/DeployPrimaryAd"
        ],
        "properties": {
          "publicIPAllocationMethod": "Dynamic",
          "dnsSettings": {
            "domainNameLabel": "GEN-UNIQUE"
          }
        }
      },
      {
        "apiVersion": "2020-12-01",
        "type": "Microsoft.Compute/availabilitySets",
        "name": "gw-availabilityset",
        "location": "[resourceGroup().location]"
      },
      {
        "apiVersion": "2020-12-01",
        "type": "Microsoft.Compute/availabilitySets",
        "name": "cb-availabilityset",
        "location": "[resourceGroup().location]"
      },
      {
        "apiVersion": "2020-12-01",
        "type": "Microsoft.Compute/availabilitySets",
        "name": "rdsh-availabilityset",
        "location": "[resourceGroup().location]"
      },
      {
        "name": "publiclbName",
        "type": "Microsoft.Network/loadBalancers",
        "apiVersion": "2020-08-01",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "Microsoft.Network/publicIPAddresses/[tolower(concat('adpip',uniqueString(resourceGroup().Id)))]"
        ],
        "properties": {
          "frontendIPConfigurations": [
            {
              "name": "ADLBFE",
              "properties": {
                "publicIPAddress": {
                  "id": "Microsoft.Network/publicIPAddresses/[tolower(concat('adpip',uniqueString(resourceGroup().Id)))]"
                }
              }
            }
          ],
          "backendAddressPools": [
            {
              "name": "ADLBBE"
            }
          ],
          "inboundNatRules": [
            {
              "name": "ADRDPNAT",
              "properties": {
                "frontendIPConfiguration": {
                  "id": "[variables('publiclbFEConfigID')]"
                },
                "protocol": "Tcp",
                "frontendPort": 3389,
                "backendPort": 3389,
                "enableFloatingIP": false
              }
            }
          ]
        }
      },
      {
        "name": "gwlbName",
        "type": "Microsoft.Network/loadBalancers",
        "apiVersion": "2020-08-01",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "Microsoft.Network/publicIPAddresses/gwpip"
        ],
        "properties": {
          "frontendIPConfigurations": [
            {
              "name": "GWLBFE",
              "properties": {
                "publicIPAddress": {
                  "id": "Microsoft.Network/publicIPAddresses/gwpip"
                }
              }
            }
          ],
          "backendAddressPools": [
            {
              "name": "GWLBBE"
            }
          ],
          "loadBalancingRules": [
            {
              "name": "LBRule01",
              "properties": {
                "frontendIPConfiguration": {
                  "id": "[variables('gwlbFEConfigID')]"
                },
                "backendAddressPool": {
                  "id": "[variables('gwBEAddressPoolID')]"
                },
                "protocol": "Tcp",
                "frontendPort": 443,
                "backendPort": 443,
                "enableFloatingIP": false,
                "idleTimeoutInMinutes": 5,
                "loadDistribution": "SourceIPProtocol",
                "probe": {
                  "id": "[resourceId('Microsoft.Network/loadBalancers/probes/',variables('gwLBName'),'tcpProbe')]"
                }
              }
            },
            {
              "name": "LBRule02",
              "properties": {
                "frontendIPConfiguration": {
                  "id": "[variables('gwlbFEConfigID')]"
                },
                "backendAddressPool": {
                  "id": "[variables('gwBEAddressPoolID')]"
                },
                "protocol": "Udp",
                "frontendPort": 3391,
                "backendPort": 3391,
                "enableFloatingIP": false,
                "idleTimeoutInMinutes": 5,
                "loadDistribution": "SourceIPProtocol",
                "probe": {
                  "id": "[resourceId('Microsoft.Network/loadBalancers/probes/',variables('gwLBName'),'tcpProbe01')]"
                }
              }
            }
          ],
          "probes": [
            {
              "name": "tcpProbe",
              "properties": {
                "protocol": "Tcp",
                "port": 443,
                "intervalInSeconds": 5,
                "numberOfProbes": 2
              }
            },
            {
              "name": "tcpProbe01",
              "properties": {
                "protocol": "Tcp",
                "port": 3391,
                "intervalInSeconds": 5,
                "numberOfProbes": 2
              }
            }
          ],
          "inboundNatRules": [
            {
              "name": "rdp",
              "properties": {
                "frontendIPConfiguration": {
                  "id": "[variables('gwlbFEConfigID')]"
                },
                "protocol": "Tcp",
                "frontendPort": 3389,
                "backendPort": 3389,
                "enableFloatingIP": false
              }
            }
          ]
        }
      },
      {
        "name": "CreateAdVms",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2020-08-01",
        "dependsOn": [
          "[variables('publiclbID')]"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "https://raw.githubusercontent.com/Azure/AzureStack-QuickStart-Templates/master/ad-non-ha/adVmTemplate.json",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "adminUsername": {
              "value": "vmadmin"
            },
            "adminPassword": {
              "value": "GEN-PASSWORD"
            },
            "adRDPNATRuleID": {
              "value": "[variables('adRDPNATRuleID')]"
            },
            "storageAccount": {
              "value": "[tolower(concat('adsa',uniqueString(resourceGroup().id)))]"
            },
            "subnetResourceId": {
              "value": "[variables('staticSubnetID')]"
            },
            "primaryAdIpAddress": {
              "value": "10.0.0.4"
            },
            "storageAccountType": {
              "value": "Standard_LRS"
            },
            "vmName": {
              "value": "advm"
            },
            "vmSize": {
              "value": "Standard_A1"
            },
            "adDNicName": {
              "value": "[variables('adNICName')]"
            }
          }
        }
      },
      {
        "name": "DeployPrimaryAd",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2020-08-01",
        "dependsOn": [
          "adVmDeploymentID"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "https://raw.githubusercontent.com/Azure/AzureStack-QuickStart-Templates/master/ad-non-ha/deployPrimaryAD.json",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "primaryADName": {
              "value": "advm"
            },
            "domainName": {
              "value": "contoso.com"
            },
            "adminUsername": {
              "value": "vmadmin"
            },
            "adminPassword": {
              "value": "GEN-PASSWORD"
            },
            "assetLocation": {
              "value": "https://raw.githubusercontent.com/Azure/AzureStack-QuickStart-Templates/master/ad-non-ha"
            }
          }
        }
      },
      {
        "name": "updateVNetDNS",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2020-08-01",
        "dependsOn": [
          "Microsoft.Resources/deployments/DeployPrimaryAd"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "https://raw.githubusercontent.com/Azure/AzureStack-QuickStart-Templates/master/ad-non-ha/vnet-with-dns-server.json",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "virtualNetworkName": {
              "value": "[variables('adVnetName')]"
            },
            "virtualNetworkAddressRange": {
              "value": "10.0.0.0/16"
            },
            "subnets": {
              "value": [
                {
                  "name": "[variables('adSubnetName')]",
                  "properties": {
                    "addressPrefix": "10.0.0.0/24",
                    "networkSecurityGroup": {
                      "id": "Microsoft.Network/networkSecurityGroups/RDSNsg"
                    }
                  }
                }
              ]
            },
            "dnsServerAddress": {
              "value": [
                "10.0.0.4"
              ]
            }
          }
        }
      },
      {
        "apiVersion": "2021-01-01",
        "type": "Microsoft.Storage/storageAccounts",
        "name": "[tolower(concat('rdsa',uniqueString(resourceGroup().id)))]",
        "location": "[resourceGroup().location]",
        "sku": {
          "name": "Standard_LRS"
        }
      },
      {
        "apiVersion": "2020-08-01",
        "type": "Microsoft.Network/networkInterfaces",
        "name": "gw-nic",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "[variables('gwlbID')]",
          "[variables('adVmDeploymentID')]"
        ],
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipconfig",
              "properties": {
                "privateIPAllocationMethod": "Dynamic",
                "subnet": {
                  "id": "[variables('subnet-id')]"
                },
                "loadBalancerBackendAddressPools": [
                  {
                    "id": "[variables('gwBEAddressPoolID')]"
                  }
                ],
                "loadBalancerInboundNatRules": [
                  {
                    "id": "[resourceId('Microsoft.Network/loadBalancers/inboundNatRules',variables('gwLBName'),'rdp')]"
                  }
                ]
              }
            }
          ],
          "dnsSettings": {
            "dnsServers": [
              "10.0.0.4"
            ]
          }
        }
      },
      {
        "apiVersion": "2020-08-01",
        "type": "Microsoft.Network/networkInterfaces",
        "name": "cb-nic",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "[variables('publiclbID')]",
          "[variables('adVmDeploymentID')]"
        ],
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipconfig",
              "properties": {
                "privateIPAllocationMethod": "Dynamic",
                "subnet": {
                  "id": "[variables('subnet-id')]"
                }
              }
            }
          ],
          "dnsSettings": {
            "dnsServers": [
              "10.0.0.4"
            ]
          }
        }
      },
      {
        "apiVersion": "2020-08-01",
        "type": "Microsoft.Network/networkInterfaces",
        "name": "rdsh-copyindex()-nic",
        "location": "[resourceGroup().location]",
        "copy": {
          "name": "rdsh-nic-loop",
          "count": 1
        },
        "dependsOn": [
          "[variables('publiclbID')]",
          "[variables('adVmDeploymentID')]"
        ],
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipconfig",
              "properties": {
                "privateIPAllocationMethod": "Dynamic",
                "subnet": {
                  "id": "[variables('subnet-id')]"
                }
              }
            }
          ],
          "dnsSettings": {
            "dnsServers": [
              "10.0.0.4"
            ]
          }
        }
      },
      {
        "apiVersion": "2020-12-01",
        "type": "Microsoft.Compute/virtualMachines",
        "name": "gw-vm",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "Microsoft.Resources/deployments/DeployPrimaryAd",
          "Microsoft.Storage/storageAccounts//[tolower(concat('rdsa',uniqueString(resourceGroup().id)))]",
          "Microsoft.Network/networkInterfaces//gw-nic"
        ],
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_A2"
          },
          "availabilitySet": {
            "id": "Microsoft.Compute/availabilitySets/gw-availabilityset"
          },
          "osProfile": {
            "computerName": "gateway",
            "adminUsername": "vmadmin",
            "adminPassword": "GEN-PASSWORD"
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "MicrosoftWindowsServer",
              "offer": "WindowsServer",
              "sku": "2016-Datacenter",
              "version": "latest"
            },
            "osDisk": {
              "name": "osdisk",
              "vhd": {
                "uri": "[concat(reference(resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName')),'2021-02-01').primaryEndpoints.blob,variables('uniqueStorageAccountContainerName'),'/','gw-vm-os-disk.vhd')]"
              },
              "caching": "ReadWrite",
              "createOption": "FromImage"
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "Microsoft.Network/networkInterfaces/gw-nic"
              }
            ]
          }
        },
        "resources": [
          {
            "apiVersion": "2020-12-01",
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "gw-vm/gateway",
            "location": "[resourceGroup().location]",
            "dependsOn": [
              "Microsoft.Compute/virtualMachines/gw-vm"
            ],
            "properties": {
              "publisher": "Microsoft.Powershell",
              "type": "DSC",
              "typeHandlerVersion": "2.11",
              "autoUpgradeMinorVersion": true,
              "settings": {
                "modulesUrl": "[uri(parameters('_artifactsLocation'), concat('Configuration.zip', parameters('_artifactsLocationSasToken')))]",
                "configurationFunction": "Configuration.ps1\\Gateway",
                "Properties": {
                  "DomainName": "contoso.com",
                  "AdminCreds": {
                    "UserName": "vmadmin",
                    "Password": "PrivateSettingsRef:AdminPassword"
                  }
                }
              },
              "protectedSettings": {
                "Items": {
                  "AdminPassword": "GEN-PASSWORD"
                }
              }
            }
          }
        ]
      },
      {
        "apiVersion": "2020-12-01",
        "type": "Microsoft.Compute/virtualMachines",
        "name": "rdsh-copyindex()",
        "location": "[resourceGroup().location]",
        "copy": {
          "name": "rdsh-vm-loop",
          "count": 1
        },
        "dependsOn": [
          "Microsoft.Resources/deployments/DeployPrimaryAd",
          "Microsoft.Storage/storageAccounts/[tolower(concat('rdsa',uniqueString(resourceGroup().id)))]",
          "Microsoft.Network/networkInterfaces//rdsh-copyindex()-nic"
        ],
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_D4_v3"
          },
          "availabilitySet": {
            "id": "Microsoft.Compute/availabilitySets/rdsh-availabilityset"
          },
          "osProfile": {
            "computerName": "rdsh-copyIndex()",
            "adminUsername": "vmadmin",
            "adminPassword": "GEN-PASSWORD"
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "MicrosoftWindowsServer",
              "offer": "WindowsServer",
              "sku": "2016-Datacenter",
              "version": "latest"
            },
            "osDisk": {
              "name": "osdisk",
              "vhd": {
                "uri": "[concat(reference(resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName')),'2021-02-01').primaryEndpoints.blob,variables('uniqueStorageAccountContainerName'),'/','rdsh-',copyindex(),'-os-disk.vhd')]"
              },
              "caching": "ReadWrite",
              "createOption": "FromImage"
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "Microsoft.Network/networkInterfaces/rdsh-copyindex()-nic"
              }
            ]
          }
        },
        "resources": [
          {
            "apiVersion": "2020-12-01",
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "rdsh-copyindex()/sessionhost",
            "location": "[resourceGroup().location]",
            "dependsOn": [
              "Microsoft.Compute/virtualMachines/rdsh-copyindex()"
            ],
            "properties": {
              "publisher": "Microsoft.Powershell",
              "type": "DSC",
              "typeHandlerVersion": "2.11",
              "autoUpgradeMinorVersion": true,
              "settings": {
                "ModulesUrl": "[uri(parameters('_artifactsLocation'), concat('Configuration.zip', parameters('_artifactsLocationSasToken')))]",
                "ConfigurationFunction": "Configuration.ps1\\SessionHost",
                "Properties": {
                  "DomainName": "contoso.com",
                  "AdminCreds": {
                    "UserName": "vmadmin",
                    "Password": "PrivateSettingsRef:AdminPassword"
                  }
                }
              },
              "protectedSettings": {
                "Items": {
                  "AdminPassword": "GEN-PASSWORD"
                }
              }
            }
          }
        ]
      },
      {
        "apiVersion": "2020-12-01",
        "type": "Microsoft.Compute/virtualMachines",
        "name": "cb-vm",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "Microsoft.Resources/deployments/DeployPrimaryAd",
          "Microsoft.Storage/storageAccounts//[tolower(concat('rdsa',uniqueString(resourceGroup().id)))]",
          "Microsoft.Network/networkInterfaces//cb-nic",
          "rdsh-vm-loop"
        ],
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_A2"
          },
          "availabilitySet": {
            "id": "Microsoft.Compute/availabilitySets/cb-availabilityset"
          },
          "osProfile": {
            "computerName": "broker",
            "adminUsername": "vmadmin",
            "adminPassword": "GEN-PASSWORD"
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "MicrosoftWindowsServer",
              "offer": "WindowsServer",
              "sku": "2016-Datacenter",
              "version": "latest"
            },
            "osDisk": {
              "name": "osdisk",
              "vhd": {
                "uri": "[concat(reference(resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName')),'2021-02-01').primaryEndpoints.blob,variables('uniqueStorageAccountContainerName'),'/','cb-vm-os-disk.vhd')]"
              },
              "caching": "ReadWrite",
              "createOption": "FromImage"
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "Microsoft.Network/networkInterfaces/cb-nic"
              }
            ]
          }
        }
      },
      {
        "type": "Microsoft.Compute/virtualMachines/extensions",
        "name": "cb-vm/rdsdeployment",
        "apiVersion": "2020-12-01",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "Microsoft.Compute/virtualMachines/cb-vm",
          "Microsoft.Compute/virtualMachines/extensions//gw-vm/gateway",
          "rdsh-vm-loop"
        ],
        "properties": {
          "autoUpgradeMinorVersion": true,
          "protectedSettings": {
            "Items": {
              "adminPassword": "GEN-PASSWORD"
            }
          },
          "publisher": "Microsoft.Powershell",
          "settings": {
            "modulesUrl": "[uri(parameters('_artifactsLocation'), concat('Configuration.zip', parameters('_artifactsLocationSasToken')))]",
            "configurationFunction": "Configuration.ps1\\RDSDeployment",
            "Properties": {
              "adminCreds": {
                "UserName": "vmadmin",
                "Password": "PrivateSettingsRef:adminPassword"
              },
              "connectionBroker": "broker.contoso.com",
              "domainName": "contoso.com",
              "externalfqdn": "[reference(parameters('gwpublicIPAddressName')).dnsSettings.fqdn]",
              "numberOfRdshInstances": 1,
              "sessionHostNamingPrefix": "rdsh-",
              "webAccessServer": "gateway.contoso.com"
            }
          },
          "type": "DSC",
          "typeHandlerVersion": "2.11"
        }
      }
    ],
    "\uff04schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#"
  }
}