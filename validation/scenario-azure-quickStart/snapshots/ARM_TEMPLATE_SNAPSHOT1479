{
  "structure": "filesystem",
  "error": null,
  "reference": "master",
  "contentType": "json",
  "source": "gitConnectorAzureQuickStart",
  "paths": [
    "/quickstarts/microsoft.network/application-gateway-2vms-iis-ssl/azuredeploy.json",
    "/quickstarts/microsoft.network/application-gateway-2vms-iis-ssl/azuredeploy.parameters.json"
  ],
  "timestamp": 1642962908239,
  "queryuser": null,
  "checksum": "99914b932bd37a50b983c5e7c90ae93b",
  "node": {
    "masterSnapshotId": "ARM_TEMPLATE_SNAPSHOT",
    "type": "arm",
    "collection": "armtemplate",
    "paths": [
      "/quickstarts/microsoft.network/application-gateway-2vms-iis-ssl/azuredeploy.json",
      "/quickstarts/microsoft.network/application-gateway-2vms-iis-ssl/azuredeploy.parameters.json"
    ],
    "snapshotId": "ARM_TEMPLATE_SNAPSHOT1479",
    "status": "active",
    "validate": true,
    "resourceTypes": [
      "microsoft.network/publicipaddresses",
      "microsoft.network/virtualnetworks",
      "microsoft.network/networkinterfaces",
      "microsoft.compute/virtualmachines",
      "microsoft.network/networksecuritygroups",
      "microsoft.network/applicationgateways",
      "microsoft.compute/availabilitysets"
    ]
  },
  "snapshotId": "ARM_TEMPLATE_SNAPSHOT1479",
  "collection": "armtemplate",
  "json": {
    "contentVersion": "1.0.0.0",
    "parameters": {
      "adminUsername": {
        "type": "string",
        "minLength": 1,
        "metadata": {
          "description": "Username for the Virtual Machine."
        },
        "value": "GEN-UNIQUE"
      },
      "adminPassword": {
        "type": "securestring",
        "metadata": {
          "description": "Password for the Virtual Machine."
        },
        "value": "GEN-PASSWORD"
      },
      "windowsOSVersion": {
        "type": "string",
        "defaultValue": "2016-Datacenter",
        "allowedValues": [
          "2012-R2-Datacenter",
          "2016-Datacenter"
        ],
        "metadata": {
          "description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version. Allowed values: 2012-R2-Datacenter, 2016-Datacenter."
        }
      },
      "virtualMachineSize": {
        "type": "string",
        "defaultValue": "Standard_D2_v3",
        "metadata": {
          "description": "The virtual machine size. Allowed values: Standard_A1, Standard_A2, Standard_A3."
        }
      },
      "applicationGatewaySize": {
        "type": "string",
        "allowedValues": [
          "WAF_Medium",
          "WAF_Large"
        ],
        "defaultValue": "WAF_Medium",
        "metadata": {
          "description": "Application Gateway size"
        }
      },
      "capacity": {
        "type": "int",
        "defaultValue": 2,
        "metadata": {
          "description": "Number of instances"
        }
      },
      "wafMode": {
        "type": "string",
        "allowedValues": [
          "Detection",
          "Prevention"
        ],
        "defaultValue": "Prevention",
        "metadata": {
          "description": "WAF Mode"
        }
      },
      "frontendCertData": {
        "type": "string",
        "metadata": {
          "description": "Base-64 encoded form of the .pfx file. This is the cert terminating on the Application Gateway."
        },
        "value": "GEN-SELFSIGNED-CERT-PFXDATA"
      },
      "frontendCertPassword": {
        "type": "securestring",
        "metadata": {
          "description": "Password for .pfx certificate"
        },
        "value": "GEN-SELFSIGNED-CERT-PASSWORD"
      },
      "backendCertData": {
        "type": "string",
        "metadata": {
          "description": "Base-64 encoded form of the .pfx file. This is the cert installed on the web servers."
        },
        "value": "GEN-SELFSIGNED-CERT-PFXDATA"
      },
      "backendCertPassword": {
        "type": "securestring",
        "metadata": {
          "description": "Password for .pfx certificate"
        },
        "value": "GEN-SELFSIGNED-CERT-PASSWORD"
      },
      "backendPublicKeyData": {
        "type": "string",
        "metadata": {
          "description": "Base-64 encoded form of the .cer file. This is the public key for the cert on the web servers."
        },
        "value": "GEN-SELFSIGNED-CERT-CERDATA"
      },
      "backendCertDnsName": {
        "type": "string",
        "metadata": {
          "description": "DNS name of the backend cert"
        },
        "value": "GEN-SELFSIGNED-CERT-DNSNAME"
      },
      "_artifactsLocation": {
        "type": "string",
        "metadata": {
          "description": "The base URI where artifacts required by this template are located. For example, if stored on a public GitHub repo, you'd use the following URI: https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/201-vmss-windows-webapp-dsc-autoscale."
        },
        "defaultValue": "[deployment().properties.templatelink.uri]"
      },
      "_artifactsLocationSasToken": {
        "type": "securestring",
        "defaultValue": "",
        "metadata": {
          "description": "The sasToken required to access _artifactsLocation.  If your artifacts are stored on a public repo or public storage account you can leave this blank."
        }
      },
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Location for all resources."
        }
      }
    },
    "variables": {
      "imagePublisher": "MicrosoftWindowsServer",
      "imageOffer": "WindowsServer",
      "vm1NicName": "vm1Nic",
      "vm2NicName": "vm2Nic",
      "addressPrefix": "10.0.0.0/16",
      "webSubnetName": "WebSubnet",
      "webSubnetPrefix": "10.0.0.0/24",
      "appGatewaySubnetName": "AppGatewaySubnet",
      "appGatewaySubnetPrefix": "10.0.1.0/24",
      "vm1PublicIPAddressName": "vm1PublicIP",
      "vm1PublicIPAddressType": "Dynamic",
      "vm2PublicIPAddressName": "vm2PublicIP",
      "vm2PublicIPAddressType": "Dynamic",
      "vm1IpAddress": "10.0.0.4",
      "vm2IpAddress": "10.0.0.5",
      "vm1Name": "iisvm1",
      "vm2Name": "iisvm2",
      "vmSize": "Standard_D2_v3",
      "virtualNetworkName": "MyVNet",
      "webSubnetRef": "Microsoft.Network/virtualNetworks/subnets/MyVNet/WebSubnet",
      "webAvailabilitySetName": "IISAvailabilitySet",
      "webNsgName": "WebNSG",
      "appGwNsgName": "AppGwNSG",
      "applicationGatewayName": "ApplicationGateway",
      "appGwPublicIpName": "ApplicationGatewayPublicIp",
      "appGatewaySubnetRef": "Microsoft.Network/virtualNetworks/subnets/MyVNet/AppGatewaySubnet",
      "appGwPublicIPRef": "Microsoft.Network/publicIPAddresses/ApplicationGatewayPublicIp",
      "wafEnabled": true,
      "wafMode": "Prevention",
      "wafRuleSetType": "OWASP",
      "wafRuleSetVersion": "3.0",
      "dscZipFullPath": "[uri(parameters('_artifactsLocation'), concat('DSC/iisInstall.ps1.zip', parameters('_artifactsLocationSasToken')))]",
      "webConfigFullPath": "[uri(parameters('_artifactsLocation'), concat('artifacts/web.config', parameters('_artifactsLocationSasToken')))]",
      "vm1DefaultHtmFullPath": "[uri(parameters('_artifactsLocation'), concat('artifacts/vm1.default.htm', parameters('_artifactsLocationSasToken')))]",
      "vm2DefaultHtmFullPath": "[uri(parameters('_artifactsLocation'), concat('artifacts/vm2.default.htm', parameters('_artifactsLocationSasToken')))]"
    },
    "resources": [
      {
        "comments": "Availability set for the web servers",
        "type": "Microsoft.Compute/availabilitySets",
        "sku": {
          "name": "Aligned"
        },
        "name": "IISAvailabilitySet",
        "apiVersion": "2020-12-01",
        "location": "[resourceGroup().location]",
        "properties": {
          "platformUpdateDomainCount": 5,
          "platformFaultDomainCount": 2,
          "virtualMachines": [
            {
              "id": "Microsoft.Compute/virtualMachines/iisvm1"
            },
            {
              "id": "Microsoft.Compute/virtualMachines/iisvm2"
            }
          ]
        },
        "dependsOn": [
          "Microsoft.Compute/virtualMachines/iisvm1",
          "Microsoft.Compute/virtualMachines/iisvm2"
        ]
      },
      {
        "apiVersion": "2016-03-30",
        "type": "Microsoft.Network/publicIPAddresses",
        "name": "vm1PublicIP",
        "location": "[resourceGroup().location]",
        "properties": {
          "publicIPAllocationMethod": "Dynamic"
        }
      },
      {
        "apiVersion": "2016-03-30",
        "type": "Microsoft.Network/publicIPAddresses",
        "name": "vm2PublicIP",
        "location": "[resourceGroup().location]",
        "properties": {
          "publicIPAllocationMethod": "Dynamic"
        }
      },
      {
        "apiVersion": "2017-03-01",
        "type": "Microsoft.Network/publicIPAddresses",
        "name": "ApplicationGatewayPublicIp",
        "location": "[resourceGroup().location]",
        "properties": {
          "publicIPAllocationMethod": "Dynamic"
        }
      },
      {
        "apiVersion": "2016-03-30",
        "type": "Microsoft.Network/networkSecurityGroups",
        "name": "WebNSG",
        "location": "[resourceGroup().location]",
        "properties": {
          "securityRules": [
            {
              "name": "Allow80",
              "properties": {
                "description": "Allow 80 from local VNet",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "80",
                "sourceAddressPrefix": "VirtualNetwork",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 100,
                "direction": "Inbound"
              }
            },
            {
              "name": "Allow443",
              "properties": {
                "description": "Allow 443 from local VNet",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "443",
                "sourceAddressPrefix": "VirtualNetwork",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 101,
                "direction": "Inbound"
              }
            },
            {
              "name": "AllowRDP",
              "properties": {
                "description": "Allow RDP from everywhere",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "3389",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 102,
                "direction": "Inbound"
              }
            }
          ]
        }
      },
      {
        "apiVersion": "2016-03-30",
        "type": "Microsoft.Network/networkSecurityGroups",
        "name": "AppGwNSG",
        "location": "[resourceGroup().location]",
        "properties": {
          "securityRules": [
            {
              "name": "Allow80",
              "properties": {
                "description": "Allow 80 from Internet",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "80",
                "sourceAddressPrefix": "Internet",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 100,
                "direction": "Inbound"
              }
            },
            {
              "name": "Allow443",
              "properties": {
                "description": "Allow 443 from Internet",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "443",
                "sourceAddressPrefix": "Internet",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 102,
                "direction": "Inbound"
              }
            },
            {
              "name": "AllowAppGwProbes",
              "properties": {
                "description": "Allow ports for App Gw probes",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "65503-65534 ",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 103,
                "direction": "Inbound"
              }
            }
          ]
        }
      },
      {
        "apiVersion": "2016-03-30",
        "type": "Microsoft.Network/virtualNetworks",
        "name": "MyVNet",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "Microsoft.Network/networkSecurityGroups//WebNSG",
          "Microsoft.Network/networkSecurityGroups//AppGwNSG"
        ],
        "properties": {
          "addressSpace": {
            "addressPrefixes": [
              "10.0.0.0/16"
            ]
          },
          "subnets": [
            {
              "name": "WebSubnet",
              "properties": {
                "addressPrefix": "10.0.0.0/24",
                "networkSecurityGroup": {
                  "id": "Microsoft.Network/networkSecurityGroups/WebNSG"
                }
              }
            },
            {
              "name": "AppGatewaySubnet",
              "properties": {
                "addressPrefix": "10.0.1.0/24",
                "networkSecurityGroup": {
                  "id": "Microsoft.Network/networkSecurityGroups/AppGwNSG"
                }
              }
            }
          ]
        }
      },
      {
        "apiVersion": "2016-03-30",
        "type": "Microsoft.Network/networkInterfaces",
        "name": "vm1Nic",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "Microsoft.Network/publicIPAddresses//vm1PublicIP",
          "Microsoft.Network/virtualNetworks//MyVNet"
        ],
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipconfigVm1",
              "properties": {
                "privateIPAddress": "10.0.0.4",
                "privateIPAllocationMethod": "Static",
                "publicIPAddress": {
                  "id": "Microsoft.Network/publicIPAddresses/vm1PublicIP"
                },
                "subnet": {
                  "id": "Microsoft.Network/virtualNetworks/subnets/MyVNet/WebSubnet"
                }
              }
            }
          ]
        }
      },
      {
        "apiVersion": "2016-03-30",
        "type": "Microsoft.Network/networkInterfaces",
        "name": "vm2Nic",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "Microsoft.Network/publicIPAddresses//vm2PublicIP",
          "Microsoft.Network/virtualNetworks//MyVNet"
        ],
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipconfigVm2",
              "properties": {
                "privateIPAddress": "10.0.0.5",
                "privateIPAllocationMethod": "Static",
                "publicIPAddress": {
                  "id": "Microsoft.Network/publicIPAddresses/vm2PublicIP"
                },
                "subnet": {
                  "id": "Microsoft.Network/virtualNetworks/subnets/MyVNet/WebSubnet"
                }
              }
            }
          ]
        }
      },
      {
        "apiVersion": "2016-04-30-preview",
        "type": "Microsoft.Compute/virtualMachines",
        "name": "iisvm1",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "Microsoft.Network/networkInterfaces//vm1Nic"
        ],
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_D2_v3"
          },
          "osProfile": {
            "computerName": "iisvm1",
            "adminUsername": "GEN-UNIQUE",
            "adminPassword": "GEN-PASSWORD"
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "MicrosoftWindowsServer",
              "offer": "WindowsServer",
              "sku": "2016-Datacenter",
              "version": "latest"
            },
            "osDisk": {
              "name": "iisvm1",
              "caching": "ReadWrite",
              "createOption": "FromImage",
              "managedDisk": {
                "storageAccountType": "StandardSSD_LRS"
              }
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "Microsoft.Network/networkInterfaces/vm1Nic"
              }
            ]
          }
        },
        "resources": [
          {
            "name": "Microsoft.Powershell.DSC",
            "type": "extensions",
            "location": "[resourceGroup().location]",
            "apiVersion": "2016-04-30-preview",
            "dependsOn": [
              "Microsoft.Compute/virtualMachines/iisvm1"
            ],
            "properties": {
              "publisher": "Microsoft.Powershell",
              "type": "DSC",
              "typeHandlerVersion": "2.9",
              "autoUpgradeMinorVersion": true,
              "forceUpdateTag": "1.0",
              "settings": {
                "configuration": {
                  "url": "[uri(parameters('_artifactsLocation'), concat('DSC/iisInstall.ps1.zip', parameters('_artifactsLocationSasToken')))]",
                  "script": "iisInstall.ps1",
                  "function": "InstallIIS"
                },
                "configurationArguments": {
                  "nodeName": "iisvm1",
                  "vmNumber": "vm1",
                  "backendCert": "GEN-SELFSIGNED-CERT-PFXDATA",
                  "backendCertPw": "GEN-SELFSIGNED-CERT-PASSWORD",
                  "backendCertDnsName": "GEN-SELFSIGNED-CERT-DNSNAME",
                  "webConfigPath": "[uri(parameters('_artifactsLocation'), concat('artifacts/web.config', parameters('_artifactsLocationSasToken')))]",
                  "defaultHtmPath": "[uri(parameters('_artifactsLocation'), concat('artifacts/vm1.default.htm', parameters('_artifactsLocationSasToken')))]"
                }
              }
            }
          }
        ]
      },
      {
        "apiVersion": "2016-04-30-preview",
        "type": "Microsoft.Compute/virtualMachines",
        "name": "iisvm2",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "Microsoft.Network/networkInterfaces//vm2Nic"
        ],
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_D2_v3"
          },
          "osProfile": {
            "computerName": "iisvm2",
            "adminUsername": "GEN-UNIQUE",
            "adminPassword": "GEN-PASSWORD"
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "MicrosoftWindowsServer",
              "offer": "WindowsServer",
              "sku": "2016-Datacenter",
              "version": "latest"
            },
            "osDisk": {
              "name": "iisvm2",
              "caching": "ReadWrite",
              "createOption": "FromImage",
              "managedDisk": {
                "storageAccountType": "StandardSSD_LRS"
              }
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "Microsoft.Network/networkInterfaces/vm2Nic"
              }
            ]
          }
        },
        "resources": [
          {
            "name": "Microsoft.Powershell.DSC",
            "type": "extensions",
            "location": "[resourceGroup().location]",
            "apiVersion": "2016-04-30-preview",
            "dependsOn": [
              "Microsoft.Compute/virtualMachines/iisvm2"
            ],
            "properties": {
              "publisher": "Microsoft.Powershell",
              "type": "DSC",
              "typeHandlerVersion": "2.9",
              "autoUpgradeMinorVersion": true,
              "forceUpdateTag": "1.0",
              "settings": {
                "configuration": {
                  "url": "[uri(parameters('_artifactsLocation'), concat('DSC/iisInstall.ps1.zip', parameters('_artifactsLocationSasToken')))]",
                  "script": "iisInstall.ps1",
                  "function": "InstallIIS"
                },
                "configurationArguments": {
                  "nodeName": "iisvm2",
                  "vmNumber": "vm2",
                  "backendCert": "GEN-SELFSIGNED-CERT-PFXDATA",
                  "backendCertPw": "GEN-SELFSIGNED-CERT-PASSWORD",
                  "backendCertDnsName": "GEN-SELFSIGNED-CERT-DNSNAME",
                  "webConfigPath": "[uri(parameters('_artifactsLocation'), concat('artifacts/web.config', parameters('_artifactsLocationSasToken')))]",
                  "defaultHtmPath": "[uri(parameters('_artifactsLocation'), concat('artifacts/vm2.default.htm', parameters('_artifactsLocationSasToken')))]"
                }
              }
            }
          }
        ]
      },
      {
        "apiVersion": "2017-06-01",
        "name": "ApplicationGateway",
        "type": "Microsoft.Network/applicationGateways",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "Microsoft.Network/virtualNetworks//MyVNet",
          "Microsoft.Network/publicIPAddresses//ApplicationGatewayPublicIp"
        ],
        "properties": {
          "sku": {
            "name": "WAF_Medium",
            "tier": "WAF",
            "capacity": 2
          },
          "sslCertificates": [
            {
              "name": "appGatewayFrontEndSslCert",
              "properties": {
                "data": "GEN-SELFSIGNED-CERT-PFXDATA",
                "password": "GEN-SELFSIGNED-CERT-PASSWORD"
              }
            }
          ],
          "gatewayIPConfigurations": [
            {
              "name": "appGatewayIpConfig",
              "properties": {
                "subnet": {
                  "id": "Microsoft.Network/virtualNetworks/subnets/MyVNet/AppGatewaySubnet"
                }
              }
            }
          ],
          "authenticationCertificates": [
            {
              "properties": {
                "data": "GEN-SELFSIGNED-CERT-CERDATA"
              },
              "name": "appGatewayBackendCert"
            }
          ],
          "frontendIPConfigurations": [
            {
              "name": "appGatewayFrontendIP",
              "properties": {
                "PublicIPAddress": {
                  "id": "Microsoft.Network/publicIPAddresses/ApplicationGatewayPublicIp"
                }
              }
            }
          ],
          "frontendPorts": [
            {
              "name": "appGatewayFrontendPort80",
              "properties": {
                "Port": 80
              }
            },
            {
              "name": "appGatewayFrontendPort443",
              "properties": {
                "Port": 443
              }
            }
          ],
          "backendAddressPools": [
            {
              "name": "appGatewayBackendPool",
              "properties": {
                "BackendAddresses": [
                  {
                    "IpAddress": "10.0.0.4"
                  },
                  {
                    "IpAddress": "10.0.0.5"
                  }
                ]
              }
            }
          ],
          "backendHttpSettingsCollection": [
            {
              "name": "appGatewayBackendHttpSettings",
              "properties": {
                "Port": 80,
                "Protocol": "Http",
                "CookieBasedAffinity": "Disabled"
              }
            },
            {
              "name": "appGatewayBackendHttpsSettings",
              "properties": {
                "Port": 443,
                "Protocol": "Https",
                "CookieBasedAffinity": "Disabled",
                "AuthenticationCertificates": [
                  {
                    "Id": "Microsoft.Network/applicationGateways/authenticationCertificates/ApplicationGateway/appGatewayBackendCert"
                  }
                ]
              }
            }
          ],
          "httpListeners": [
            {
              "name": "appGatewayHttpListener",
              "properties": {
                "FrontendIPConfiguration": {
                  "Id": "Microsoft.Network/applicationGateways/frontendIPConfigurations/ApplicationGateway/appGatewayFrontendIP"
                },
                "FrontendPort": {
                  "Id": "Microsoft.Network/applicationGateways/frontendPorts/ApplicationGateway/appGatewayFrontendPort80"
                },
                "Protocol": "Http"
              }
            },
            {
              "name": "appGatewayHttpsListener",
              "properties": {
                "FrontendIPConfiguration": {
                  "Id": "Microsoft.Network/applicationGateways/frontendIPConfigurations/ApplicationGateway/appGatewayFrontendIP"
                },
                "FrontendPort": {
                  "Id": "Microsoft.Network/applicationGateways/frontendPorts/ApplicationGateway/appGatewayFrontendPort443"
                },
                "Protocol": "Https",
                "SslCertificate": {
                  "Id": "Microsoft.Network/applicationGateways/sslCertificates/ApplicationGateway/appGatewayFrontEndSslCert"
                }
              }
            }
          ],
          "requestRoutingRules": [
            {
              "Name": "HTTPRule",
              "properties": {
                "RuleType": "Basic",
                "httpListener": {
                  "id": "Microsoft.Network/applicationGateways/httpListeners/ApplicationGateway/appGatewayHttpListener"
                },
                "backendAddressPool": {
                  "id": "Microsoft.Network/applicationGateways/backendAddressPools/ApplicationGateway/appGatewayBackendPool"
                },
                "backendHttpSettings": {
                  "id": "Microsoft.Network/applicationGateways/backendHttpSettingsCollection/ApplicationGateway/appGatewayBackendHttpSettings"
                }
              }
            },
            {
              "Name": "HTTPSRule",
              "properties": {
                "RuleType": "Basic",
                "httpListener": {
                  "id": "Microsoft.Network/applicationGateways/httpListeners/ApplicationGateway/appGatewayHttpsListener"
                },
                "backendAddressPool": {
                  "id": "Microsoft.Network/applicationGateways/backendAddressPools/ApplicationGateway/appGatewayBackendPool"
                },
                "backendHttpSettings": {
                  "id": "Microsoft.Network/applicationGateways/backendHttpSettingsCollection/ApplicationGateway/appGatewayBackendHttpsSettings"
                }
              }
            }
          ],
          "webApplicationFirewallConfiguration": {
            "enabled": true,
            "firewallMode": "Prevention",
            "ruleSetType": "OWASP",
            "ruleSetVersion": "3.0"
          }
        }
      }
    ],
    "outputs": {},
    "\uff04schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#"
  }
}