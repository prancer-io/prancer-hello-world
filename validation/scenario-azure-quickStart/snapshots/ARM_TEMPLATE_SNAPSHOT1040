{
  "structure": "filesystem",
  "error": null,
  "reference": "master",
  "contentType": "json",
  "source": "gitConnectorAzureQuickStart",
  "paths": [
    "/quickstarts/microsoft.compute/encrypt-vmss-windows-jumpbox/azuredeploy.json",
    "/quickstarts/microsoft.compute/encrypt-vmss-windows-jumpbox/azuredeploy.parameters.json"
  ],
  "timestamp": 1642962903859,
  "queryuser": null,
  "checksum": "99914b932bd37a50b983c5e7c90ae93b",
  "node": {
    "masterSnapshotId": "ARM_TEMPLATE_SNAPSHOT",
    "type": "arm",
    "collection": "armtemplate",
    "paths": [
      "/quickstarts/microsoft.compute/encrypt-vmss-windows-jumpbox/azuredeploy.json",
      "/quickstarts/microsoft.compute/encrypt-vmss-windows-jumpbox/azuredeploy.parameters.json"
    ],
    "snapshotId": "ARM_TEMPLATE_SNAPSHOT1040",
    "status": "active",
    "validate": true,
    "resourceTypes": [
      "microsoft.network/publicipaddresses",
      "microsoft.network/virtualnetworks",
      "microsoft.network/networkinterfaces",
      "microsoft.compute/virtualmachinescalesets",
      "microsoft.compute/virtualmachinescalesets/extensions",
      "microsoft.compute/virtualmachines",
      "microsoft.storage/storageaccounts",
      "microsoft.keyvault/vaults"
    ]
  },
  "snapshotId": "ARM_TEMPLATE_SNAPSHOT1040",
  "collection": "armtemplate",
  "json": {
    "contentVersion": "1.0.0.0",
    "parameters": {
      "vmssName": {
        "type": "string",
        "metadata": {
          "description": "String used as a base for naming resources. Must be 3-61 characters in length and globally unique across Azure. A hash is prepended to this string for some resources, and resource-specific information is appended."
        },
        "maxLength": 61,
        "value": "GEN-UNIQUE"
      },
      "vmSku": {
        "type": "string",
        "defaultValue": "Standard_A1",
        "metadata": {
          "description": "Size of VMs in the VM Scale Set."
        },
        "value": "Standard_A1"
      },
      "imagePublisher": {
        "type": "string",
        "defaultValue": "MicrosoftWindowsServer",
        "metadata": {
          "description": "Publisher of OS image."
        },
        "value": "MicrosoftWindowsServer"
      },
      "imageOffer": {
        "type": "string",
        "defaultValue": "WindowsServer",
        "metadata": {
          "description": "OS image offer"
        },
        "value": "WindowsServer"
      },
      "imageSku": {
        "type": "string",
        "defaultValue": "2012-R2-Datacenter",
        "metadata": {
          "description": "OS image SKU"
        },
        "value": "2012-R2-Datacenter"
      },
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Default location"
        }
      },
      "osVersion": {
        "type": "string",
        "defaultValue": "latest",
        "metadata": {
          "description": "OS Version. This will pick a fully patched image of this given OS version. Example values: 2008-R2-SP1, 2012-Datacenter, 2012-R2-Datacenter."
        },
        "value": "latest"
      },
      "instanceCount": {
        "type": "int",
        "defaultValue": 2,
        "metadata": {
          "description": "Number of VM instances (100 or less)."
        },
        "minValue": 2,
        "maxValue": 100,
        "value": 2
      },
      "adminUsername": {
        "type": "string",
        "metadata": {
          "description": "Admin username on all VMs."
        },
        "value": "GEN-UNIQUE"
      },
      "adminPassword": {
        "type": "securestring",
        "metadata": {
          "description": "Admin password on all VMs."
        },
        "value": "GEN-PASSWORD"
      },
      "keyVaultName": {
        "type": "string",
        "metadata": {
          "description": "Name of the KeyVault to place the volume encryption key"
        },
        "value": "GEN-UNIQUE"
      },
      "enabledForDeployment": {
        "type": "bool",
        "defaultValue": true,
        "metadata": {
          "description": "Specifies whether Azure Virtual Machines are permitted to retrieve certificates stored as secrets from the key vault."
        }
      },
      "enabledForDiskEncryption": {
        "type": "bool",
        "defaultValue": true,
        "metadata": {
          "description": "Specifies whether Azure Disk Encryption is permitted to retrieve secrets from the vault and unwrap keys."
        }
      },
      "enabledForTemplateDeployment": {
        "type": "bool",
        "defaultValue": true,
        "metadata": {
          "description": "Specifies whether Azure Resource Manager is permitted to retrieve secrets from the key vault."
        }
      },
      "keysPermissions": {
        "type": "array",
        "defaultValue": [
          "list",
          "get",
          "decrypt",
          "encrypt",
          "unwrapkey",
          "wrapkey"
        ],
        "metadata": {
          "description": "Specifies the permissions to keys in the vault. Valid values are: all, encrypt, decrypt, wrapKey, unwrapKey, sign, verify, get, list, create, update, import, delete, backup, restore, recover, and purge."
        }
      },
      "secretsPermissions": {
        "type": "array",
        "defaultValue": [
          "list",
          "get"
        ],
        "metadata": {
          "description": "Specifies the permissions to secrets in the vault. Valid values are: all, get, list, set, delete, backup, restore, recover, and purge."
        }
      },
      "skuName": {
        "type": "string",
        "defaultValue": "Standard",
        "allowedValues": [
          "Standard",
          "Premium"
        ],
        "metadata": {
          "description": "Specifies whether the key vault is a standard vault or a premium vault."
        }
      }
    },
    "variables": {
      "namingInfix": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]",
      "longNamingInfix": "[toLower(parameters('vmssName'))]",
      "jumpBoxName": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]jbox",
      "jumpBoxSAName": "[concat('jumpboxsa', uniqueString(resourceGroup().id))]",
      "jumpBoxOSDiskName": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]jboxosdisk",
      "jumpBoxIPConfigName": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]jboxipconfig",
      "jumpBoxNicName": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]jboxnic",
      "storageAccountType": "Standard_LRS",
      "addressPrefix": "10.0.0.0/16",
      "subnetPrefix": "10.0.0.0/24",
      "virtualNetworkName": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]vnet",
      "subnetName": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]subnet",
      "subnetRef": "Microsoft.Network/virtualNetworks/subnets/[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]vnet/[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]subnet",
      "publicIPAddressName": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]pip",
      "nicName": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]nic",
      "ipConfigName": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]ipconfig",
      "osType": {
        "publisher": "MicrosoftWindowsServer",
        "offer": "WindowsServer",
        "sku": "2012-R2-Datacenter",
        "version": "latest"
      },
      "imageReference": {
        "publisher": "MicrosoftWindowsServer",
        "offer": "WindowsServer",
        "sku": "2012-R2-Datacenter",
        "version": "latest"
      },
      "keyVaultURL": "[concat('https://', parameters('keyVaultName'), environment().suffixes.keyVaultDns)]",
      "encryptionOperation": "EnableEncryption",
      "keyVaultResourceId": "Microsoft.KeyVault/vaults/GEN-UNIQUE"
    },
    "resources": [
      {
        "type": "Microsoft.Network/virtualNetworks",
        "name": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]vnet",
        "location": "[resourceGroup().location]",
        "apiVersion": "2020-08-01",
        "properties": {
          "addressSpace": {
            "addressPrefixes": [
              "10.0.0.0/16"
            ]
          },
          "subnets": [
            {
              "name": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]subnet",
              "properties": {
                "addressPrefix": "10.0.0.0/24"
              }
            }
          ]
        }
      },
      {
        "type": "Microsoft.Storage/storageAccounts",
        "name": "[variables('jumpBoxSAName')]",
        "location": "[resourceGroup().location]",
        "apiVersion": "2019-06-01",
        "sku": {
          "name": "Standard_LRS"
        },
        "kind": "StorageV2",
        "properties": {}
      },
      {
        "type": "Microsoft.Network/publicIPAddresses",
        "name": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]pip",
        "location": "[resourceGroup().location]",
        "apiVersion": "2017-09-01",
        "properties": {
          "publicIPAllocationMethod": "Dynamic",
          "dnsSettings": {
            "domainNameLabel": "[toLower(parameters('vmssName'))]"
          }
        }
      },
      {
        "type": "Microsoft.Network/networkInterfaces",
        "name": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]jboxnic",
        "location": "[resourceGroup().location]",
        "apiVersion": "2017-09-01",
        "dependsOn": [
          "Microsoft.Network/publicIPAddresses//[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]pip",
          "Microsoft.Network/virtualNetworks//[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]vnet"
        ],
        "properties": {
          "ipConfigurations": [
            {
              "name": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]jboxipconfig",
              "properties": {
                "privateIPAllocationMethod": "Dynamic",
                "publicIPAddress": {
                  "id": "Microsoft.Network/publicIPAddresses/[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]pip"
                },
                "subnet": {
                  "id": "Microsoft.Network/virtualNetworks/subnets/[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]vnet/[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]subnet"
                }
              }
            }
          ]
        }
      },
      {
        "type": "Microsoft.Compute/virtualMachines",
        "name": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]jbox",
        "location": "[resourceGroup().location]",
        "apiVersion": "2017-03-30",
        "dependsOn": [
          "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]jboxnic"
        ],
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_A1"
          },
          "osProfile": {
            "computerName": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]jbox",
            "adminUsername": "GEN-UNIQUE",
            "adminPassword": "GEN-PASSWORD"
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "MicrosoftWindowsServer",
              "offer": "WindowsServer",
              "sku": "2012-R2-Datacenter",
              "version": "latest"
            },
            "osDisk": {
              "name": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]jboxosdisk",
              "caching": "ReadWrite",
              "createOption": "FromImage"
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "Microsoft.Network/networkInterfaces/[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]jboxnic"
              }
            ]
          },
          "diagnosticsProfile": {
            "bootDiagnostics": {
              "enabled": true,
              "storageUri": "[reference(variables('jumpBoxSAName')).primaryEndpoints.blob]"
            }
          }
        }
      },
      {
        "type": "Microsoft.KeyVault/vaults",
        "apiVersion": "2019-09-01",
        "name": "GEN-UNIQUE",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "Microsoft.Compute/virtualMachineScaleSets/GEN-UNIQUE"
        ],
        "properties": {
          "enabledForDeployment": true,
          "enabledForDiskEncryption": true,
          "enabledForTemplateDeployment": true,
          "tenantId": "[subscription().tenantId]",
          "accessPolicies": [
            {
              "objectId": "[reference(resourceId('Microsoft.Compute/virtualMachineScaleSets/', parameters('vmssName')), '2019-07-01', 'full').identity.principalId]",
              "tenantId": "[subscription().tenantId]",
              "permissions": {
                "keys": [
                  "list",
                  "get",
                  "decrypt",
                  "encrypt",
                  "unwrapkey",
                  "wrapkey"
                ],
                "secrets": [
                  "list",
                  "get"
                ]
              }
            }
          ],
          "sku": {
            "name": "Standard",
            "family": "A"
          },
          "networkAcls": {
            "defaultAction": "Allow",
            "bypass": "AzureServices"
          }
        }
      },
      {
        "type": "Microsoft.Compute/virtualMachineScaleSets",
        "name": "GEN-UNIQUE",
        "location": "[resourceGroup().location]",
        "apiVersion": "2017-03-30",
        "dependsOn": [
          "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]vnet"
        ],
        "identity": {
          "type": "SystemAssigned"
        },
        "sku": {
          "name": "Standard_A1",
          "tier": "Standard",
          "capacity": 2
        },
        "properties": {
          "overprovision": true,
          "upgradePolicy": {
            "mode": "Automatic"
          },
          "virtualMachineProfile": {
            "storageProfile": {
              "osDisk": {
                "createOption": "FromImage"
              },
              "imageReference": {
                "publisher": "MicrosoftWindowsServer",
                "offer": "WindowsServer",
                "sku": "2012-R2-Datacenter",
                "version": "latest"
              }
            },
            "osProfile": {
              "computerNamePrefix": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]",
              "adminUsername": "GEN-UNIQUE",
              "adminPassword": "GEN-PASSWORD"
            },
            "networkProfile": {
              "networkInterfaceConfigurations": [
                {
                  "name": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]nic",
                  "properties": {
                    "primary": true,
                    "ipConfigurations": [
                      {
                        "name": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]ipconfig",
                        "properties": {
                          "subnet": {
                            "id": "Microsoft.Network/virtualNetworks/subnets/[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]vnet/[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]subnet"
                          }
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      },
      {
        "type": "Microsoft.Compute/virtualMachineScaleSets/extensions",
        "name": "GEN-UNIQUE/diskEncryption",
        "apiVersion": "2019-03-01",
        "dependsOn": [
          "Microsoft.KeyVault/vaults/GEN-UNIQUE"
        ],
        "location": "[resourceGroup().location]",
        "properties": {
          "publisher": "Microsoft.Azure.Security",
          "type": "AzureDiskEncryption",
          "typeHandlerVersion": "2.2",
          "autoUpgradeMinorVersion": true,
          "settings": {
            "EncryptionOperation": "EnableEncryption",
            "KeyVaultURL": "[variables('keyVaultURL')]",
            "KeyVaultResourceId": "Microsoft.KeyVault/vaults/GEN-UNIQUE",
            "VolumeType": "All"
          }
        }
      }
    ],
    "\uff04schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#"
  }
}