{
  "structure": "filesystem",
  "error": null,
  "reference": "master",
  "contentType": "json",
  "source": "gitConnectorAzureQuickStart",
  "paths": [
    "/quickstarts/microsoft.containerinstance/aci-sftp-files/azuredeploy.json",
    "/quickstarts/microsoft.containerinstance/aci-sftp-files/azuredeploy.parameters.json"
  ],
  "timestamp": 1642962905401,
  "queryuser": null,
  "checksum": "99914b932bd37a50b983c5e7c90ae93b",
  "node": {
    "masterSnapshotId": "ARM_TEMPLATE_SNAPSHOT",
    "type": "arm",
    "collection": "armtemplate",
    "paths": [
      "/quickstarts/microsoft.containerinstance/aci-sftp-files/azuredeploy.json",
      "/quickstarts/microsoft.containerinstance/aci-sftp-files/azuredeploy.parameters.json"
    ],
    "snapshotId": "ARM_TEMPLATE_SNAPSHOT1187",
    "status": "active",
    "validate": true,
    "resourceTypes": [
      "microsoft.authorization/roleassignments",
      "microsoft.resources/deploymentscripts",
      "microsoft.storage/storageaccounts",
      "microsoft.managedidentity/userassignedidentities",
      "microsoft.containerinstance/containergroups"
    ]
  },
  "snapshotId": "ARM_TEMPLATE_SNAPSHOT1187",
  "collection": "armtemplate",
  "json": {
    "contentVersion": "1.0.0.0",
    "metadata": {
      "_generator": {
        "name": "bicep",
        "version": "0.4.613.9944",
        "templateHash": "6593852950001175225"
      }
    },
    "parameters": {
      "storageAccountType": {
        "type": "string",
        "defaultValue": "Standard_LRS",
        "allowedValues": [
          "Standard_LRS",
          "Standard_GRS"
        ],
        "metadata": {
          "description": "Storage account type"
        }
      },
      "fileShareName": {
        "type": "string",
        "defaultValue": "sftpfileshare",
        "metadata": {
          "description": "Name of file share to be created"
        }
      },
      "sftpUser": {
        "type": "string",
        "metadata": {
          "description": "Username to use for SFTP access"
        },
        "value": "GEN-UNIQUE-6"
      },
      "sftpPassword": {
        "type": "secureString",
        "metadata": {
          "description": "Password to use for SFTP access"
        },
        "value": "GEN-PASSWORD"
      },
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Primary location for resources"
        }
      }
    },
    "functions": [],
    "variables": {
      "scriptName": "createFileShare",
      "identityName": "scratch",
      "roleDefinitionId": "Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c",
      "roleAssignmentName": "[guid(variables('identityName'), variables('roleDefinitionId'))]",
      "sftpContainerName": "sftp",
      "sftpContainerGroupName": "sftp-group",
      "sftpContainerImage": "atmoz/sftp:latest",
      "sftpEnvVariable": "[format('{0}:{1}:1001', parameters('sftpUser'), parameters('sftpPassword'))]",
      "storageAccountName": "[format('sftpstg{0}', uniqueString(resourceGroup().id))]"
    },
    "resources": [
      {
        "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
        "apiVersion": "2018-11-30",
        "name": "scratch",
        "location": "[resourceGroup().location]"
      },
      {
        "type": "Microsoft.Authorization/roleAssignments",
        "apiVersion": "2020-04-01-preview",
        "scope": "[format('Microsoft.Storage/storageAccounts/{0}', variables('storageAccountName'))]",
        "name": "[guid(variables('identityName'), variables('roleDefinitionId'))]",
        "properties": {
          "roleDefinitionId": "Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c",
          "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('identityName'))).principalId]",
          "principalType": "ServicePrincipal"
        },
        "dependsOn": [
          "Microsoft.ManagedIdentity/userAssignedIdentities/scratch",
          "Microsoft.Storage/storageAccounts/[format('sftpstg{0}', uniqueString(resourceGroup().id))]"
        ]
      },
      {
        "type": "Microsoft.Storage/storageAccounts",
        "apiVersion": "2021-04-01",
        "name": "[format('sftpstg{0}', uniqueString(resourceGroup().id))]",
        "location": "[resourceGroup().location]",
        "sku": {
          "name": "Standard_LRS"
        },
        "kind": "StorageV2"
      },
      {
        "type": "Microsoft.Resources/deploymentScripts",
        "apiVersion": "2020-10-01",
        "name": "createFileShare",
        "location": "[resourceGroup().location]",
        "kind": "AzurePowerShell",
        "identity": {
          "type": "UserAssigned",
          "userAssignedIdentities": {
            "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('identityName'))]": {}
          }
        },
        "properties": {
          "forceUpdateTag": "1",
          "azPowerShellVersion": "3.0",
          "arguments": "[format(' -storageAccountName {0} -fileShareName {1} -resourceGroupName {2}', variables('storageAccountName'), parameters('fileShareName'), resourceGroup().name)]",
          "scriptContent": "param([string] $storageAccountName, [string] $fileShareName, [string] $resourceGroupName) Get-AzStorageAccount -StorageAccountName $storageAccountName -ResourceGroupName $resourceGroupName | New-AzStorageShare -Name $fileShareName",
          "timeout": "PT5M",
          "cleanupPreference": "OnSuccess",
          "retentionInterval": "P1D"
        },
        "dependsOn": [
          "Microsoft.ManagedIdentity/userAssignedIdentities/scratch",
          "Microsoft.Storage/storageAccounts/[format('sftpstg{0}', uniqueString(resourceGroup().id))]"
        ]
      },
      {
        "type": "Microsoft.ContainerInstance/containerGroups",
        "apiVersion": "2019-12-01",
        "name": "sftp-group",
        "location": "[resourceGroup().location]",
        "properties": {
          "containers": [
            {
              "name": "sftp",
              "properties": {
                "image": "atmoz/sftp:latest",
                "environmentVariables": [
                  {
                    "name": "SFTP_USERS",
                    "value": "[format('{0}:{1}:1001', parameters('sftpUser'), parameters('sftpPassword'))]"
                  }
                ],
                "resources": {
                  "requests": {
                    "cpu": 2,
                    "memoryInGB": 1
                  }
                },
                "ports": [
                  {
                    "port": 22
                  }
                ],
                "volumeMounts": [
                  {
                    "name": "sftpvolume",
                    "mountPath": "[format('/home/{0}/upload', parameters('sftpUser'))]",
                    "readOnly": false
                  }
                ]
              }
            }
          ],
          "osType": "Linux",
          "ipAddress": {
            "type": "Public",
            "ports": [
              {
                "protocol": "TCP",
                "port": 22
              }
            ]
          },
          "restartPolicy": "OnFailure",
          "volumes": [
            {
              "name": "sftpvolume",
              "azureFile": {
                "readOnly": false,
                "shareName": "sftpfileshare",
                "storageAccountName": "[format('sftpstg{0}', uniqueString(resourceGroup().id))]",
                "storageAccountKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2021-04-01').keys[0].value]"
              }
            }
          ]
        },
        "dependsOn": [
          "Microsoft.Resources/deploymentScripts/createFileShare",
          "Microsoft.Storage/storageAccounts/[format('sftpstg{0}', uniqueString(resourceGroup().id))]"
        ]
      }
    ],
    "outputs": {
      "containerIpv4Address": {
        "type": "string",
        "value": "[reference(resourceId('Microsoft.ContainerInstance/containerGroups', variables('sftpContainerGroupName'))).ipAddress.ip]"
      }
    },
    "\uff04schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#"
  }
}