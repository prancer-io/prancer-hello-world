{
  "structure": "filesystem",
  "error": null,
  "reference": "master",
  "contentType": "json",
  "source": "gitConnectorAzureQuickStart",
  "paths": [
    "/quickstarts/microsoft.apimanagement/api-management-key-vault-create/azuredeploy.json",
    "/quickstarts/microsoft.apimanagement/api-management-key-vault-create/azuredeploy.parameters.json"
  ],
  "timestamp": 1642962902807,
  "queryuser": null,
  "checksum": "99914b932bd37a50b983c5e7c90ae93b",
  "node": {
    "masterSnapshotId": "ARM_TEMPLATE_SNAPSHOT",
    "type": "arm",
    "collection": "armtemplate",
    "paths": [
      "/quickstarts/microsoft.apimanagement/api-management-key-vault-create/azuredeploy.json",
      "/quickstarts/microsoft.apimanagement/api-management-key-vault-create/azuredeploy.parameters.json"
    ],
    "snapshotId": "ARM_TEMPLATE_SNAPSHOT925",
    "status": "active",
    "validate": true,
    "resourceTypes": [
      "microsoft.authorization/roleassignments",
      "microsoft.apimanagement/service",
      "microsoft.keyvault/vaults/secrets",
      "microsoft.keyvault/vaults",
      "microsoft.managedidentity/userassignedidentities"
    ]
  },
  "snapshotId": "ARM_TEMPLATE_SNAPSHOT925",
  "collection": "armtemplate",
  "json": {
    "contentVersion": "1.0.0.0",
    "metadata": {
      "_generator": {
        "name": "bicep",
        "version": "0.4.1008.15138",
        "templateHash": "17903284954599746970"
      }
    },
    "parameters": {
      "apiManagementServiceName": {
        "type": "string",
        "defaultValue": "[format('apim-{0}', uniqueString(resourceGroup().id))]",
        "metadata": {
          "description": "Name of the API Management Service to provision"
        }
      },
      "publisherEmail": {
        "type": "string",
        "defaultValue": "contoso@contoso.com",
        "minLength": 1,
        "metadata": {
          "description": "The email address of the owner of the service"
        }
      },
      "publisherName": {
        "type": "string",
        "defaultValue": "Contoso",
        "minLength": 1,
        "metadata": {
          "description": "The name of the owner of the service"
        }
      },
      "sku": {
        "type": "string",
        "defaultValue": "Standard",
        "allowedValues": [
          "Basic",
          "Consumption",
          "Developer",
          "Standard",
          "Premium"
        ],
        "metadata": {
          "description": "The pricing tier of this API Management service"
        }
      },
      "skuCount": {
        "type": "int",
        "defaultValue": 1,
        "metadata": {
          "description": "The instance size of this API Management service."
        }
      },
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Location for all resources."
        }
      },
      "keyVaultName": {
        "type": "string",
        "defaultValue": "[format('kv-{0}', uniqueString(resourceGroup().id))]",
        "metadata": {
          "description": "Name of the KeyVault to provision"
        }
      },
      "sslCertValue": {
        "type": "secureString",
        "metadata": {
          "description": "The base64 encoded SSL certificate in PFX format to be stored in Key Vault. CN and SAN must match the custom hostname of API Management Service."
        },
        "value": "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"
      },
      "gatewayCustomHostname": {
        "type": "string",
        "metadata": {
          "description": "Name of the gateway custom hostname"
        },
        "value": "gateway.apimtesting.net"
      }
    },
    "functions": [],
    "variables": {
      "identityName": "[format('id-{0}', uniqueString(resourceGroup().id))]",
      "keyVaultSecretsUserRoleDefinitionId": "4633458b-17de-408a-b874-0445c86b69e6"
    },
    "resources": [
      {
        "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
        "apiVersion": "2018-11-30",
        "name": "[format('id-{0}', uniqueString(resourceGroup().id))]",
        "location": "[resourceGroup().location]"
      },
      {
        "type": "Microsoft.KeyVault/vaults",
        "apiVersion": "2021-06-01-preview",
        "name": "[format('kv-{0}', uniqueString(resourceGroup().id))]",
        "location": "[resourceGroup().location]",
        "properties": {
          "sku": {
            "name": "standard",
            "family": "A"
          },
          "tenantId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('identityName'))).tenantId]",
          "enableRbacAuthorization": true,
          "enableSoftDelete": true
        },
        "dependsOn": [
          "Microsoft.ManagedIdentity/userAssignedIdentities/[format('id-{0}', uniqueString(resourceGroup().id))]"
        ]
      },
      {
        "type": "Microsoft.KeyVault/vaults/secrets",
        "apiVersion": "2019-09-01",
        "name": "[format('{0}/sslCert', parameters('keyVaultName'))]",
        "properties": {
          "value": "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",
          "contentType": "application/x-pkcs12",
          "attributes": {
            "enabled": true
          }
        },
        "dependsOn": [
          "Microsoft.KeyVault/vaults/[format('kv-{0}', uniqueString(resourceGroup().id))]"
        ]
      },
      {
        "type": "Microsoft.Authorization/roleAssignments",
        "apiVersion": "2020-04-01-preview",
        "scope": "[format('Microsoft.KeyVault/vaults/{0}', parameters('keyVaultName'))]",
        "name": "[guid(variables('keyVaultSecretsUserRoleDefinitionId'), resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('identityName')), resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName')))]",
        "properties": {
          "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', variables('keyVaultSecretsUserRoleDefinitionId'))]",
          "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('identityName'))).principalId]",
          "principalType": "ServicePrincipal"
        },
        "dependsOn": [
          "Microsoft.KeyVault/vaults/[format('kv-{0}', uniqueString(resourceGroup().id))]",
          "Microsoft.ManagedIdentity/userAssignedIdentities/[format('id-{0}', uniqueString(resourceGroup().id))]"
        ]
      },
      {
        "type": "Microsoft.ApiManagement/service",
        "apiVersion": "2021-04-01-preview",
        "name": "[format('apim-{0}', uniqueString(resourceGroup().id))]",
        "location": "[resourceGroup().location]",
        "identity": {
          "type": "UserAssigned",
          "userAssignedIdentities": {
            "[format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('identityName')))]": {}
          }
        },
        "sku": {
          "name": "Standard",
          "capacity": 1
        },
        "properties": {
          "hostnameConfigurations": [
            {
              "type": "Proxy",
              "hostName": "gateway.apimtesting.net",
              "keyVaultId": "[reference(resourceId('Microsoft.KeyVault/vaults/secrets', split(format('{0}/sslCert', parameters('keyVaultName')), '/')[0], split(format('{0}/sslCert', parameters('keyVaultName')), '/')[1])).secretUri]",
              "identityClientId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('identityName'))).clientId]",
              "defaultSslBinding": true
            }
          ],
          "publisherEmail": "contoso@contoso.com",
          "publisherName": "Contoso",
          "customProperties": {
            "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA": "false",
            "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA": "false",
            "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA": "false",
            "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA": "false",
            "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TLS_RSA_WITH_AES_128_GCM_SHA256": "false",
            "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TLS_RSA_WITH_AES_256_CBC_SHA256": "false",
            "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TLS_RSA_WITH_AES_128_CBC_SHA256": "false",
            "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TLS_RSA_WITH_AES_256_CBC_SHA": "false",
            "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TLS_RSA_WITH_AES_128_CBC_SHA": "false",
            "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TripleDes168": "false",
            "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls10": "false",
            "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls11": "false",
            "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Ssl30": "false",
            "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Tls10": "false",
            "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Tls11": "false",
            "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Ssl30": "false",
            "Microsoft.WindowsAzure.ApiManagement.Gateway.Protocols.Server.Http2": "true"
          }
        },
        "dependsOn": [
          "[resourceId('Microsoft.KeyVault/vaults/secrets', split(format('{0}/sslCert', parameters('keyVaultName')), '/')[0], split(format('{0}/sslCert', parameters('keyVaultName')), '/')[1])]",
          "Microsoft.ManagedIdentity/userAssignedIdentities/[format('id-{0}', uniqueString(resourceGroup().id))]"
        ]
      }
    ],
    "\uff04schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#"
  }
}