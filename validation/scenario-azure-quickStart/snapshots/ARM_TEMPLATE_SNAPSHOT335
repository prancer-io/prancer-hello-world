{
  "structure": "filesystem",
  "error": null,
  "reference": "master",
  "contentType": "json",
  "source": "gitConnectorAzureQuickStart",
  "paths": [
    "/application-workloads/opencanvas/opencanvas-lms/azuredeploy.json",
    "/application-workloads/opencanvas/opencanvas-lms/azuredeploy.parameters.json"
  ],
  "timestamp": 1642962892624,
  "queryuser": null,
  "checksum": "99914b932bd37a50b983c5e7c90ae93b",
  "node": {
    "masterSnapshotId": "ARM_TEMPLATE_SNAPSHOT",
    "type": "arm",
    "collection": "armtemplate",
    "paths": [
      "/application-workloads/opencanvas/opencanvas-lms/azuredeploy.json",
      "/application-workloads/opencanvas/opencanvas-lms/azuredeploy.parameters.json"
    ],
    "snapshotId": "ARM_TEMPLATE_SNAPSHOT335",
    "status": "active",
    "validate": true,
    "resourceTypes": [
      "microsoft.network/publicipaddresses",
      "microsoft.network/virtualnetworks",
      "microsoft.network/networkinterfaces",
      "microsoft.compute/virtualmachines/extensions",
      "microsoft.compute/virtualmachines",
      "microsoft.network/networksecuritygroups"
    ]
  },
  "snapshotId": "ARM_TEMPLATE_SNAPSHOT335",
  "collection": "armtemplate",
  "json": {
    "contentVersion": "1.0.0.0",
    "parameters": {
      "adminVMUsername": {
        "type": "string",
        "minLength": 3,
        "metadata": {
          "description": "User name for the Virtual Machine."
        },
        "value": "GEN-UNIQUE-8"
      },
      "dnsNameForPublicIP": {
        "type": "string",
        "minLength": 3,
        "defaultValue": "[concat('oc', uniqueString(resourceGroup().id))]",
        "metadata": {
          "description": "Globally unique DNS Name for the Public IP used to access the Virtual Machine."
        }
      },
      "smtpEmail": {
        "type": "string",
        "minLength": 1,
        "metadata": {
          "description": "Provide SMTP Email."
        },
        "value": "GEN-UNIQUE-8"
      },
      "postgresPassword": {
        "type": "securestring",
        "minLength": 12,
        "metadata": {
          "description": "Provide Password for the Postgres."
        },
        "value": "GEN-PASSWORD"
      },
      "adminLoginEmail": {
        "type": "string",
        "minLength": 3,
        "metadata": {
          "description": "Provide Admin Email for Open Canvas."
        },
        "value": "GEN-UNIQUE-8"
      },
      "adminLoginPassword": {
        "type": "securestring",
        "minLength": 12,
        "metadata": {
          "description": "Provide Admin Password for for Open Canvas."
        },
        "value": "GEN-PASSWORD"
      },
      "adminAccountName": {
        "type": "string",
        "minLength": 3,
        "metadata": {
          "description": "Provide Admin Account Name."
        },
        "value": "GEN-UNIQUE-8"
      },
      "lms_stat_coll": {
        "type": "string",
        "defaultValue": "opt_in",
        "metadata": {
          "description": "Provide lms stat coll."
        }
      },
      "smtp_type": {
        "type": "string",
        "minLength": 3,
        "defaultValue": "smtp.gmail.com",
        "metadata": {
          "description": "Provide SMTP Type."
        }
      },
      "smtp_port": {
        "type": "string",
        "defaultValue": "465",
        "metadata": {
          "description": "Provide SMTP Port."
        }
      },
      "smtp_pass": {
        "type": "string",
        "minLength": 12,
        "metadata": {
          "description": "Provide lms SMTP Password."
        },
        "value": "GEN-PASSWORD"
      },
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Location for all resources."
        }
      },
      "_artifactsLocation": {
        "type": "string",
        "metadata": {
          "description": "The base URI where artifacts required by this template are located including a trailing '/'"
        },
        "defaultValue": "[deployment().properties.templatelink.uri]"
      },
      "_artifactsLocationSasToken": {
        "type": "securestring",
        "metadata": {
          "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated. Use the defaultValue if the staging location is not secured."
        },
        "defaultValue": ""
      },
      "authenticationType": {
        "type": "string",
        "defaultValue": "sshPublicKey",
        "allowedValues": [
          "sshPublicKey",
          "password"
        ],
        "metadata": {
          "description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."
        }
      },
      "adminPasswordOrKey": {
        "type": "securestring",
        "metadata": {
          "description": "SSH Key or password for the Virtual Machine. SSH key is recommended."
        },
        "value": "GEN-SSH-PUB-KEY"
      },
      "vmSize": {
        "type": "string",
        "defaultValue": "Standard_D2_v3",
        "metadata": {
          "description": "Virtual Machine Size."
        },
        "value": "Standard_D2_v3"
      }
    },
    "variables": {
      "imagePublisher": "Canonical",
      "imageOffer": "UbuntuServer",
      "nicName": "canvasVMNic",
      "addressPrefix": "10.0.0.0/16",
      "subnetName": "Subnet",
      "subnetPrefix": "10.0.0.0/24",
      "publicIPAddressType": "Dynamic",
      "vmName": "opencanvas",
      "virtualNetworkName": "canvasLMSVNET",
      "subnetRef": "Microsoft.Network/virtualNetworks/subnets/canvasLMSVNET/Subnet",
      "installScriptName": "opencanvas.sh",
      "ubuntuOSVersion": "16.04-LTS",
      "installScriptUrl": "[uri(parameters('_artifactsLocation'), concat(variables('installScriptName'), parameters('_artifactsLocationSasToken')))]",
      "linuxConfiguration": {
        "disablePasswordAuthentication": true,
        "ssh": {
          "publicKeys": [
            {
              "path": "/home/GEN-UNIQUE-8/.ssh/authorized_keys",
              "keyData": "GEN-SSH-PUB-KEY"
            }
          ]
        }
      },
      "networkSecurityGroupName": "default-NSG"
    },
    "resources": [
      {
        "apiVersion": "2020-11-01",
        "type": "Microsoft.Network/publicIPAddresses",
        "name": "[concat('oc', uniqueString(resourceGroup().id))]",
        "location": "[resourceGroup().location]",
        "tags": {
          "displayName": "PublicIPAddress"
        },
        "properties": {
          "publicIPAllocationMethod": "Dynamic",
          "dnsSettings": {
            "domainNameLabel": "[concat('oc', uniqueString(resourceGroup().id))]"
          }
        }
      },
      {
        "comments": "Default Network Security Group for template",
        "type": "Microsoft.Network/networkSecurityGroups",
        "apiVersion": "2019-08-01",
        "name": "default-NSG",
        "location": "[resourceGroup().location]",
        "properties": {
          "securityRules": [
            {
              "name": "default-allow-22",
              "properties": {
                "priority": 1000,
                "access": "Allow",
                "direction": "Inbound",
                "destinationPortRange": "22",
                "protocol": "Tcp",
                "sourceAddressPrefix": "*",
                "sourcePortRange": "*",
                "destinationAddressPrefix": "*"
              }
            },
            {
              "name": "default-allow-80",
              "properties": {
                "priority": 1001,
                "access": "Allow",
                "direction": "Inbound",
                "destinationPortRange": "80",
                "protocol": "Tcp",
                "sourceAddressPrefix": "*",
                "sourcePortRange": "*",
                "destinationAddressPrefix": "*"
              }
            },
            {
              "name": "default-allow-443",
              "properties": {
                "priority": 1002,
                "access": "Allow",
                "direction": "Inbound",
                "destinationPortRange": "443",
                "protocol": "Tcp",
                "sourceAddressPrefix": "*",
                "sourcePortRange": "*",
                "destinationAddressPrefix": "*"
              }
            }
          ]
        }
      },
      {
        "apiVersion": "2018-02-01",
        "type": "Microsoft.Network/virtualNetworks",
        "name": "canvasLMSVNET",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "Microsoft.Network/networkSecurityGroups/default-NSG"
        ],
        "tags": {
          "displayName": "VirtualNetwork"
        },
        "properties": {
          "addressSpace": {
            "addressPrefixes": [
              "10.0.0.0/16"
            ]
          },
          "subnets": [
            {
              "name": "Subnet",
              "properties": {
                "addressPrefix": "10.0.0.0/24",
                "networkSecurityGroup": {
                  "id": "Microsoft.Network/networkSecurityGroups/default-NSG"
                }
              }
            }
          ]
        }
      },
      {
        "apiVersion": "2018-02-01",
        "type": "Microsoft.Network/networkInterfaces",
        "name": "canvasVMNic",
        "location": "[resourceGroup().location]",
        "tags": {
          "displayName": "NetworkInterface"
        },
        "dependsOn": [
          "Microsoft.Network/publicIPAddresses/[concat('oc', uniqueString(resourceGroup().id))]",
          "Microsoft.Network/virtualNetworks/canvasLMSVNET"
        ],
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipconfig1",
              "properties": {
                "privateIPAllocationMethod": "Dynamic",
                "publicIPAddress": {
                  "id": "Microsoft.Network/publicIPAddresses/[concat('oc', uniqueString(resourceGroup().id))]"
                },
                "subnet": {
                  "id": "Microsoft.Network/virtualNetworks/subnets/canvasLMSVNET/Subnet"
                }
              }
            }
          ]
        }
      },
      {
        "apiVersion": "2017-03-30",
        "type": "Microsoft.Compute/virtualMachines",
        "name": "opencanvas",
        "location": "[resourceGroup().location]",
        "tags": {
          "displayName": "VirtualMachine"
        },
        "dependsOn": [
          "Microsoft.Network/networkInterfaces/canvasVMNic"
        ],
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_D2_v3"
          },
          "osProfile": {
            "computerName": "opencanvas",
            "adminUsername": "GEN-UNIQUE-8",
            "adminPassword": "GEN-SSH-PUB-KEY",
            "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]"
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "Canonical",
              "offer": "UbuntuServer",
              "sku": "16.04-LTS",
              "version": "latest"
            },
            "osDisk": {
              "name": "osdisk",
              "caching": "ReadWrite",
              "createOption": "FromImage"
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "Microsoft.Network/networkInterfaces/canvasVMNic"
              }
            ]
          }
        }
      },
      {
        "type": "Microsoft.Compute/virtualMachines/extensions",
        "name": "opencanvas/installopencavas",
        "apiVersion": "2017-03-30",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "Microsoft.Compute/virtualMachines//opencanvas"
        ],
        "properties": {
          "publisher": "Microsoft.Azure.Extensions",
          "type": "CustomScript",
          "typeHandlerVersion": "2.0",
          "autoUpgradeMinorVersion": true,
          "settings": {
            "fileUris": [
              "[uri(parameters('_artifactsLocation'), concat(variables('installScriptName'), parameters('_artifactsLocationSasToken')))]"
            ]
          },
          "protectedSettings": {
            "commandToExecute": "[concat('mv *.sh /home/',parameters('adminVMUsername'),' && cd /home/',parameters('adminVMUsername'),' && sudo chmod 777 *.sh && sudo -u ',parameters('adminVMUsername'),' /bin/bash ',variables('installScriptName'),' ',reference(resourceId('Microsoft.Network/publicIPAddresses',parameters('dnsNameForPublicIP')), '2020-08-01').dnsSettings.fqdn,' ', parameters('smtpEmail'),' ', parameters('postgresPassword'),' ', parameters('adminLoginEmail'),' ', parameters('adminLoginPassword'),' ', parameters('adminAccountName'),' ', parameters('lms_stat_coll'),' ', parameters('smtp_type'),' ', parameters('smtp_port'),' ', parameters('smtp_pass'))]"
          }
        }
      }
    ],
    "\uff04schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#"
  }
}