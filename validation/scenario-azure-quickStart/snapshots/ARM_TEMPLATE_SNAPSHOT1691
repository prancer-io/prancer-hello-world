{
  "structure": "filesystem",
  "error": null,
  "reference": "master",
  "contentType": "json",
  "source": "gitConnectorAzureQuickStart",
  "paths": [
    "/quickstarts/microsoft.sql/sql-auditing-server-policy-to-blob-storage/azuredeploy.json",
    "/quickstarts/microsoft.sql/sql-auditing-server-policy-to-blob-storage/azuredeploy.parameters.json"
  ],
  "timestamp": 1642962910346,
  "queryuser": null,
  "checksum": "99914b932bd37a50b983c5e7c90ae93b",
  "node": {
    "masterSnapshotId": "ARM_TEMPLATE_SNAPSHOT",
    "type": "arm",
    "collection": "armtemplate",
    "paths": [
      "/quickstarts/microsoft.sql/sql-auditing-server-policy-to-blob-storage/azuredeploy.json",
      "/quickstarts/microsoft.sql/sql-auditing-server-policy-to-blob-storage/azuredeploy.parameters.json"
    ],
    "snapshotId": "ARM_TEMPLATE_SNAPSHOT1691",
    "status": "active",
    "validate": true,
    "resourceTypes": [
      "microsoft.sql/servers",
      "microsoft.storage/storageaccounts"
    ]
  },
  "snapshotId": "ARM_TEMPLATE_SNAPSHOT1691",
  "collection": "armtemplate",
  "json": {
    "contentVersion": "1.0.0.0",
    "parameters": {
      "sqlServerName": {
        "type": "string",
        "defaultValue": "[concat('sql-', uniqueString(resourceGroup().id))]",
        "metadata": {
          "description": "Name of the SQL server"
        }
      },
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Location for all resources."
        }
      },
      "sqlAdministratorLogin": {
        "type": "string",
        "metadata": {
          "description": "The administrator username of the SQL Server."
        },
        "value": "GEN-UNIQUE"
      },
      "sqlAdministratorLoginPassword": {
        "type": "securestring",
        "metadata": {
          "description": "The administrator password of the SQL Server."
        },
        "value": "GEN-PASSWORD"
      },
      "storageAccountName": {
        "type": "string",
        "defaultValue": "[concat('sqlaudit', uniqueString(resourceGroup().id))]",
        "metadata": {
          "description": "The name of the auditing storage account."
        }
      },
      "isStorageBehindVnet": {
        "type": "bool",
        "defaultValue": false,
        "metadata": {
          "description": "Enable Auditing to storage behind Virtual Network or firewall rules. The user deploying the template must have an administrator or owner permissions."
        }
      },
      "isMSDevOpsAuditEnabled": {
        "type": "bool",
        "defaultValue": false,
        "metadata": {
          "description": "Enable Auditing of Microsoft support operations (DevOps)"
        }
      }
    },
    "variables": {
      "StorageBlobContributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'ba92f5b4-2d11-453d-a403-e96b0029c9fe')]",
      "uniqueRoleGuid": "[guid(resourceId('Microsoft.Storage/storageAccounts',  parameters('storageAccountName')), variables('storageBlobContributor'), resourceId('Microsoft.Sql/servers', parameters('sqlServerName')))]"
    },
    "resources": [
      {
        "type": "Microsoft.Storage/storageAccounts",
        "name": "[concat('sqlaudit', uniqueString(resourceGroup().id))]",
        "apiVersion": "2019-06-01",
        "location": "[resourceGroup().location]",
        "sku": {
          "name": "Standard_LRS"
        },
        "kind": "StorageV2",
        "properties": {
          "networkAcls": {
            "bypass": "AzureServices",
            "defaultAction": "[if(parameters('isStorageBehindVnet'), 'Deny', 'Allow')]"
          }
        },
        "resources": [
          {
            "condition": false,
            "type": "Microsoft.Storage/storageAccounts/providers/roleAssignments",
            "apiVersion": "2020-03-01-preview",
            "name": "[concat('sqlaudit', uniqueString(resourceGroup().id))]/Microsoft.Authorization/[guid(resourceId('Microsoft.Storage/storageAccounts',  parameters('storageAccountName')), variables('storageBlobContributor'), resourceId('Microsoft.Sql/servers', parameters('sqlServerName')))]",
            "dependsOn": [
              "Microsoft.Sql/servers/[concat('sql-', uniqueString(resourceGroup().id))]",
              "Microsoft.Storage/storageAccounts/[concat('sqlaudit', uniqueString(resourceGroup().id))]"
            ],
            "properties": {
              "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'ba92f5b4-2d11-453d-a403-e96b0029c9fe')]",
              "principalId": "[reference(resourceId('Microsoft.Sql/servers', parameters('sqlServerName')), '2020-08-01-preview', 'Full').identity.principalId]",
              "scope": "Microsoft.Storage/storageAccounts/[concat('sqlaudit', uniqueString(resourceGroup().id))]",
              "principalType": "ServicePrincipal"
            }
          }
        ]
      },
      {
        "type": "Microsoft.Sql/servers",
        "apiVersion": "2020-08-01-preview",
        "location": "[resourceGroup().location]",
        "name": "[concat('sql-', uniqueString(resourceGroup().id))]",
        "identity": "[if(parameters('isStorageBehindVnet'), json('{\"type\":\"SystemAssigned\"}'), json('null'))]",
        "properties": {
          "administratorLogin": "GEN-UNIQUE",
          "administratorLoginPassword": "GEN-PASSWORD",
          "version": "12.0"
        },
        "tags": {
          "displayName": "[concat('sql-', uniqueString(resourceGroup().id))]"
        },
        "resources": [
          {
            "type": "auditingSettings",
            "apiVersion": "2019-06-01-preview",
            "name": "DefaultAuditingSettings",
            "dependsOn": [
              "[concat('sql-', uniqueString(resourceGroup().id))]",
              "[concat('sqlaudit', uniqueString(resourceGroup().id))]",
              "[extensionResourceId(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), 'Microsoft.Authorization/roleAssignments/', variables('uniqueRoleGuid'))]"
            ],
            "properties": {
              "state": "Enabled",
              "storageEndpoint": "[reference(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2019-06-01').PrimaryEndpoints.Blob]",
              "storageAccountAccessKey": "[if(parameters('isStorageBehindVnet'), json('null'), listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2019-06-01').keys[0].value)]",
              "storageAccountSubscriptionId": "[subscription().subscriptionId]",
              "isStorageSecondaryKeyInUse": false
            }
          },
          {
            "condition": false,
            "type": "devOpsAuditingSettings",
            "apiVersion": "2020-08-01-preview",
            "name": "Default",
            "dependsOn": [
              "[concat('sql-', uniqueString(resourceGroup().id))]",
              "[concat('sqlaudit', uniqueString(resourceGroup().id))]",
              "[guid(resourceId('Microsoft.Storage/storageAccounts',  parameters('storageAccountName')), variables('storageBlobContributor'), resourceId('Microsoft.Sql/servers', parameters('sqlServerName')))]"
            ],
            "properties": {
              "state": "Enabled",
              "storageEndpoint": "[reference(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2019-06-01').PrimaryEndpoints.Blob]",
              "storageAccountAccessKey": "[if(parameters('isStorageBehindVnet'), json('null'), listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2019-06-01').keys[0].value)]",
              "storageAccountSubscriptionId": "[subscription().subscriptionId]",
              "isStorageSecondaryKeyInUse": false
            }
          }
        ]
      }
    ],
    "\uff04schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#"
  }
}