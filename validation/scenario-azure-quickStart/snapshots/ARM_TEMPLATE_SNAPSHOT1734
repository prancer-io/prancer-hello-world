{
  "structure": "filesystem",
  "error": null,
  "reference": "master",
  "contentType": "json",
  "source": "gitConnectorAzureQuickStart",
  "paths": [
    "/quickstarts/microsoft.synapse/synapse-poc/azuredeploy.json",
    "/quickstarts/microsoft.synapse/synapse-poc/azuredeploy.parameters.json"
  ],
  "timestamp": 1642962910729,
  "queryuser": null,
  "checksum": "99914b932bd37a50b983c5e7c90ae93b",
  "node": {
    "masterSnapshotId": "ARM_TEMPLATE_SNAPSHOT",
    "type": "arm",
    "collection": "armtemplate",
    "paths": [
      "/quickstarts/microsoft.synapse/synapse-poc/azuredeploy.json",
      "/quickstarts/microsoft.synapse/synapse-poc/azuredeploy.parameters.json"
    ],
    "snapshotId": "ARM_TEMPLATE_SNAPSHOT1734",
    "status": "active",
    "validate": true,
    "resourceTypes": [
      "microsoft.resources/deployments",
      "microsoft.authorization/roleassignments",
      "microsoft.synapse/workspaces/sqlpools",
      "microsoft.synapse/workspaces/bigdatapools",
      "microsoft.synapse/workspaces",
      "microsoft.storage/storageaccounts"
    ]
  },
  "snapshotId": "ARM_TEMPLATE_SNAPSHOT1734",
  "collection": "armtemplate",
  "json": {
    "contentVersion": "1.0.0.0",
    "parameters": {
      "_artifactsLocation": {
        "type": "string",
        "defaultValue": "[deployment().properties.templatelink.uri]"
      },
      "_artifactsLocationSASToken": {
        "type": "securestring",
        "defaultValue": ""
      },
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Location for your deployment."
        }
      },
      "companyTla": {
        "type": "string",
        "metadata": {
          "description": "This is a Three Letter Acronym for your company name. 'CON' for Contoso for example."
        },
        "value": "GEN-UNIQUE-3"
      },
      "allowAllConnections": {
        "type": "string",
        "allowedValues": [
          "true",
          "false"
        ],
        "defaultValue": "true"
      },
      "sparkDeployment": {
        "type": "string",
        "defaultValue": "true",
        "allowedValues": [
          "true",
          "false"
        ],
        "metadata": {
          "description": "'True' deploys an Apache Spark pool as well as a SQL pool. 'False' does not deploy an Apache Spark pool."
        }
      },
      "sparkNodeSize": {
        "type": "string",
        "defaultValue": "Medium",
        "allowedValues": [
          "Small",
          "Medium",
          "Large"
        ],
        "metadata": {
          "description": "This parameter will determine the node size if SparkDeployment is true"
        }
      },
      "deploymentType": {
        "type": "string",
        "defaultValue": "poc",
        "allowedValues": [
          "devtest",
          "poc",
          "prod",
          "shared"
        ],
        "metadata": {
          "description": "Specify deployment type: DevTest, POC, Prod, Shared. This will also be used in the naming convention."
        }
      },
      "sqlAdministratorLogin": {
        "type": "string",
        "metadata": {
          "description": "The username of the SQL Administrator"
        },
        "value": "GEN-UNIQUE-6"
      },
      "sqlAdministratorLoginPassword": {
        "type": "securestring",
        "metadata": {
          "description": "The password for the SQL Administrator"
        },
        "value": "GEN-PASSWORD"
      },
      "sku": {
        "type": "string",
        "defaultValue": "DW100c",
        "allowedValues": [
          "DW100c",
          "DW200c",
          "DW300c",
          "DW400c",
          "DW500c",
          "DW1000c",
          "DW1500c",
          "DW2000c",
          "DW2500c",
          "DW3000c"
        ],
        "metadata": {
          "description": "Select the SKU of the SQL pool."
        }
      },
      "metadataSync": {
        "type": "bool",
        "defaultValue": false,
        "metadata": {
          "description": "Choose whether you want to synchronise metadata."
        }
      },
      "Frequency": {
        "type": "string",
        "defaultValue": "Weekdays",
        "allowedValues": [
          "Daily",
          "Weekdays"
        ],
        "metadata": {
          "description": "Choose whether to run schedule every day of the week, or only on weekdays"
        }
      },
      "TIME_ZONE": {
        "type": "string",
        "defaultValue": "Eastern Standard Time",
        "allowedValues": [
          "Dateline Standard Time",
          "Samoa Standard Time",
          "Hawaiian Standard Time",
          "Alaskan Standard Time",
          "Pacific Standard Time",
          "Mountain Standard Time",
          "Mexico Standard Time 2",
          "Central Standard Time",
          "Canada Central Standard Time",
          "Mexico Standard Time",
          "Central America Standard Time",
          "Eastern Standard Time",
          "Atlantic Standard Time",
          "Newfoundland and Labrador Standard Time",
          "E. South America Standard Time",
          "S.A. Eastern Standard Time",
          "Greenland Standard Time",
          "Mid-Atlantic Standard Time",
          "Azores Standard Time",
          "Cape Verde Standard Time",
          "GMT Standard Time",
          "Greenwich Standard Time",
          "Central Europe Standard Time",
          "Central European Standard Time",
          "Romance Standard Time",
          "W. Europe Standard Time",
          "W. Central Africa Standard Time",
          "E. Europe Standard Time",
          "Egypt Standard Time",
          "FLE Standard Time",
          "GTB Standard Time",
          "Israel Standard Time",
          "South Africa Standard Time",
          "Russian Standard Time",
          "Arab Standard Time",
          "E. Africa Standard Time",
          "Arabic Standard Time",
          "Iran Standard Time",
          "Arabian Standard Time",
          "Caucasus Standard Time",
          "Transitional Islamic State of Afghanistan Standard Time",
          "Ekaterinburg Standard Time",
          "West Asia Standard Time",
          "India Standard Time",
          "Nepal Standard Time",
          "Central Asia Standard Time",
          "Sri Lanka Standard Time",
          "Myanmar Standard Time",
          "North Asia Standard Time",
          "China Standard Time",
          "Singapore Standard Time",
          "Taipei Standard Time",
          "North Asia East Standard Time",
          "Korea Standard Time",
          "Tokyo Standard Time",
          "Yakutsk Standard Time",
          "Tasmania Standard Time",
          "Vladivostok Standard Time",
          "West Pacific Standard Time",
          "Central Pacific Standard Time",
          "Fiji Islands Standard Time",
          "New Zealand Standard Time",
          "Tonga Standard Time"
        ],
        "metadata": {
          "description": "Timezone for the schedule. Consult https://msdn.microsoft.com/en-us/library/ms912391(v=winembedded.11).aspx for more information"
        }
      },
      "ResumeTime": {
        "type": "string",
        "defaultValue": "09:00 PM ( 21:00 )",
        "allowedValues": [
          "12:00 AM (  0:00 )",
          "01:00 AM (  1:00 )",
          "02:00 AM (  2:00 )",
          "03:00 AM (  3:00 )",
          "04:00 AM (  4:00 )",
          "05:00 AM (  5:00 )",
          "06:00 AM (  6:00 )",
          "07:00 AM (  7:00 )",
          "08:00 AM (  8:00 )",
          "09:00 AM (  9:00 )",
          "10:00 AM ( 10:00 )",
          "11:00 AM ( 11:00 )",
          "12:00 PM ( 12:00 )",
          "01:00 PM ( 13:00 )",
          "02:00 PM ( 14:00 )",
          "03:00 PM ( 15:00 )",
          "04:00 PM ( 16:00 )",
          "05:00 PM ( 17:00 )",
          "06:00 PM ( 18:00 )",
          "07:00 PM ( 19:00 )",
          "08:00 PM ( 20:00 )",
          "09:00 PM ( 21:00 )",
          "10:00 PM ( 22:00 )",
          "11:00 PM ( 23:00 )"
        ],
        "metadata": {
          "description": "Time of Day when the data warehouse will be resumed"
        }
      },
      "PauseTime": {
        "type": "string",
        "defaultValue": "05:00 PM ( 17:00 )",
        "allowedValues": [
          "12:00 AM (  0:00 )",
          "01:00 AM (  1:00 )",
          "02:00 AM (  2:00 )",
          "03:00 AM (  3:00 )",
          "04:00 AM (  4:00 )",
          "05:00 AM (  5:00 )",
          "06:00 AM (  6:00 )",
          "07:00 AM (  7:00 )",
          "08:00 AM (  8:00 )",
          "09:00 AM (  9:00 )",
          "10:00 AM ( 10:00 )",
          "11:00 AM ( 11:00 )",
          "12:00 PM ( 12:00 )",
          "01:00 PM ( 13:00 )",
          "02:00 PM ( 14:00 )",
          "03:00 PM ( 15:00 )",
          "04:00 PM ( 16:00 )",
          "05:00 PM ( 17:00 )",
          "06:00 PM ( 18:00 )",
          "07:00 PM ( 19:00 )",
          "08:00 PM ( 20:00 )",
          "09:00 PM ( 21:00 )",
          "10:00 PM ( 22:00 )",
          "11:00 PM ( 23:00 )"
        ],
        "metadata": {
          "description": "Time of day when the data warehouse will be paused"
        }
      }
    },
    "variables": {
      "synapseName": "[toLower(concat(parameters('companyTla'),parameters('deploymentType')))]",
      "dlsName": "[toLower(concat('dls',parameters('companyTla'),parameters('deploymentType')))]",
      "dlsFsName": "[toLower(concat(variables('dlsName'),'fs1'))]",
      "sqlPoolName": "[toLower(concat(variables('workspaceName'),'p1'))]",
      "workspaceName": "[toLower(concat(variables('synapseName'),'ws1'))]",
      "sparkPoolName": "[toLower('synasp1')]",
      "logicApps": [
        "SynapsePauseSchedule",
        "SynapseResumeSchedule"
      ]
    },
    "resources": [
      {
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2020-06-01",
        "name": "logicAppPauseDeployment",
        "properties": {
          "mode": "Incremental",
          "templatelink": {
            "uri": "[uri(parameters('_artifactsLocation'), concat('nestedtemplates/pausetemplate.json', parameters('_artifactsLocationSASToken')))]"
          },
          "parameters": {
            "logicAppName": {
              "value": "(logicApps)[0]"
            },
            "Frequency": {
              "value": "Weekdays"
            },
            "companyTla": {
              "value": "GEN-UNIQUE-3"
            },
            "deploymentType": {
              "value": "poc"
            },
            "TIME_ZONE": {
              "value": "Eastern Standard Time"
            },
            "PauseTime": {
              "value": "05:00 PM ( 17:00 )"
            },
            "location": {
              "value": "[resourceGroup().location]"
            }
          }
        }
      },
      {
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2020-06-01",
        "name": "logicAppResumeDeployment",
        "properties": {
          "mode": "Incremental",
          "templatelink": {
            "uri": "[uri(parameters('_artifactsLocation'), concat('nestedtemplates/resumetemplate.json', parameters('_artifactsLocationSASToken')))]"
          },
          "parameters": {
            "logicAppName": {
              "value": "(logicApps)[1]"
            },
            "Frequency": {
              "value": "Weekdays"
            },
            "companyTla": {
              "value": "GEN-UNIQUE-3"
            },
            "deploymentType": {
              "value": "poc"
            },
            "TIME_ZONE": {
              "value": "Eastern Standard Time"
            },
            "ResumeTime": {
              "value": "09:00 PM ( 21:00 )"
            },
            "location": {
              "value": "[resourceGroup().location]"
            }
          }
        }
      },
      {
        "type": "Microsoft.Storage/storageAccounts",
        "apiVersion": "2019-06-01",
        "name": "[toLower(concat('dls',parameters('companyTla'),parameters('deploymentType')))]",
        "location": "[resourceGroup().location]",
        "sku": {
          "name": "Standard_LRS"
        },
        "kind": "StorageV2",
        "properties": {
          "accessTier": "Hot",
          "supportsHttpsTrafficOnly": true,
          "isHnsEnabled": true
        },
        "resources": [
          {
            "name": "default/[toLower(concat(variables('dlsName'),'fs1'))]",
            "type": "blobServices/containers",
            "apiVersion": "2019-06-01",
            "dependsOn": [
              "[toLower(concat('dls',parameters('companyTla'),parameters('deploymentType')))]"
            ],
            "properties": {
              "publicAccess": "None"
            }
          }
        ]
      },
      {
        "type": "Microsoft.Synapse/workspaces",
        "apiVersion": "2019-06-01-preview",
        "name": "[toLower(concat(variables('synapseName'),'ws1'))]",
        "location": "[resourceGroup().location]",
        "identity": {
          "type": "SystemAssigned"
        },
        "dependsOn": [
          "[toLower(concat('dls',parameters('companyTla'),parameters('deploymentType')))]",
          "[toLower(concat(variables('dlsName'),'fs1'))]"
        ],
        "properties": {
          "defaultDataLakeStorage": {
            "accountUrl": "[reference(variables('dlsName')).primaryEndpoints.dfs]",
            "filesystem": "[toLower(concat(variables('dlsName'),'fs1'))]"
          },
          "sqlAdministratorLogin": "GEN-UNIQUE-6",
          "sqlAdministratorLoginPassword": "GEN-PASSWORD",
          "managedVirtualNetwork": "default"
        },
        "resources": [
          {
            "condition": false,
            "type": "firewallrules",
            "apiVersion": "2019-06-01-preview",
            "name": "allowAll",
            "location": "[resourceGroup().location]",
            "dependsOn": [
              "[toLower(concat(variables('synapseName'),'ws1'))]"
            ],
            "properties": {
              "startIpAddress": "0.0.0.0",
              "endIpAddress": "255.255.255.255"
            }
          },
          {
            "type": "firewallrules",
            "apiVersion": "2019-06-01-preview",
            "name": "AllowAllWindowsAzureIps",
            "location": "[resourceGroup().location]",
            "dependsOn": [
              "[toLower(concat(variables('synapseName'),'ws1'))]"
            ],
            "properties": {
              "startIpAddress": "0.0.0.0",
              "endIpAddress": "0.0.0.0"
            }
          },
          {
            "type": "managedIdentitySqlControlSettings",
            "apiVersion": "2019-06-01-preview",
            "name": "default",
            "location": "[resourceGroup().location]",
            "dependsOn": [
              "[toLower(concat(variables('synapseName'),'ws1'))]"
            ],
            "properties": {
              "grantSqlControlToManagedIdentity": {
                "desiredState": "Enabled"
              }
            }
          }
        ]
      },
      {
        "type": "Microsoft.Synapse/workspaces/sqlPools",
        "apiVersion": "2019-06-01-preview",
        "name": "[toLower(concat(variables('synapseName'),'ws1'))]/[toLower(concat(variables('workspaceName'),'p1'))]",
        "location": "[resourceGroup().location]",
        "sku": {
          "name": "DW100c"
        },
        "dependsOn": [
          "[toLower(concat(variables('synapseName'),'ws1'))]"
        ],
        "properties": {
          "createMode": "Default",
          "collation": "SQL_Latin1_General_CP1_CI_AS"
        },
        "resources": [
          {
            "condition": false,
            "type": "metadataSync",
            "apiVersion": "2019-06-01-preview",
            "name": "config",
            "location": "[resourceGroup().location]",
            "dependsOn": [
              "[toLower(concat(variables('workspaceName'),'p1'))]"
            ],
            "properties": {
              "Enabled": false
            }
          }
        ]
      },
      {
        "condition": false,
        "type": "Microsoft.Synapse/workspaces/bigDataPools",
        "apiVersion": "2019-06-01-preview",
        "name": "[toLower(concat(variables('synapseName'),'ws1'))]/[toLower('synasp1')]",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "[toLower(concat(variables('synapseName'),'ws1'))]"
        ],
        "properties": {
          "nodeCount": 5,
          "nodeSizeFamily": "MemoryOptimized",
          "nodeSize": "Medium",
          "autoScale": {
            "enabled": true,
            "minNodeCount": 3,
            "maxNodeCount": 40
          },
          "autoPause": {
            "enabled": true,
            "delayInMinutes": 15
          },
          "sparkVersion": "2.4"
        }
      },
      {
        "scope": "Microsoft.Storage/storageAccounts/[toLower(concat('dls',parameters('companyTla'),parameters('deploymentType')))]",
        "type": "Microsoft.Authorization/roleAssignments",
        "apiVersion": "2020-04-01-preview",
        "name": "[guid(uniqueString(variables('dlsName')))]",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "[toLower(concat(variables('synapseName'),'ws1'))]"
        ],
        "properties": {
          "roleDefinitionId": "Microsoft.Authorization/roleDefinitions/ba92f5b4-2d11-453d-a403-e96b0029c9fe",
          "principalId": "[reference(resourceId('Microsoft.Synapse/workspaces', variables('workspaceName')), '2019-06-01-preview', 'Full').identity.principalId]",
          "principalType": "ServicePrincipal"
        }
      },
      {
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2020-06-01",
        "name": "MSIRBACOnResourceGroup0",
        "dependsOn": [
          "logicAppResumeDeployment",
          "logicAppPauseDeployment"
        ],
        "properties": {
          "mode": "Incremental",
          "templatelink": {
            "uri": "[uri(parameters('_artifactsLocation'), concat('nestedtemplates/logicapproleassignments.json', parameters('_artifactsLocationSASToken')))]"
          },
          "parameters": {
            "logicAppName": {
              "value": "(logicApps)[0]"
            }
          }
        }
      },
      {
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2020-06-01",
        "name": "MSIRBACOnResourceGroup1",
        "dependsOn": [
          "logicAppResumeDeployment",
          "logicAppPauseDeployment"
        ],
        "properties": {
          "mode": "Incremental",
          "templatelink": {
            "uri": "[uri(parameters('_artifactsLocation'), concat('nestedtemplates/logicapproleassignments.json', parameters('_artifactsLocationSASToken')))]"
          },
          "parameters": {
            "logicAppName": {
              "value": "(logicApps)[1]"
            }
          }
        }
      }
    ],
    "\uff04schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#"
  }
}