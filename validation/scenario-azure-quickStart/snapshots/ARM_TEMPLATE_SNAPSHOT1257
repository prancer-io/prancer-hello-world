{
  "structure": "filesystem",
  "error": null,
  "reference": "master",
  "contentType": "json",
  "source": "gitConnectorAzureQuickStart",
  "paths": [
    "/quickstarts/microsoft.dataprotection/backup-create-disk-enable-protection/azuredeploy.json",
    "/quickstarts/microsoft.dataprotection/backup-create-disk-enable-protection/azuredeploy.parameters.json"
  ],
  "timestamp": 1642962906162,
  "queryuser": null,
  "checksum": "99914b932bd37a50b983c5e7c90ae93b",
  "node": {
    "masterSnapshotId": "ARM_TEMPLATE_SNAPSHOT",
    "type": "arm",
    "collection": "armtemplate",
    "paths": [
      "/quickstarts/microsoft.dataprotection/backup-create-disk-enable-protection/azuredeploy.json",
      "/quickstarts/microsoft.dataprotection/backup-create-disk-enable-protection/azuredeploy.parameters.json"
    ],
    "snapshotId": "ARM_TEMPLATE_SNAPSHOT1257",
    "status": "active",
    "validate": true,
    "resourceTypes": [
      "microsoft.dataprotection/backupvaults",
      "microsoft.authorization/roleassignments",
      "microsoft.compute/disks",
      "microsoft.dataprotection/backupvaults/backuppolicies",
      "microsoft.dataprotection/backupvaults/backupinstances"
    ]
  },
  "snapshotId": "ARM_TEMPLATE_SNAPSHOT1257",
  "collection": "armtemplate",
  "json": {
    "contentVersion": "1.0.0.0",
    "metadata": {
      "_generator": {
        "name": "bicep",
        "version": "0.4.613.9944",
        "templateHash": "10547656111475360214"
      }
    },
    "parameters": {
      "vaultName": {
        "type": "string",
        "defaultValue": "[format('vault{0}', uniqueString(resourceGroup().id))]",
        "metadata": {
          "description": "Name of the Vault"
        }
      },
      "vaultStorageRedundancy": {
        "type": "string",
        "defaultValue": "GeoRedundant",
        "allowedValues": [
          "LocallyRedundant",
          "GeoRedundant"
        ],
        "metadata": {
          "description": "Change Vault Storage Type (not allowed if the vault has registered backups)"
        }
      },
      "backupPolicyName": {
        "type": "string",
        "defaultValue": "[format('policy{0}', uniqueString(resourceGroup().id))]",
        "metadata": {
          "description": "Name of the Backup Policy"
        }
      },
      "retentionDays": {
        "type": "int",
        "defaultValue": 30,
        "maxValue": 35,
        "minValue": 1,
        "metadata": {
          "description": "Retention duration in days"
        }
      },
      "diskName": {
        "type": "string",
        "defaultValue": "[format('disk{0}', uniqueString(resourceGroup().id))]",
        "metadata": {
          "description": "Name of the Disk"
        }
      },
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Location for all resources"
        }
      }
    },
    "functions": [],
    "variables": {
      "roleDefinitionIdForDisk": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '3e5e47e6-65f7-47ef-90b5-e5dd4d455f24')]",
      "roleDefinitionIdForSnapshotRG": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '7efff54f-a5b4-42b5-a1c5-5411624893ce')]",
      "dataSourceType": "Microsoft.Compute/disks",
      "resourceType": "Microsoft.Compute/disks",
      "retentionDuration": "[format('P{0}D', parameters('retentionDays'))]",
      "repeatingTimeInterval": "R/2021-05-20T22:00:00+00:00/PT4H",
      "roleNameGuidForDisk": "[guid(resourceGroup().id, variables('roleDefinitionIdForDisk'), resourceId('Microsoft.DataProtection/backupVaults', parameters('vaultName')))]",
      "roleNameGuidForSnapshotRG": "[guid(resourceGroup().id, variables('roleDefinitionIdForSnapshotRG'), resourceId('Microsoft.DataProtection/backupVaults', parameters('vaultName')))]"
    },
    "resources": [
      {
        "type": "Microsoft.DataProtection/backupVaults",
        "apiVersion": "2021-01-01",
        "name": "[format('vault{0}', uniqueString(resourceGroup().id))]",
        "location": "[resourceGroup().location]",
        "identity": {
          "type": "systemAssigned"
        },
        "properties": {
          "storageSettings": [
            {
              "datastoreType": "VaultStore",
              "type": "GeoRedundant"
            }
          ]
        }
      },
      {
        "type": "Microsoft.DataProtection/backupVaults/backupPolicies",
        "apiVersion": "2021-01-01",
        "name": "[format('{0}/{1}', parameters('vaultName'), parameters('backupPolicyName'))]",
        "properties": {
          "policyRules": [
            {
              "backupParameters": {
                "backupType": "Incremental",
                "objectType": "AzureBackupParams"
              },
              "trigger": {
                "schedule": {
                  "repeatingTimeIntervals": [
                    "R/2021-05-20T22:00:00+00:00/PT4H"
                  ],
                  "timeZone": "UTC"
                },
                "taggingCriteria": [
                  {
                    "tagInfo": {
                      "tagName": "Default",
                      "id": "Default_"
                    },
                    "taggingPriority": 99,
                    "isDefault": true
                  }
                ],
                "objectType": "ScheduleBasedTriggerContext"
              },
              "dataStore": {
                "dataStoreType": "OperationalStore",
                "objectType": "DataStoreInfoBase"
              },
              "name": "BackupHourly",
              "objectType": "AzureBackupRule"
            },
            {
              "lifecycles": [
                {
                  "sourceDataStore": {
                    "dataStoreType": "OperationalStore",
                    "objectType": "DataStoreInfoBase"
                  },
                  "deleteAfter": {
                    "objectType": "AbsoluteDeleteOption",
                    "duration": "[format('P{0}D', parameters('retentionDays'))]"
                  }
                }
              ],
              "isDefault": true,
              "name": "Default",
              "objectType": "AzureRetentionRule",
              "ruleType": "Retention"
            }
          ],
          "datasourceTypes": [
            "Microsoft.Compute/disks"
          ],
          "objectType": "BackupPolicy"
        },
        "dependsOn": [
          "Microsoft.DataProtection/backupVaults/[format('vault{0}', uniqueString(resourceGroup().id))]"
        ]
      },
      {
        "type": "Microsoft.Compute/disks",
        "apiVersion": "2020-12-01",
        "name": "[format('disk{0}', uniqueString(resourceGroup().id))]",
        "location": "[resourceGroup().location]",
        "properties": {
          "creationData": {
            "createOption": "Empty"
          },
          "diskSizeGB": 200
        }
      },
      {
        "type": "Microsoft.Authorization/roleAssignments",
        "apiVersion": "2020-04-01-preview",
        "name": "[guid(resourceGroup().id, variables('roleDefinitionIdForDisk'), resourceId('Microsoft.DataProtection/backupVaults', parameters('vaultName')))]",
        "properties": {
          "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '3e5e47e6-65f7-47ef-90b5-e5dd4d455f24')]",
          "principalId": "[reference(resourceId('Microsoft.DataProtection/backupVaults', parameters('vaultName')), '2021-01-01', 'Full').identity.principalId]"
        },
        "dependsOn": [
          "Microsoft.DataProtection/backupVaults/backupPolicies/[format('vault{0}', uniqueString(resourceGroup().id))]/[format('policy{0}', uniqueString(resourceGroup().id))]",
          "Microsoft.DataProtection/backupVaults/[format('vault{0}', uniqueString(resourceGroup().id))]",
          "Microsoft.Compute/disks/[format('disk{0}', uniqueString(resourceGroup().id))]"
        ]
      },
      {
        "type": "Microsoft.Authorization/roleAssignments",
        "apiVersion": "2020-04-01-preview",
        "name": "[guid(resourceGroup().id, variables('roleDefinitionIdForSnapshotRG'), resourceId('Microsoft.DataProtection/backupVaults', parameters('vaultName')))]",
        "properties": {
          "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '7efff54f-a5b4-42b5-a1c5-5411624893ce')]",
          "principalId": "[reference(resourceId('Microsoft.DataProtection/backupVaults', parameters('vaultName')), '2021-01-01', 'Full').identity.principalId]"
        },
        "dependsOn": [
          "Microsoft.DataProtection/backupVaults/backupPolicies/[format('vault{0}', uniqueString(resourceGroup().id))]/[format('policy{0}', uniqueString(resourceGroup().id))]",
          "Microsoft.DataProtection/backupVaults/[format('vault{0}', uniqueString(resourceGroup().id))]",
          "Microsoft.Compute/disks/[format('disk{0}', uniqueString(resourceGroup().id))]"
        ]
      },
      {
        "type": "Microsoft.DataProtection/backupVaults/backupInstances",
        "apiVersion": "2021-01-01",
        "name": "[format('{0}/{1}', parameters('vaultName'), parameters('diskName'))]",
        "properties": {
          "objectType": "BackupInstance",
          "dataSourceInfo": {
            "objectType": "Datasource",
            "resourceID": "Microsoft.Compute/disks/[format('disk{0}', uniqueString(resourceGroup().id))]",
            "resourceName": "[format('disk{0}', uniqueString(resourceGroup().id))]",
            "resourceType": "Microsoft.Compute/disks",
            "resourceUri": "Microsoft.Compute/disks/[format('disk{0}', uniqueString(resourceGroup().id))]",
            "resourceLocation": "[resourceGroup().location]",
            "datasourceType": "Microsoft.Compute/disks"
          },
          "policyInfo": {
            "policyId": "Microsoft.DataProtection/backupVaults/backupPolicies/[format('vault{0}', uniqueString(resourceGroup().id))]/[format('policy{0}', uniqueString(resourceGroup().id))]",
            "name": "[format('policy{0}', uniqueString(resourceGroup().id))]",
            "policyParameters": {
              "dataStoreParametersList": [
                {
                  "objectType": "AzureOperationalStoreParameters",
                  "dataStoreType": "OperationalStore",
                  "resourceGroupId": "[resourceGroup().id]"
                }
              ]
            }
          }
        },
        "dependsOn": [
          "Microsoft.DataProtection/backupVaults/backupPolicies/[format('vault{0}', uniqueString(resourceGroup().id))]/[format('policy{0}', uniqueString(resourceGroup().id))]",
          "Microsoft.DataProtection/backupVaults/[format('vault{0}', uniqueString(resourceGroup().id))]",
          "Microsoft.Compute/disks/[format('disk{0}', uniqueString(resourceGroup().id))]",
          "Microsoft.Authorization/roleAssignments/[guid(resourceGroup().id, variables('roleDefinitionIdForDisk'), resourceId('Microsoft.DataProtection/backupVaults', parameters('vaultName')))]",
          "Microsoft.Authorization/roleAssignments/[guid(resourceGroup().id, variables('roleDefinitionIdForSnapshotRG'), resourceId('Microsoft.DataProtection/backupVaults', parameters('vaultName')))]"
        ]
      }
    ],
    "\uff04schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#"
  }
}