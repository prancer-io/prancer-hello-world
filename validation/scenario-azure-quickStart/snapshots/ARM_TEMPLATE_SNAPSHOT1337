{
  "structure": "filesystem",
  "error": null,
  "reference": "master",
  "contentType": "json",
  "source": "gitConnectorAzureQuickStart",
  "paths": [
    "/quickstarts/microsoft.hdinsight/hdinsight-custom-ambari-db/azuredeploy.json",
    "/quickstarts/microsoft.hdinsight/hdinsight-custom-ambari-db/azuredeploy.parameters.json"
  ],
  "timestamp": 1642962906950,
  "queryuser": null,
  "checksum": "99914b932bd37a50b983c5e7c90ae93b",
  "node": {
    "masterSnapshotId": "ARM_TEMPLATE_SNAPSHOT",
    "type": "arm",
    "collection": "armtemplate",
    "paths": [
      "/quickstarts/microsoft.hdinsight/hdinsight-custom-ambari-db/azuredeploy.json",
      "/quickstarts/microsoft.hdinsight/hdinsight-custom-ambari-db/azuredeploy.parameters.json"
    ],
    "snapshotId": "ARM_TEMPLATE_SNAPSHOT1337",
    "status": "active",
    "validate": true,
    "resourceTypes": [
      "microsoft.resources/deployments",
      "microsoft.hdinsight/clusters"
    ]
  },
  "snapshotId": "ARM_TEMPLATE_SNAPSHOT1337",
  "collection": "armtemplate",
  "json": {
    "contentVersion": "1.0.0.0",
    "parameters": {
      "clusterName": {
        "type": "string",
        "defaultValue": "[concat('hdi-', uniqueString(resourceGroup().id))]",
        "maxLength": 59,
        "metadata": {
          "description": "The name of the HDInsight cluster to create. This must be unique, less than 59 characters, can contain letters, numbers, and hyphens (the first and last characters must be a letter or number).  The name cannot contain a reserved keyword."
        },
        "value": "GEN-UNIQUE"
      },
      "clusterVersion": {
        "type": "string",
        "defaultValue": "4.0",
        "metadata": {
          "description": "The HDInsight version to deploy."
        }
      },
      "clusterLoginUserName": {
        "type": "string",
        "minLength": 2,
        "maxLength": 20,
        "metadata": {
          "description": "These credentials can be used to submit jobs to the cluster and to log into cluster dashboards. The cluster login username must be 2-20 characters and consist of digits, lowercase letters, and/or the following special characters: (!#$%&'()-^_`{}~).  The name cannot contain a reserved keyword."
        },
        "value": "GEN-UNIQUE"
      },
      "clusterLoginPassword": {
        "type": "securestring",
        "minLength": 10,
        "metadata": {
          "description": "The password must be at least 10 characters in length and must contain at least one digit, one upper case letter, one lower case letter, and one non-alphanumeric character.  The following characters are not allowed (single-quote, double-quote, backslash, right-bracket, full-stop). Also, the password must not contain 3 consecutive characters from the cluster username or SSH username."
        },
        "value": "GEN-PASSWORD"
      },
      "sshUserName": {
        "type": "string",
        "minLength": 2,
        "metadata": {
          "description": "These credentials can be used to remotely access the cluster. The SSH username can only consist of digits, upper or lowercase letters, and/or the following special characters (%&'^_`{}~). Also, it cannot be the same as the cluster login username or a reserved word."
        },
        "value": "GEN-UNIQUE"
      },
      "sshPassword": {
        "type": "securestring",
        "minLength": 6,
        "maxLength": 72,
        "metadata": {
          "description": "SSH password must be 6-72 characters long and must contain at least one digit, one upper case letter, and one lower case letter.  It must not contain any 3 consecutive characters from the SSH username."
        },
        "value": "GEN-PASSWORD"
      },
      "HeadNodeVirtualMachineSize": {
        "type": "string",
        "defaultValue": "Standard_E4_v3",
        "allowedValues": [
          "Standard_A4_v2",
          "Standard_A8_v2",
          "Standard_E2_v3",
          "Standard_E4_v3",
          "Standard_E8_v3",
          "Standard_E16_v3",
          "Standard_E20_v3",
          "Standard_E32_v3",
          "Standard_E48_v3"
        ],
        "metadata": {
          "description": "This is the headnode Azure Virtual Machine size, and will affect the cost. If you don't know, just leave the default value."
        }
      },
      "WorkerNodeVirtualMachineSize": {
        "type": "string",
        "defaultValue": "Standard_E8_v3",
        "allowedValues": [
          "Standard_A4_v2",
          "Standard_A8_v2",
          "Standard_E2_v3",
          "Standard_E4_v3",
          "Standard_E8_v3",
          "Standard_E16_v3",
          "Standard_E20_v3",
          "Standard_E32_v3",
          "Standard_E48_v3"
        ],
        "metadata": {
          "description": "This is the worerdnode Azure Virtual Machine size, and will affect the cost. If you don't know, just leave the default value."
        }
      },
      "workerNodeCount": {
        "type": "int",
        "defaultValue": 4,
        "metadata": {
          "description": "The number of worker nodes in the cluster."
        }
      },
      "existingClusterStorageResourceGroup": {
        "type": "string",
        "defaultValue": "[resourceGroup().name]",
        "metadata": {
          "description": "The resource group name of the storage account to use as the cluster's default storage."
        },
        "value": "GET-PREREQ-existingClusterStorageResourceGroup"
      },
      "existingClusterStorageAccountName": {
        "type": "string",
        "metadata": {
          "description": "The name of the storage account to use as the cluster's default storage."
        },
        "value": "GET-PREREQ-existingClusterStorageAccountName"
      },
      "newOrExistingClusterStorageContainerName": {
        "type": "string",
        "metadata": {
          "description": "The name of the storage container to use."
        },
        "value": "GEN-UNIQUE"
      },
      "existingSQLServerResourceGroup": {
        "type": "string",
        "defaultValue": "[resourceGroup().name]",
        "metadata": {
          "description": "The name of the resource group where the existing SQL server is to use for the new external metastore SQL db."
        },
        "value": "GET-PREREQ-existingSQLServerResourceGroup"
      },
      "existingSQLServerName": {
        "type": "string",
        "metadata": {
          "description": "The name of the existing SQL server to use for the new external metastore SQL db."
        },
        "value": "GET-PREREQ-existingSQLServerName"
      },
      "existingSQLServerUsername": {
        "type": "string",
        "metadata": {
          "description": "The external Hive metastore's existing SQL server admin username."
        },
        "value": "GET-PREREQ-existingSQLServerUsername"
      },
      "existingSQLServerPassword": {
        "type": "securestring",
        "metadata": {
          "description": "The external Hive metastore's existing SQL server admin password."
        }
      },
      "newMetastoreDBName": {
        "type": "string",
        "defaultValue": "[concat('metastoredb', uniqueString(resourceGroup().id))]",
        "metadata": {
          "description": "The name of the new SQL db to create to serve as the external metastores."
        },
        "value": "GEN-UNIQUE"
      },
      "existingVirtualNetworkResourceGroup": {
        "type": "string",
        "defaultValue": "[resourceGroup().name]",
        "metadata": {
          "description": "The existing virtual network resource group name."
        },
        "value": "GET-PREREQ-existingVirtualNetworkResourceGroup"
      },
      "existingVirtualNetworkName": {
        "type": "string",
        "metadata": {
          "description": "The existing virtual network name."
        },
        "value": "GET-PREREQ-existingVirtualNetworkName"
      },
      "existingVirtualNetworkSubnetName": {
        "type": "string",
        "metadata": {
          "description": "The existing virtual network subnet name."
        },
        "value": "GET-PREREQ-existingVirtualNetworkSubnetName"
      },
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Location for all resources."
        }
      }
    },
    "variables": {
      "sqldbname": "GET-PREREQ-existingSQLServerName/GEN-UNIQUE"
    },
    "resources": [
      {
        "name": "sqlDbDeployment",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2020-10-01",
        "resourceGroup": "GET-PREREQ-existingSQLServerResourceGroup",
        "properties": {
          "mode": "Incremental",
          "template": {
            "contentVersion": "1.0.0.0",
            "resources": [
              {
                "type": "Microsoft.Sql/servers/databases",
                "apiVersion": "2020-02-02-preview",
                "location": "[resourceGroup().location]",
                "name": "GET-PREREQ-existingSQLServerName/GEN-UNIQUE",
                "properties": {
                  "collation": "SQL_Latin1_General_CP1_CI_AS",
                  "zoneRedundant": false,
                  "readScale": "Disabled",
                  "readReplicaCount": 0
                },
                "sku": {
                  "name": "S2",
                  "tier": "Standard"
                }
              }
            ],
            "\uff04schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#"
          }
        }
      },
      {
        "name": "GEN-UNIQUE",
        "type": "Microsoft.HDInsight/clusters",
        "location": "[resourceGroup().location]",
        "apiVersion": "2018-06-01-preview",
        "dependsOn": [
          "sqlDbDeployment"
        ],
        "properties": {
          "clusterVersion": "4.0",
          "osType": "Linux",
          "clusterDefinition": {
            "kind": "hadoop",
            "configurations": {
              "gateway": {
                "restAuthCredential.isEnabled": true,
                "restAuthCredential.username": "GEN-UNIQUE",
                "restAuthCredential.password": "GEN-PASSWORD"
              },
              "hive-site": {
                "javax.jdo.option.ConnectionDriverName": "com.microsoft.sqlserver.jdbc.SQLServerDriver",
                "javax.jdo.option.ConnectionURL": "[concat('jdbc:sqlserver://', reference(resourceId(parameters('existingSQLServerResourceGroup'), 'Microsoft.Sql/servers', parameters('existingSQLServerName')), '2020-02-02-preview').fullyQualifiedDomainName, ';database=',parameters('newMetastoreDBName'),';encrypt=true;trustServerCertificate=true;create=false;loginTimeout=300')]",
                "javax.jdo.option.ConnectionUserName": "GET-PREREQ-existingSQLServerUsername",
                "javax.jdo.option.ConnectionPassword": "existingSQLServerPassword"
              },
              "hive-env": {
                "hive_database": "Existing MSSQL Server database with SQL authentication",
                "hive_database_name": "GEN-UNIQUE",
                "hive_database_type": "mssql",
                "hive_existing_mssql_server_database": "GEN-UNIQUE",
                "hive_existing_mssql_server_host": "[reference(resourceId(parameters('existingSQLServerResourceGroup'),'Microsoft.Sql/servers',parameters('existingSQLServerName')), '2020-02-02-preview').fullyQualifiedDomainName]",
                "hive_hostname": "[reference(resourceId(parameters('existingSQLServerResourceGroup'),'Microsoft.Sql/servers',parameters('existingSQLServerName')), '2020-02-02-preview').fullyQualifiedDomainName]"
              },
              "ambari-conf": {
                "database-server": "[reference(resourceId(parameters('existingSQLServerResourceGroup'),'Microsoft.Sql/servers',parameters('existingSQLServerName')), '2020-02-02-preview').fullyQualifiedDomainName]",
                "database-name": "GEN-UNIQUE",
                "database-user-name": "GET-PREREQ-existingSQLServerUsername",
                "database-user-password": "existingSQLServerPassword"
              }
            }
          },
          "storageProfile": {
            "storageaccounts": [
              {
                "name": "[replace(replace(reference(resourceId(parameters('existingClusterStorageResourceGroup'), 'Microsoft.Storage/storageAccounts/', parameters('existingClusterStorageAccountName')), '2021-04-01').primaryEndpoints.blob,'https:',''),'/','')]",
                "isDefault": true,
                "container": "GEN-UNIQUE",
                "key": "[listKeys(resourceId(parameters('existingClusterStorageResourceGroup'), 'Microsoft.Storage/storageAccounts', parameters('existingClusterStorageAccountName')), '2021-04-01').keys[0].value]"
              }
            ]
          },
          "computeProfile": {
            "roles": [
              {
                "name": "headnode",
                "targetInstanceCount": 2,
                "hardwareProfile": {
                  "vmSize": "Standard_E4_v3"
                },
                "osProfile": {
                  "linuxOperatingSystemProfile": {
                    "username": "GEN-UNIQUE",
                    "password": "GEN-PASSWORD"
                  }
                },
                "virtualNetworkProfile": {
                  "id": "GET-PREREQ-existingVirtualNetworkResourceGroup/Microsoft.Network/virtualNetworks/GET-PREREQ-existingVirtualNetworkName",
                  "subnet": "GET-PREREQ-existingVirtualNetworkResourceGroup/Microsoft.Network/virtualNetworks/subnets/GET-PREREQ-existingVirtualNetworkName/GET-PREREQ-existingVirtualNetworkSubnetName"
                }
              },
              {
                "name": "workernode",
                "targetInstanceCount": 4,
                "hardwareProfile": {
                  "vmSize": "Standard_E8_v3"
                },
                "osProfile": {
                  "linuxOperatingSystemProfile": {
                    "username": "GEN-UNIQUE",
                    "password": "GEN-PASSWORD"
                  }
                },
                "virtualNetworkProfile": {
                  "id": "GET-PREREQ-existingVirtualNetworkResourceGroup/Microsoft.Network/virtualNetworks/GET-PREREQ-existingVirtualNetworkName",
                  "subnet": "GET-PREREQ-existingVirtualNetworkResourceGroup/Microsoft.Network/virtualNetworks/subnets/GET-PREREQ-existingVirtualNetworkName/GET-PREREQ-existingVirtualNetworkSubnetName"
                }
              }
            ]
          }
        }
      }
    ],
    "outputs": {
      "cluster": {
        "type": "object",
        "value": "[reference(resourceId('Microsoft.HDInsight/clusters',parameters('clusterName')))]"
      }
    },
    "\uff04schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#"
  }
}