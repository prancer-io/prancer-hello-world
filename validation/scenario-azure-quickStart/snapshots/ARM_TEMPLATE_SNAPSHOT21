{
  "structure": "filesystem",
  "error": null,
  "reference": "master",
  "contentType": "json",
  "source": "gitConnectorAzureQuickStart",
  "paths": [
    "/application-workloads/active-directory/create-ad-forest-with-subdomain/azuredeploy.json",
    "/application-workloads/active-directory/create-ad-forest-with-subdomain/azuredeploy.parameters.json"
  ],
  "timestamp": 1642962883476,
  "queryuser": null,
  "checksum": "99914b932bd37a50b983c5e7c90ae93b",
  "node": {
    "masterSnapshotId": "ARM_TEMPLATE_SNAPSHOT",
    "type": "arm",
    "collection": "armtemplate",
    "paths": [
      "/application-workloads/active-directory/create-ad-forest-with-subdomain/azuredeploy.json",
      "/application-workloads/active-directory/create-ad-forest-with-subdomain/azuredeploy.parameters.json"
    ],
    "snapshotId": "ARM_TEMPLATE_SNAPSHOT21",
    "status": "active",
    "validate": true,
    "resourceTypes": [
      "microsoft.resources/deployments",
      "microsoft.compute/availabilitysets",
      "microsoft.network/networksecuritygroups"
    ]
  },
  "snapshotId": "ARM_TEMPLATE_SNAPSHOT21",
  "collection": "armtemplate",
  "json": {
    "contentVersion": "1.0.0.0",
    "parameters": {
      "createChildDomain": {
        "type": "bool",
        "metadata": {
          "description": "Do you want a child domain? If false, the parameters for the child domain are ignored. "
        },
        "defaultValue": true
      },
      "createSecondDc": {
        "type": "bool",
        "metadata": {
          "description": "Do you want a second DC in each domain? If false: parameters for DC2 and DC4 are ignored. "
        },
        "defaultValue": false
      },
      "DomainName": {
        "type": "string",
        "metadata": {
          "description": "Full FQDN name for the forest root domain."
        },
        "defaultValue": "contoso.com",
        "minLength": 4
      },
      "ChildDomainName": {
        "type": "string",
        "metadata": {
          "description": "SHORT name for the child domain. New AD trees are not allowed."
        },
        "defaultValue": "child",
        "minLength": 2,
        "maxLength": 15
      },
      "adminUsername": {
        "type": "string",
        "metadata": {
          "description": "The name of the admin account for the Domain(s)"
        },
        "minLength": 6,
        "value": "GEN-UNIQUE"
      },
      "adminPassword": {
        "type": "securestring",
        "metadata": {
          "description": "The (complex!) password for the Administrator account of the new VMs and Domain(s)"
        },
        "minLength": 8,
        "value": "GEN-PASSWORD"
      },
      "VMSize": {
        "type": "string",
        "metadata": {
          "description": "The size and type of the VM. *_DS* or *s types support Premium Disks. Hint: the DS* series seem most reliable for this complex template."
        },
        "defaultValue": "Standard_D2s_v3"
      },
      "imageSKU": {
        "type": "string",
        "defaultValue": "2019-Datacenter",
        "allowedValues": [
          "2016-Datacenter",
          "2019-Datacenter"
        ],
        "metadata": {
          "description": "Windows Server Version."
        }
      },
      "diskType": {
        "type": "string",
        "defaultValue": "Premium_LRS",
        "allowedValues": [
          "StandardSSD_LRS",
          "Standard_LRS",
          "Premium_LRS"
        ],
        "metadata": {
          "description": "The Storage type of the data Disks. Use Premium_LRS only with *s or *DS* VM types."
        }
      },
      "virtualNetworkName": {
        "type": "string",
        "metadata": {
          "description": "The name of the new VNET for the DC(s)."
        },
        "defaultValue": "adVNET",
        "minLength": 2,
        "maxLength": 16
      },
      "virtualNetworkAddressRange": {
        "type": "string",
        "metadata": {
          "description": "The address range of the new VNET in CIDR format."
        },
        "defaultValue": "10.0.0.0/22"
      },
      "externalDNSForwarder": {
        "type": "string",
        "metadata": {
          "description": "DNS forwarder for all non-domain (external) related DNS queries."
        },
        "defaultValue": "168.63.129.16"
      },
      "adSubnetName": {
        "type": "string",
        "metadata": {
          "description": "The name of the VM subnet created in the new VNET."
        },
        "defaultValue": "adSubnet",
        "minLength": 2,
        "maxLength": 16
      },
      "adSubnet": {
        "type": "string",
        "metadata": {
          "description": "The address range of the subnet created in the new VNET."
        },
        "defaultValue": "10.0.0.0/24"
      },
      "RootDC1Name": {
        "type": "string",
        "metadata": {
          "description": "The computer name of the first DC of the root domain."
        },
        "defaultValue": "rootdc1",
        "minLength": 2,
        "maxLength": 15
      },
      "RootDC1IPAddress": {
        "type": "string",
        "metadata": {
          "description": "The IP address of the first DC of the root domain."
        },
        "defaultValue": "10.0.0.4"
      },
      "RootDC2Name": {
        "type": "string",
        "metadata": {
          "description": "The computer name of the second DC of the root domain."
        },
        "defaultValue": "rootdc2",
        "minLength": 2,
        "maxLength": 15
      },
      "RootDC2IPAddress": {
        "type": "string",
        "metadata": {
          "description": "The IP address of the second DC of the root domain."
        },
        "defaultValue": "10.0.0.5"
      },
      "ChildDC3Name": {
        "type": "string",
        "metadata": {
          "description": "The computer name of the first DC of the CHILD domain."
        },
        "defaultValue": "childdc3",
        "minLength": 2,
        "maxLength": 15
      },
      "ChildDC3IPAddress": {
        "type": "string",
        "metadata": {
          "description": "The IP address of the first DC of the CHILD domain."
        },
        "defaultValue": "10.0.0.6"
      },
      "ChildDC4Name": {
        "type": "string",
        "metadata": {
          "description": "The computer name of the second DC of the CHILD domain."
        },
        "defaultValue": "childdc4",
        "minLength": 2,
        "maxLength": 15
      },
      "ChildDC4IPAddress": {
        "type": "string",
        "metadata": {
          "description": "The IP address of the second DC of the CHILD domain."
        },
        "defaultValue": "10.0.0.7"
      },
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Location for all resources; takes its default from the Resource Group."
        }
      },
      "_artifactsLocation": {
        "type": "string",
        "metadata": {
          "description": "The location of resources such as templates and DSC modules that the script depends on. No need to change unless you copy or fork this template."
        },
        "defaultValue": "[deployment().properties.templateLink.uri]"
      },
      "_artifactsLocationSasToken": {
        "type": "securestring",
        "metadata": {
          "description": "SAS storage token to access _artifactsLocation. No need to change unless you copy or fork this template."
        },
        "defaultValue": ""
      }
    },
    "variables": {
      "adNSGName": "adSubnetNSG",
      "adAvailabilitySetNameRoot": "AvailSetRoot",
      "adAvailabilitySetNameChild": "AvailSetChild",
      "firstVMTemplateUri": "[uri(parameters('_artifactsLocation'), concat('nested/CreateAndPrepnewVM.json',parameters('_artifactsLocationSasToken')))]",
      "nextVMTemplateUri": "[uri(parameters('_artifactsLocation'), concat('nested/CreateAndPrepnewVM.json',parameters('_artifactsLocationSasToken')))]",
      "vnetTemplateUri": "[uri(parameters('_artifactsLocation'), concat('nested/vnet.json',parameters('_artifactsLocationSasToken')))]",
      "vnetwithDNSTemplateUri": "[uri(parameters('_artifactsLocation'), concat('nested/vnet-with-dns-server.json',parameters('_artifactsLocationSasToken')))]",
      "configureADNextDCTemplateUri": "[uri(parameters('_artifactsLocation'), concat('nested/configureADNextDC.json',parameters('_artifactsLocationSasToken')))]",
      "createForestTemplateUri": "[uri(parameters('_artifactsLocation'), concat('nested/createForest.json',parameters('_artifactsLocationSasToken')))]",
      "createChildDomainTemplateUri": "[uri(parameters('_artifactsLocation'), concat('nested/createChildDomain.json',parameters('_artifactsLocationSasToken')))]",
      "nextDCConfigurationModulesURL": "[uri(parameters('_artifactsLocation'), concat('DSC/ConfigureADNextDC.ps1.zip',parameters('_artifactsLocationSasToken')))]",
      "nextDCConfigurationFunction": "ConfigureADNextDC.ps1\\ConfigureADNextDC"
    },
    "resources": [
      {
        "name": "AvailSetRoot",
        "type": "Microsoft.Compute/availabilitySets",
        "apiVersion": "2019-12-01",
        "location": "[resourceGroup().location]",
        "sku": {
          "name": "Aligned"
        },
        "properties": {
          "PlatformUpdateDomainCount": 3,
          "PlatformFaultDomainCount": 2
        }
      },
      {
        "name": "AvailSetChild",
        "type": "Microsoft.Compute/availabilitySets",
        "apiVersion": "2019-12-01",
        "condition": true,
        "location": "[resourceGroup().location]",
        "sku": {
          "name": "Aligned"
        },
        "properties": {
          "PlatformUpdateDomainCount": 3,
          "PlatformFaultDomainCount": 2
        }
      },
      {
        "name": "CreateVNET",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2020-06-01",
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'), concat('nested/vnet.json',parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "virtualNetworkName": {
              "value": "adVNET"
            },
            "virtualNetworkAddressRange": {
              "value": "10.0.0.0/22"
            },
            "subnetName": {
              "value": "adSubnet"
            },
            "subnetRange": {
              "value": "10.0.0.0/24"
            },
            "location": {
              "value": "[resourceGroup().location]"
            }
          }
        }
      },
      {
        "type": "Microsoft.Network/networkSecurityGroups",
        "name": "adSubnetNSG",
        "apiVersion": "2020-05-01",
        "location": "[resourceGroup().location]",
        "properties": {
          "securityRules": [
            {
              "name": "Allow_Any_RDP",
              "properties": {
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "3389",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 200,
                "direction": "Inbound"
              }
            }
          ]
        },
        "dependsOn": [
          "Microsoft.Resources/deployments/CreateVNET"
        ]
      },
      {
        "name": "CreateADVM1",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2020-06-01",
        "dependsOn": [
          "Microsoft.Resources/deployments/CreateVNET",
          "Microsoft.Compute/availabilitySets/AvailSetRoot"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'), concat('nested/CreateAndPrepnewVM.json',parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "virtualNetworkName": {
              "value": "adVNET"
            },
            "subnetName": {
              "value": "adSubnet"
            },
            "adAvailabilitySetName": {
              "value": "AvailSetRoot"
            },
            "vmName": {
              "value": "rootdc1"
            },
            "vmIpAddress": {
              "value": "10.0.0.4"
            },
            "adminUsername": {
              "value": "GEN-UNIQUE"
            },
            "adminPassword": {
              "value": "GEN-PASSWORD"
            },
            "vmSize": {
              "value": "Standard_D2s_v3"
            },
            "diskType": {
              "value": "Premium_LRS"
            },
            "imageSKU": {
              "value": "2019-Datacenter"
            },
            "location": {
              "value": "[resourceGroup().location]"
            },
            "_artifactsLocation": {
              "value": "[deployment().properties.templateLink.uri]"
            },
            "_artifactsLocationSasToken": {
              "value": ""
            }
          }
        }
      },
      {
        "name": "CreateForest",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2020-06-01",
        "dependsOn": [
          "Microsoft.Resources/deployments/CreateADVM1"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'), concat('nested/createForest.json',parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "vmName": {
              "value": "rootdc1"
            },
            "location": {
              "value": "[resourceGroup().location]"
            },
            "adminUsername": {
              "value": "GEN-UNIQUE"
            },
            "adminPassword": {
              "value": "GEN-PASSWORD"
            },
            "domainName": {
              "value": "domainName"
            },
            "DNSForwarder": {
              "value": "168.63.129.16"
            },
            "_artifactsLocation": {
              "value": "[deployment().properties.templateLink.uri]"
            },
            "_artifactsLocationSasToken": {
              "value": ""
            }
          }
        }
      },
      {
        "name": "CreateADVM3",
        "type": "Microsoft.Resources/deployments",
        "condition": true,
        "apiVersion": "2020-06-01",
        "dependsOn": [
          "Microsoft.Resources/deployments/CreateVNET",
          "Microsoft.Compute/availabilitySets/AvailSetChild"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'), concat('nested/CreateAndPrepnewVM.json',parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "virtualNetworkName": {
              "value": "adVNET"
            },
            "subnetName": {
              "value": "adSubnet"
            },
            "adAvailabilitySetName": {
              "value": "AvailSetChild"
            },
            "vmName": {
              "value": "childdc3"
            },
            "vmIpAddress": {
              "value": "10.0.0.6"
            },
            "adminUsername": {
              "value": "GEN-UNIQUE"
            },
            "adminPassword": {
              "value": "GEN-PASSWORD"
            },
            "vmSize": {
              "value": "Standard_D2s_v3"
            },
            "diskType": {
              "value": "Premium_LRS"
            },
            "imageSKU": {
              "value": "2019-Datacenter"
            },
            "location": {
              "value": "[resourceGroup().location]"
            },
            "_artifactsLocation": {
              "value": "[deployment().properties.templateLink.uri]"
            },
            "_artifactsLocationSasToken": {
              "value": ""
            }
          }
        }
      },
      {
        "name": "CreateChildDomain",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2020-06-01",
        "condition": true,
        "dependsOn": [
          "Microsoft.Resources/deployments/CreateADVM3",
          "Microsoft.Resources/deployments/CreateForest"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'), concat('nested/createChildDomain.json',parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "vmName": {
              "value": "childdc3"
            },
            "location": {
              "value": "[resourceGroup().location]"
            },
            "adminUsername": {
              "value": "GEN-UNIQUE"
            },
            "adminPassword": {
              "value": "GEN-PASSWORD"
            },
            "parentDomainName": {
              "value": "domainName"
            },
            "childDomainName": {
              "value": "child"
            },
            "DNSForwarder": {
              "value": "10.0.0.4"
            },
            "_artifactsLocation": {
              "value": "[deployment().properties.templateLink.uri]"
            },
            "_artifactsLocationSasToken": {
              "value": ""
            }
          }
        }
      },
      {
        "name": "CreateADVM2",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2020-06-01",
        "condition": false,
        "dependsOn": [
          "Microsoft.Resources/deployments/CreateVNET",
          "Microsoft.Compute/availabilitySets/AvailSetRoot"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'), concat('nested/CreateAndPrepnewVM.json',parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "virtualNetworkName": {
              "value": "adVNET"
            },
            "subnetName": {
              "value": "adSubnet"
            },
            "adAvailabilitySetName": {
              "value": "AvailSetRoot"
            },
            "vmName": {
              "value": "rootdc2"
            },
            "vmIpAddress": {
              "value": "10.0.0.5"
            },
            "adminUsername": {
              "value": "GEN-UNIQUE"
            },
            "adminPassword": {
              "value": "GEN-PASSWORD"
            },
            "vmSize": {
              "value": "Standard_D2s_v3"
            },
            "diskType": {
              "value": "Premium_LRS"
            },
            "imageSKU": {
              "value": "2019-Datacenter"
            },
            "location": {
              "value": "[resourceGroup().location]"
            },
            "_artifactsLocation": {
              "value": "[deployment().properties.templateLink.uri]"
            },
            "_artifactsLocationSasToken": {
              "value": ""
            }
          }
        }
      },
      {
        "name": "ConfiguringRootDC2",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2020-06-01",
        "condition": false,
        "dependsOn": [
          "Microsoft.Resources/deployments/CreateADVM2",
          "Microsoft.Resources/deployments/CreateChildDomain"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'), concat('nested/configureADNextDC.json',parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "adNextDCVMName": {
              "value": "rootdc2"
            },
            "location": {
              "value": "[resourceGroup().location]"
            },
            "adminUsername": {
              "value": "GEN-UNIQUE"
            },
            "adminPassword": {
              "value": "GEN-PASSWORD"
            },
            "domainName": {
              "value": "domainName"
            },
            "DNSServer": {
              "value": "10.0.0.4"
            },
            "adNextDCConfigurationFunction": {
              "value": "ConfigureADNextDC.ps1\\ConfigureADNextDC"
            },
            "adNextDCConfigurationModulesURL": {
              "value": "[uri(parameters('_artifactsLocation'), concat('DSC/ConfigureADNextDC.ps1.zip',parameters('_artifactsLocationSasToken')))]"
            }
          }
        }
      },
      {
        "name": "CreateADVM4",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2020-06-01",
        "condition": "[and(parameters('createSecondDc'), parameters('createChildDomain'))]",
        "dependsOn": [
          "Microsoft.Resources/deployments/CreateVNET",
          "Microsoft.Compute/availabilitySets/AvailSetChild"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'), concat('nested/CreateAndPrepnewVM.json',parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "virtualNetworkName": {
              "value": "adVNET"
            },
            "subnetName": {
              "value": "adSubnet"
            },
            "adAvailabilitySetName": {
              "value": "AvailSetChild"
            },
            "vmName": {
              "value": "childdc4"
            },
            "vmIpAddress": {
              "value": "10.0.0.7"
            },
            "adminUsername": {
              "value": "GEN-UNIQUE"
            },
            "adminPassword": {
              "value": "GEN-PASSWORD"
            },
            "vmSize": {
              "value": "Standard_D2s_v3"
            },
            "diskType": {
              "value": "Premium_LRS"
            },
            "imageSKU": {
              "value": "2019-Datacenter"
            },
            "location": {
              "value": "[resourceGroup().location]"
            },
            "_artifactsLocation": {
              "value": "[deployment().properties.templateLink.uri]"
            },
            "_artifactsLocationSasToken": {
              "value": ""
            }
          }
        }
      },
      {
        "name": "ConfiguringChildDC4",
        "type": "Microsoft.Resources/deployments",
        "condition": "[and(parameters('createSecondDc'), parameters('createChildDomain'))]",
        "apiVersion": "2020-06-01",
        "dependsOn": [
          "Microsoft.Resources/deployments/CreateADVM4",
          "Microsoft.Resources/deployments/CreateChildDomain"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'), concat('nested/configureADNextDC.json',parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "adNextDCVMName": {
              "value": "childdc4"
            },
            "location": {
              "value": "[resourceGroup().location]"
            },
            "adminUsername": {
              "value": "GEN-UNIQUE"
            },
            "adminPassword": {
              "value": "GEN-PASSWORD"
            },
            "domainName": {
              "value": "childDomainName.domainName"
            },
            "DNSServer": {
              "value": "10.0.0.6"
            },
            "adNextDCConfigurationFunction": {
              "value": "ConfigureADNextDC.ps1\\ConfigureADNextDC"
            },
            "adNextDCConfigurationModulesURL": {
              "value": "[uri(parameters('_artifactsLocation'), concat('DSC/ConfigureADNextDC.ps1.zip',parameters('_artifactsLocationSasToken')))]"
            }
          }
        }
      },
      {
        "name": "UpdateVNet",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2020-06-01",
        "dependsOn": [
          "Microsoft.Resources/deployments/CreateChildDomain"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'), concat('nested/vnet-with-dns-server.json',parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "virtualNetworkName": {
              "value": "adVNET"
            },
            "virtualNetworkAddressRange": {
              "value": "10.0.0.0/22"
            },
            "subnetName": {
              "value": "adSubnet"
            },
            "subnetRange": {
              "value": "10.0.0.0/24"
            },
            "NSGName": {
              "value": "adSubnetNSG"
            },
            "DNSServerAddress": {
              "value": [
                "10.0.0.4",
                "10.0.0.5"
              ]
            },
            "location": {
              "value": "[resourceGroup().location]"
            }
          }
        }
      }
    ],
    "\uff04schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#"
  }
}