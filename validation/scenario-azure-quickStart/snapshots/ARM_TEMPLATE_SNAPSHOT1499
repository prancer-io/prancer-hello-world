{
  "structure": "filesystem",
  "error": null,
  "reference": "master",
  "contentType": "json",
  "source": "gitConnectorAzureQuickStart",
  "paths": [
    "/quickstarts/microsoft.network/application-security-group/azuredeploy.json",
    "/quickstarts/microsoft.network/application-security-group/azuredeploy.parameters.json"
  ],
  "timestamp": 1642962908475,
  "queryuser": null,
  "checksum": "99914b932bd37a50b983c5e7c90ae93b",
  "node": {
    "masterSnapshotId": "ARM_TEMPLATE_SNAPSHOT",
    "type": "arm",
    "collection": "armtemplate",
    "paths": [
      "/quickstarts/microsoft.network/application-security-group/azuredeploy.json",
      "/quickstarts/microsoft.network/application-security-group/azuredeploy.parameters.json"
    ],
    "snapshotId": "ARM_TEMPLATE_SNAPSHOT1499",
    "status": "active",
    "validate": true,
    "resourceTypes": [
      "microsoft.network/publicipaddresses",
      "microsoft.network/virtualnetworks",
      "microsoft.network/networkinterfaces",
      "microsoft.compute/virtualmachines/extensions",
      "microsoft.compute/virtualmachines",
      "microsoft.network/networksecuritygroups",
      "microsoft.network/applicationsecuritygroups"
    ]
  },
  "snapshotId": "ARM_TEMPLATE_SNAPSHOT1499",
  "collection": "armtemplate",
  "json": {
    "contentVersion": "1.0.0.0",
    "parameters": {
      "_artifactsLocation": {
        "type": "string",
        "metadata": {
          "description": "The base URI where artifacts required by this template are located."
        },
        "defaultValue": "[deployment().properties.templateLink.uri]"
      },
      "_artifactsLocationSasToken": {
        "type": "securestring",
        "metadata": {
          "description": "The sasToken required to access _artifactsLocation when they're located in a storage account with private access."
        },
        "defaultValue": ""
      },
      "vmName": {
        "type": "string",
        "defaultValue": "VM",
        "metadata": {
          "description": "VM Name"
        }
      },
      "vmSize": {
        "type": "string",
        "defaultValue": "Standard_D2_v3",
        "metadata": {
          "description": "VM Size"
        }
      },
      "adminUsername": {
        "type": "string",
        "metadata": {
          "description": "Administrator name"
        },
        "value": "GEN-UNIQUE"
      },
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Location for all resources."
        }
      },
      "authenticationType": {
        "type": "string",
        "defaultValue": "password",
        "allowedValues": [
          "sshPublicKey",
          "password"
        ],
        "metadata": {
          "description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."
        }
      },
      "adminPasswordOrKey": {
        "type": "securestring",
        "metadata": {
          "description": "SSH Key or password for the Virtual Machine. SSH key is recommended."
        },
        "value": "GEN-PASSWORD"
      }
    },
    "variables": {
      "vnetName": "vnet",
      "vNetAddressSpace": "10.0.0.0/16",
      "subnetName": "subnet01",
      "subnetAdressPrefix": "10.0.0.0/24",
      "subnetId": "Microsoft.Network/virtualNetworks/subnets/vnet/subnet01",
      "asgName": "webServersAsg",
      "asgId": "Microsoft.Network/applicationSecurityGroups/webServersAsg",
      "nsgName": "webNsg",
      "nsgId": "Microsoft.Network/networkSecurityGroups/webNsg",
      "pipName": "webServerPip",
      "pipId": "Microsoft.Network/publicIPAddresses/webServerPip",
      "imageInfo": {
        "publisher": "OpenLogic",
        "offer": "CentOS",
        "sku": "6.9",
        "version": "latest"
      },
      "vmStorageType": "StandardSSD_LRS",
      "scriptUrl": "[uri(parameters('_artifactsLocation'), concat('install_nginx.sh', parameters('_artifactsLocationSasToken')))]",
      "linuxConfiguration": {
        "disablePasswordAuthentication": true,
        "ssh": {
          "publicKeys": [
            {
              "path": "/home/GEN-UNIQUE/.ssh/authorized_keys",
              "keyData": "GEN-PASSWORD"
            }
          ]
        }
      }
    },
    "resources": [
      {
        "comments": "Application Security Group",
        "name": "webServersAsg",
        "type": "Microsoft.Network/applicationSecurityGroups",
        "apiVersion": "2020-05-01",
        "location": "[resourceGroup().location]",
        "properties": {}
      },
      {
        "comments": "Network Security Group",
        "name": "webNsg",
        "type": "Microsoft.Network/networkSecurityGroups",
        "apiVersion": "2020-05-01",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "webServersAsg"
        ],
        "properties": {
          "securityRules": [
            {
              "name": "AllowHttpAll",
              "properties": {
                "description": "Allow http traffic to web servers",
                "sourceAddressPrefix": "*",
                "sourcePortRange": "*",
                "direction": "Inbound",
                "access": "Allow",
                "priority": 100,
                "protocol": "Tcp",
                "destinationPortRange": "80",
                "destinationApplicationSecurityGroups": [
                  {
                    "id": "Microsoft.Network/applicationSecurityGroups/webServersAsg"
                  }
                ]
              }
            },
            {
              "name": "AllowSshAll",
              "properties": {
                "description": "Allow SSH traffic to web servers",
                "sourceAddressPrefix": "*",
                "sourcePortRange": "*",
                "direction": "Inbound",
                "access": "Allow",
                "priority": 200,
                "protocol": "Tcp",
                "destinationPortRange": "22",
                "destinationApplicationSecurityGroups": [
                  {
                    "id": "Microsoft.Network/applicationSecurityGroups/webServersAsg"
                  }
                ]
              }
            }
          ]
        }
      },
      {
        "comments": "Virtual Network",
        "name": "vNetName",
        "type": "Microsoft.Network/virtualNetworks",
        "apiVersion": "2020-05-01",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "webNsg"
        ],
        "properties": {
          "addressSpace": {
            "addressPrefixes": [
              "10.0.0.0/16"
            ]
          },
          "subnets": [
            {
              "name": "subnet01",
              "properties": {
                "addressPrefix": "10.0.0.0/24",
                "networkSecurityGroup": {
                  "id": "Microsoft.Network/networkSecurityGroups/webNsg"
                }
              }
            }
          ]
        }
      },
      {
        "comments": "Public Ip Address",
        "name": "webServerPip",
        "type": "Microsoft.Network/publicIPAddresses",
        "apiVersion": "2020-05-01",
        "location": "[resourceGroup().location]",
        "properties": {
          "publicIPAllocationMethod": "Dynamic"
        }
      },
      {
        "comments": "Web Server Network Interface",
        "name": "VM-NIC",
        "type": "Microsoft.Network/networkInterfaces",
        "location": "[resourceGroup().location]",
        "apiVersion": "2020-05-01",
        "dependsOn": [
          "vNetName",
          "webServerPip"
        ],
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipconfig1",
              "properties": {
                "privateIPAllocationMethod": "Dynamic",
                "publicIPAddress": {
                  "id": "Microsoft.Network/publicIPAddresses/webServerPip"
                },
                "subnet": {
                  "id": "Microsoft.Network/virtualNetworks/subnets/vnet/subnet01"
                },
                "applicationSecurityGroups": [
                  {
                    "id": "Microsoft.Network/applicationSecurityGroups/webServersAsg"
                  }
                ]
              }
            }
          ]
        }
      },
      {
        "comments": "Linux Web Server",
        "name": "VM",
        "type": "Microsoft.Compute/virtualMachines",
        "apiVersion": "2020-06-01",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "Microsoft.Network/networkInterfaces/VM-NIC"
        ],
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_D2_v3"
          },
          "osProfile": {
            "computerName": "VM",
            "adminUsername": "GEN-UNIQUE",
            "adminPassword": "GEN-PASSWORD",
            "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]"
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "OpenLogic",
              "offer": "CentOS",
              "sku": "6.9",
              "version": "latest"
            },
            "osDisk": {
              "name": "VM-osdisk",
              "caching": "ReadWrite",
              "createOption": "FromImage",
              "managedDisk": {
                "storageAccountType": "StandardSSD_LRS"
              }
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "Microsoft.Network/networkInterfaces/VM-NIC"
              }
            ]
          }
        }
      },
      {
        "comments": "Installs NGNIX",
        "type": "Microsoft.Compute/virtualMachines/extensions",
        "name": "VM/linuxconfig",
        "apiVersion": "2020-06-01",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "VM"
        ],
        "properties": {
          "publisher": "Microsoft.Azure.Extensions",
          "type": "CustomScript",
          "typeHandlerVersion": "2.0",
          "autoUpgradeMinorVersion": true,
          "settings": {
            "fileUris": [
              "[uri(parameters('_artifactsLocation'), concat('install_nginx.sh', parameters('_artifactsLocationSasToken')))]"
            ],
            "commandToExecute": "sh install_nginx.sh"
          }
        }
      }
    ],
    "\uff04schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#"
  }
}