{
  "structure": "filesystem",
  "error": null,
  "reference": "master",
  "contentType": "json",
  "source": "gitConnectorAzureQuickStart",
  "paths": [
    "/application-workloads/active-directory/create-ad-forest-with-subdomain/nested/CreateAndPrepnewVM.json"
  ],
  "timestamp": 1642962883439,
  "queryuser": null,
  "checksum": "99914b932bd37a50b983c5e7c90ae93b",
  "node": {
    "masterSnapshotId": "ARM_TEMPLATE_SNAPSHOT",
    "type": "arm",
    "collection": "armtemplate",
    "paths": [
      "/application-workloads/active-directory/create-ad-forest-with-subdomain/nested/CreateAndPrepnewVM.json"
    ],
    "snapshotId": "ARM_TEMPLATE_SNAPSHOT16",
    "status": "active",
    "validate": true,
    "resourceTypes": [
      "microsoft.network/publicipaddresses",
      "microsoft.network/networkinterfaces",
      "microsoft.compute/virtualmachines"
    ]
  },
  "snapshotId": "ARM_TEMPLATE_SNAPSHOT16",
  "collection": "armtemplate",
  "json": {
    "contentVersion": "1.0.0.0",
    "parameters": {
      "virtualNetworkName": {
        "type": "string",
        "metadata": {
          "description": "The name of existing Virtual Network"
        }
      },
      "subnetName": {
        "type": "string",
        "metadata": {
          "description": "The name of the existing subnet in the VNET"
        }
      },
      "adAvailabilitySetName": {
        "type": "string",
        "metadata": {
          "description": "Name of existing availability set for the VM"
        }
      },
      "vmName": {
        "type": "string",
        "metadata": {
          "description": "The computer name for the new VM."
        }
      },
      "vmIpAddress": {
        "type": "string",
        "metadata": {
          "description": "The IP address for the new VM"
        }
      },
      "adminUsername": {
        "type": "string",
        "metadata": {
          "description": "The name of the admin account for the VM"
        }
      },
      "adminPassword": {
        "type": "securestring",
        "metadata": {
          "description": "The password for the Administrator account of the new VM"
        }
      },
      "vmSize": {
        "type": "string",
        "metadata": {
          "description": "The size of the VM Created"
        },
        "defaultValue": "Standard_D2s_v3"
      },
      "imageSKU": {
        "type": "string",
        "allowedValues": [
          "2012-Datacenter",
          "2012-R2-Datacenter",
          "2016-Datacenter",
          "2019-Datacenter"
        ],
        "metadata": {
          "description": "Windows Server Version"
        }
      },
      "diskType": {
        "type": "string",
        "defaultValue": "StandardSSD_LRS",
        "allowedValues": [
          "StandardSSD_LRS",
          "Standard_LRS",
          "Premium_LRS"
        ],
        "metadata": {
          "description": "The Storage type of the data Disks."
        }
      },
      "location": {
        "type": "string"
      },
      "_artifactsLocation": {
        "type": "string",
        "metadata": {
          "description": "The location of resources such as templates and DSC modules that the script depends on. No need to change unless you copy or fork this template."
        }
      },
      "_artifactsLocationSasToken": {
        "type": "securestring",
        "metadata": {
          "description": "SAS storage token to access _artifactsLocation. No need to change unless you copy or fork this template."
        },
        "defaultValue": ""
      }
    },
    "variables": {
      "adSubnetRef": "Microsoft.Network/virtualNetworks/subnets//virtualNetworkName/SubnetName",
      "vmPublicIPName": "vmNamePublicIP",
      "vmNicName": "vmNameNic",
      "vmDataDisk": "vmName-managed-DataDisk1",
      "vmOSDisk": "vmName-managed-OSDisk",
      "vmDataDiskSize": 10,
      "imagePublisher": "MicrosoftWindowsServer",
      "imageOffer": "WindowsServer",
      "scriptName": "Configure-DSC.ps1",
      "scriptDownLoad": "[uri(parameters('_artifactsLocation'), concat(variables('scriptName'), parameters('_artifactsLocationSasToken')))]",
      "commandToExecute": "powershell.exe -ExecutionPolicy Unrestricted -File ./Configure-DSC.ps1 -SkipNetworkProfileCheck $true"
    },
    "resources": [
      {
        "name": "vmNamePublicIP",
        "type": "Microsoft.Network/publicIPAddresses",
        "location": "location",
        "apiVersion": "2020-05-01",
        "properties": {
          "publicIPAllocationMethod": "Dynamic",
          "dnsSettings": {
            "domainNameLabel": "[concat(tolower(parameters('VMName')),'-',uniqueString(resourceGroup().id))]"
          }
        }
      },
      {
        "name": "vmNameNic",
        "type": "Microsoft.Network/networkInterfaces",
        "apiVersion": "2020-05-01",
        "location": "location",
        "dependsOn": [
          "Microsoft.Network/publicIPAddresses//vmNamePublicIP"
        ],
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipconfig1",
              "properties": {
                "privateIPAllocationMethod": "Static",
                "privateIPAddress": "vmIPAddress",
                "subnet": {
                  "id": "Microsoft.Network/virtualNetworks/subnets//virtualNetworkName/SubnetName"
                },
                "publicIPAddress": {
                  "id": "Microsoft.Network/publicIPAddresses/vmNamePublicIP"
                }
              }
            }
          ]
        }
      },
      {
        "name": "vmName",
        "type": "Microsoft.Compute/virtualMachines",
        "apiVersion": "2019-12-01",
        "location": "location",
        "dependsOn": [
          "Microsoft.Network/networkInterfaces/vmNameNic"
        ],
        "properties": {
          "hardwareProfile": {
            "vmSize": "VMSize"
          },
          "availabilitySet": {
            "id": "Microsoft.Compute/availabilitySets/adAvailabilitySetName"
          },
          "osProfile": {
            "computerName": "vmName",
            "adminUsername": "adminUsername",
            "adminPassword": "adminPassword"
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "MicrosoftWindowsServer",
              "offer": "WindowsServer",
              "sku": "imageSKU",
              "version": "latest"
            },
            "osDisk": {
              "name": "vmName-managed-OSDisk",
              "caching": "ReadWrite",
              "createOption": "FromImage",
              "managedDisk": {
                "storageAccountType": "StandardSSD_LRS"
              }
            },
            "dataDisks": [
              {
                "name": "vmName-managed-DataDisk1",
                "caching": "None",
                "lun": 0,
                "diskSizeGB": 10,
                "createOption": "Empty",
                "managedDisk": {
                  "storageAccountType": "StandardSSD_LRS"
                }
              }
            ]
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "Microsoft.Network/networkInterfaces/vmNameNic"
              }
            ]
          }
        },
        "resources": [
          {
            "apiVersion": "2019-12-01",
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "vmName/vmDownloadScriptDSCModules",
            "location": "location",
            "dependsOn": [
              "Microsoft.Compute/virtualMachines/vmName"
            ],
            "properties": {
              "publisher": "Microsoft.Compute",
              "type": "CustomScriptExtension",
              "typeHandlerVersion": "1.9",
              "autoUpgradeMinorVersion": true,
              "settings": {
                "fileUris": [
                  "scriptDownload"
                ],
                "commandToExecute": "powershell.exe -ExecutionPolicy Unrestricted -File ./Configure-DSC.ps1 -SkipNetworkProfileCheck $true"
              }
            }
          }
        ]
      }
    ],
    "outputs": {},
    "\uff04schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#"
  }
}