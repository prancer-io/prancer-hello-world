{
  "structure": "filesystem",
  "error": null,
  "reference": "master",
  "contentType": "json",
  "source": "gitConnectorAzureQuickStart",
  "paths": [
    "/demos/kubernetes-on-ubuntu-vmss/azuredeploy.json",
    "/demos/kubernetes-on-ubuntu-vmss/azuredeploy.parameters.json"
  ],
  "timestamp": 1642962899595,
  "queryuser": null,
  "checksum": "99914b932bd37a50b983c5e7c90ae93b",
  "node": {
    "masterSnapshotId": "ARM_TEMPLATE_SNAPSHOT",
    "type": "arm",
    "collection": "armtemplate",
    "paths": [
      "/demos/kubernetes-on-ubuntu-vmss/azuredeploy.json",
      "/demos/kubernetes-on-ubuntu-vmss/azuredeploy.parameters.json"
    ],
    "snapshotId": "ARM_TEMPLATE_SNAPSHOT722",
    "status": "active",
    "validate": true,
    "resourceTypes": [
      "microsoft.network/publicipaddresses",
      "microsoft.network/virtualnetworks",
      "microsoft.network/networkinterfaces",
      "microsoft.compute/virtualmachinescalesets",
      "microsoft.compute/virtualmachines/extensions",
      "microsoft.compute/virtualmachines"
    ]
  },
  "snapshotId": "ARM_TEMPLATE_SNAPSHOT722",
  "collection": "armtemplate",
  "json": {
    "contentVersion": "1.0.0.0",
    "parameters": {
      "_artifactsLocation": {
        "type": "string",
        "metadata": {
          "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
        },
        "defaultValue": "[deployment().properties.templateLink.uri]"
      },
      "_artifactsLocationSasToken": {
        "type": "securestring",
        "metadata": {
          "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."
        },
        "defaultValue": ""
      },
      "vmName": {
        "type": "string",
        "metadata": {
          "description": "The name of your VM master node."
        },
        "value": "GEN-UNIQUE"
      },
      "vmssName": {
        "type": "string",
        "metadata": {
          "description": "The name of your VMSS cluster."
        },
        "value": "GEN-UNIQUE"
      },
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Location for all resources."
        }
      },
      "adminUsername": {
        "type": "string",
        "metadata": {
          "description": "Username for the Virtual Machine."
        },
        "value": "GEN-UNIQUE"
      },
      "adminKey": {
        "type": "securestring",
        "metadata": {
          "description": "SSH Key for the Virtual Machine."
        },
        "value": "GEN-SSH-PUB-KEY"
      },
      "defaultNodeCount": {
        "type": "int",
        "defaultValue": 1,
        "metadata": {
          "description": "The initial node size of your VMSS cluster."
        }
      },
      "minNodeCount": {
        "type": "int",
        "defaultValue": 1,
        "metadata": {
          "description": "The min node size of your VMSS cluster."
        }
      },
      "maxNodeCount": {
        "type": "int",
        "defaultValue": 20,
        "metadata": {
          "description": "The max node size of your VMSS cluster."
        }
      },
      "spClientId": {
        "type": "string",
        "metadata": {
          "description": "ServicePrincipal ClientID"
        },
        "value": "GEN-UNIQUE-13"
      },
      "spClientSecret": {
        "type": "securestring",
        "metadata": {
          "description": "ServicePrincipal Secret"
        },
        "value": "GEN-UNIQUE-13"
      },
      "dnsLabelPrefix": {
        "type": "string",
        "defaultValue": "[toLower(concat('k8s-cluster-', uniqueString(resourceGroup().id)))]",
        "metadata": {
          "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
        }
      },
      "vmssDnsLabelPrefix": {
        "type": "string",
        "defaultValue": "[toLower(concat('k8s-vmss-cluster-', uniqueString(resourceGroup().id)))]",
        "metadata": {
          "description": "Unique DNS Name for the Public IP used to access the VMSS."
        }
      },
      "vmSize": {
        "type": "string",
        "defaultValue": "Standard_D2s_v3",
        "metadata": {
          "description": "The size of the VM"
        }
      },
      "virtualNetworkName": {
        "type": "string",
        "defaultValue": "vNet",
        "metadata": {
          "description": "Name of the VNET"
        }
      },
      "subnetName": {
        "type": "string",
        "defaultValue": "Subnet",
        "metadata": {
          "description": "Name of the subnet in the virtual network"
        }
      },
      "vmssSubnetName": {
        "type": "string",
        "defaultValue": "VMSSSubnet",
        "metadata": {
          "description": "Name of the VMSS subnet in the virtual network"
        }
      }
    },
    "variables": {
      "publicIpAddressName": "GEN-UNIQUEPublicIP",
      "vmssPublicIpAddressName": "GEN-UNIQUEPublicIP",
      "networkInterfaceName": "GEN-UNIQUENetInt",
      "subnetRef": "Microsoft.Network/virtualNetworks/subnets/vNet/Subnet",
      "vmssSubnetRef": "Microsoft.Network/virtualNetworks/subnets/vNet/VMSSSubnet",
      "osDiskType": "StandardSSD_LRS",
      "scriptsDir": "scripts",
      "masterScriptFileName": "cloud-init-master.sh",
      "vmssScriptFileName": "cloud-init-vmss.sh",
      "subscriptionId": "[subscription().subscriptionId]",
      "tenantId": "[subscription().tenantId]"
    },
    "resources": [
      {
        "type": "Microsoft.Network/networkInterfaces",
        "apiVersion": "2020-08-01",
        "name": "GEN-UNIQUENetInt",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "Microsoft.Network/virtualNetworks//vNet",
          "Microsoft.Network/publicIpAddresses//GEN-UNIQUEPublicIP"
        ],
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipconfig1",
              "properties": {
                "subnet": {
                  "id": "Microsoft.Network/virtualNetworks/subnets/vNet/Subnet"
                },
                "privateIPAllocationMethod": "Dynamic",
                "publicIpAddress": {
                  "id": "Microsoft.Network/publicIPAddresses/publicIPAddressName"
                }
              }
            }
          ]
        }
      },
      {
        "type": "Microsoft.Network/virtualNetworks",
        "apiVersion": "2020-08-01",
        "name": "vNet",
        "location": "[resourceGroup().location]",
        "properties": {
          "addressSpace": {
            "addressPrefixes": [
              "10.0.0.0/16"
            ]
          },
          "subnets": [
            {
              "name": "VMSSSubnet",
              "properties": {
                "addressPrefix": "10.0.0.0/24"
              }
            },
            {
              "name": "Subnet",
              "properties": {
                "addressPrefix": "10.0.1.0/24"
              }
            }
          ]
        }
      },
      {
        "type": "Microsoft.Network/publicIPAddresses",
        "apiVersion": "2020-08-01",
        "name": "GEN-UNIQUEPublicIP",
        "location": "[resourceGroup().location]",
        "properties": {
          "publicIPAllocationMethod": "Dynamic",
          "publicIPAddressVersion": "IPv4",
          "dnsSettings": {
            "domainNameLabel": "[toLower(concat('k8s-cluster-', uniqueString(resourceGroup().id)))]"
          },
          "idleTimeoutInMinutes": 10
        }
      },
      {
        "type": "Microsoft.Compute/virtualMachines",
        "apiVersion": "2020-12-01",
        "name": "GEN-UNIQUE",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "Microsoft.Network/networkInterfaces//GEN-UNIQUENetInt"
        ],
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_D2s_v3"
          },
          "storageProfile": {
            "osDisk": {
              "createOption": "FromImage",
              "managedDisk": {
                "storageAccountType": "StandardSSD_LRS"
              }
            },
            "imageReference": {
              "publisher": "Canonical",
              "offer": "UbuntuServer",
              "sku": "18.04-LTS",
              "version": "latest"
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "Microsoft.Network/networkInterfaces/GEN-UNIQUENetInt"
              }
            ]
          },
          "osProfile": {
            "computerName": "GEN-UNIQUE",
            "adminUsername": "GEN-UNIQUE",
            "adminPassword": "GEN-SSH-PUB-KEY",
            "linuxConfiguration": {
              "disablePasswordAuthentication": true,
              "ssh": {
                "publicKeys": [
                  {
                    "path": "/home/GEN-UNIQUE/.ssh/authorized_keys",
                    "keyData": "GEN-SSH-PUB-KEY"
                  }
                ]
              }
            }
          }
        }
      },
      {
        "type": "Microsoft.Compute/virtualMachines/extensions",
        "name": "GEN-UNIQUE/customScript",
        "location": "[resourceGroup().location]",
        "apiVersion": "2020-12-01",
        "dependsOn": [
          "Microsoft.Compute/virtualMachines//GEN-UNIQUE"
        ],
        "properties": {
          "publisher": "Microsoft.Azure.Extensions",
          "type": "CustomScript",
          "typeHandlerVersion": "2.0",
          "autoUpgradeMinorVersion": true,
          "protectedSettings": {
            "commandToExecute": "[concat('bash ', variables('masterScriptFileName'), ' ', parameters('spClientId'), ' ', parameters('spClientSecret'), ' ', resourceGroup().name, ' ', variables('subscriptionId'), ' ', variables('tenantId'))]",
            "fileUris": [
              "[uri(parameters('_artifactsLocation'), concat(variables('scriptsDir'), '/', variables('masterScriptFileName'), parameters('_artifactsLocationSasToken')))]"
            ]
          }
        }
      },
      {
        "type": "Microsoft.Compute/virtualMachineScaleSets",
        "apiVersion": "2020-12-01",
        "name": "GEN-UNIQUE",
        "tags": {
          "cluster-autoscaler-enabled": "true",
          "cluster-autoscaler-name": "[resourceGroup().name]",
          "min": 1,
          "max": 20,
          "poolName": "GEN-UNIQUE"
        },
        "dependsOn": [
          "Microsoft.Network/networkInterfaces//GEN-UNIQUENetInt"
        ],
        "location": "[resourceGroup().location]",
        "sku": {
          "name": "Standard_D2s_v3",
          "tier": "Standard",
          "capacity": 1
        },
        "properties": {
          "overprovision": false,
          "upgradePolicy": {
            "mode": "Manual"
          },
          "virtualMachineProfile": {
            "storageProfile": {
              "osDisk": {
                "createOption": "FromImage",
                "caching": "ReadWrite"
              },
              "imageReference": {
                "publisher": "Canonical",
                "offer": "UbuntuServer",
                "sku": "18.04-LTS",
                "version": "latest"
              }
            },
            "osProfile": {
              "computerNamePrefix": "GEN-UNIQUE",
              "adminUsername": "GEN-UNIQUE",
              "adminPassword": "GEN-SSH-PUB-KEY",
              "linuxConfiguration": {
                "disablePasswordAuthentication": true,
                "ssh": {
                  "publicKeys": [
                    {
                      "path": "/home/GEN-UNIQUE/.ssh/authorized_keys",
                      "keyData": "GEN-SSH-PUB-KEY"
                    }
                  ]
                }
              }
            },
            "networkProfile": {
              "networkInterfaceConfigurations": [
                {
                  "name": "nicGEN-UNIQUE",
                  "properties": {
                    "primary": true,
                    "ipConfigurations": [
                      {
                        "name": "ipconfigVmssGEN-UNIQUE",
                        "properties": {
                          "subnet": {
                            "id": "Microsoft.Network/virtualNetworks/subnets/vNet/VMSSSubnet"
                          },
                          "publicIPAddressConfiguration": {
                            "name": "GEN-UNIQUEPublicIP",
                            "properties": {
                              "idleTimeoutInMinutes": 10,
                              "dnsSettings": {
                                "domainNameLabel": "[toLower(concat('k8s-vmss-cluster-', uniqueString(resourceGroup().id)))]"
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "extensionProfile": {
              "extensions": [
                {
                  "name": "customVmssScript",
                  "properties": {
                    "publisher": "Microsoft.Azure.Extensions",
                    "type": "CustomScript",
                    "typeHandlerVersion": "2.0",
                    "autoUpgradeMinorVersion": true,
                    "protectedSettings": {
                      "commandToExecute": "[concat('bash ', variables('vmssScriptFileName'), ' ', parameters('spClientId'), ' ', parameters('spClientSecret'), ' ', resourceGroup().name, ' ', variables('subscriptionId'), ' ', variables('tenantId'), ' ', parameters('location'), ' ', parameters('vmssSubnetName'), ' ', parameters('virtualNetworkName'))]",
                      "fileUris": [
                        "[uri(parameters('_artifactsLocation'), concat(variables('scriptsDir'), '/', variables('vmssScriptFileName'), parameters('_artifactsLocationSasToken')))]"
                      ]
                    }
                  }
                }
              ]
            }
          }
        }
      }
    ],
    "outputs": {
      "adminUsername": {
        "type": "string",
        "value": "[parameters('adminUsername')]"
      },
      "hostname": {
        "type": "string",
        "value": "[reference(variables('publicIPAddressName')).dnsSettings.fqdn]"
      },
      "sshCommand": {
        "type": "string",
        "value": "[concat('ssh ', parameters('adminUsername'), '@', reference(variables('publicIPAddressName')).dnsSettings.fqdn)]"
      }
    },
    "\uff04schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#"
  }
}