{
  "structure": "filesystem",
  "error": null,
  "reference": "master",
  "contentType": "json",
  "source": "gitConnectorAzureQuickStart",
  "paths": [
    "/application-workloads/opendx/openedx-scalable-ubuntu/azuredeploy.json",
    "/application-workloads/opendx/openedx-scalable-ubuntu/azuredeploy.parameters.json"
  ],
  "timestamp": 1642962892673,
  "queryuser": null,
  "checksum": "99914b932bd37a50b983c5e7c90ae93b",
  "node": {
    "masterSnapshotId": "ARM_TEMPLATE_SNAPSHOT",
    "type": "arm",
    "collection": "armtemplate",
    "paths": [
      "/application-workloads/opendx/openedx-scalable-ubuntu/azuredeploy.json",
      "/application-workloads/opendx/openedx-scalable-ubuntu/azuredeploy.parameters.json"
    ],
    "snapshotId": "ARM_TEMPLATE_SNAPSHOT338",
    "status": "active",
    "validate": true,
    "resourceTypes": [
      "microsoft.network/publicipaddresses",
      "microsoft.network/virtualnetworks",
      "microsoft.network/loadbalancers",
      "microsoft.network/networkinterfaces",
      "microsoft.compute/virtualmachines/extensions",
      "microsoft.compute/virtualmachines",
      "microsoft.network/networksecuritygroups",
      "microsoft.network/loadbalancers/inboundnatrules",
      "microsoft.storage/storageaccounts",
      "microsoft.compute/availabilitysets"
    ]
  },
  "snapshotId": "ARM_TEMPLATE_SNAPSHOT338",
  "collection": "armtemplate",
  "json": {
    "contentVersion": "1.0.0.0",
    "parameters": {
      "adminUsername": {
        "type": "string",
        "defaultValue": "openedxuser",
        "metadata": {
          "description": "Administrator username."
        },
        "value": "GEN-UNIQUE"
      },
      "adminPassword": {
        "type": "securestring",
        "metadata": {
          "description": "Administrator password."
        },
        "value": "GEN-PASSWORD"
      },
      "dnsLabelPrefix": {
        "type": "string",
        "metadata": {
          "description": "DNS Label for the Public IP. Must be lowercase. It should match with the following regular expression: ^[a-z][a-z0-9-]{1,61}[a-z0-9]$ or it will raise an error."
        },
        "value": "GEN-UNIQUE-8"
      },
      "appVmCount": {
        "type": "int",
        "minValue": 1,
        "maxValue": 20,
        "defaultValue": 1,
        "metadata": {
          "description": "Number of application virtual machines behind the load balancer."
        },
        "value": 1
      },
      "appVmSize": {
        "type": "string",
        "defaultValue": "Standard_D2s_v3",
        "allowedValues": [
          "Standard_D2s_v3",
          "Standard_D4s_v3",
          "Standard_D8s_v3",
          "Standard_D4s_v3",
          "Standard_D4s_v3",
          "Standard_D8s_v3",
          "Standard_D16s_v3",
          "Standard_D2s_v3",
          "Standard_D4s_v3",
          "Standard_D8s_v3",
          "Standard_D16s_v3",
          "Standard_D4s_v3",
          "Standard_D4s_v3",
          "Standard_D8s_v3",
          "Standard_D16s_v3",
          "Standard_D32s_v3"
        ],
        "metadata": {
          "description": "Size of the application virtual machine(s)."
        },
        "value": "Standard_D2s_v3"
      },
      "mySqlVmSize": {
        "type": "string",
        "defaultValue": "Standard_D2s_v3",
        "allowedValues": [
          "Standard_D2s_v3",
          "Standard_D4s_v3",
          "Standard_D8s_v3",
          "Standard_D4s_v3",
          "Standard_D4s_v3",
          "Standard_D8s_v3",
          "Standard_D16s_v3",
          "Standard_D2s_v3",
          "Standard_D4s_v3",
          "Standard_D8s_v3",
          "Standard_D16s_v3",
          "Standard_D4s_v3",
          "Standard_D4s_v3",
          "Standard_D8s_v3",
          "Standard_D16s_v3",
          "Standard_D32s_v3"
        ],
        "metadata": {
          "description": "Size of the MySQL virtual machine."
        },
        "value": "Standard_D2s_v3"
      },
      "mongoVmSize": {
        "type": "string",
        "defaultValue": "Standard_D2s_v3",
        "allowedValues": [
          "Standard_D2s_v3",
          "Standard_D4s_v3",
          "Standard_D8s_v3",
          "Standard_D4s_v3",
          "Standard_D4s_v3",
          "Standard_D8s_v3",
          "Standard_D16s_v3",
          "Standard_D2s_v3",
          "Standard_D4s_v3",
          "Standard_D8s_v3",
          "Standard_D16s_v3",
          "Standard_D4s_v3",
          "Standard_D4s_v3",
          "Standard_D8s_v3",
          "Standard_D16s_v3",
          "Standard_D32s_v3"
        ],
        "metadata": {
          "description": "Size of the MongoDB virtual machine."
        },
        "value": "Standard_D2s_v3"
      },
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Location for all resources."
        }
      },
      "_artifactsLocation": {
        "type": "string",
        "metadata": {
          "description": "The base URI where artifacts required by this template are located including a trailing '/'"
        },
        "defaultValue": "[deployment().properties.templateLink.uri]"
      },
      "_artifactsLocationSasToken": {
        "type": "securestring",
        "metadata": {
          "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated. Use the defaultValue if the staging location is not secured."
        },
        "defaultValue": ""
      }
    },
    "variables": {
      "installScript": "install-openedx.sh",
      "installCommand": "bash -c nohup ./install-openedx.sh 1 GEN-UNIQUE GEN-PASSWORD </dev/null &>/var/log/azure/openedx-install.log &",
      "availabilitySetName": "avail-set",
      "osImagePublisher": "Canonical",
      "osImageOffer": "UbuntuServer",
      "osImageSKU": "12.04.5-LTS",
      "appVmName": "openedx-app",
      "mySqlVmName": "openedx-mysql",
      "mongoVmName": "openedx-mongo",
      "appPublicIPAddressName": "myPublicIP",
      "mySqlPublicIPAddressName": "myPublicIPMySql",
      "mongoPublicIPAddressName": "myPublicIPMongo",
      "virtualNetworkName": "VNET",
      "subnetName": "Subnet",
      "addressPrefix": "10.0.0.0/16",
      "subnetPrefix": "10.0.0.0/24",
      "nsgName": "node-nsg",
      "nsgID": "Microsoft.Network/networkSecurityGroups/node-nsg",
      "storageAccountType": "Premium_LRS",
      "storageAccountName": "[concat(uniquestring(resourceGroup().id), 'vhdsa')]",
      "lbName": "openedx-loadbalancer"
    },
    "resources": [
      {
        "apiVersion": "2021-01-01",
        "type": "Microsoft.Storage/storageAccounts",
        "name": "[variables('storageAccountName')]",
        "location": "[resourceGroup().location]",
        "sku": {
          "name": "Premium_LRS"
        }
      },
      {
        "apiVersion": "2020-12-01",
        "type": "Microsoft.Compute/availabilitySets",
        "name": "avail-set",
        "location": "[resourceGroup().location]",
        "sku": {
          "name": "Aligned"
        },
        "properties": {
          "platformFaultDomainCount": 2,
          "platformUpdateDomainCount": 5
        }
      },
      {
        "apiVersion": "2020-07-01",
        "type": "Microsoft.Network/publicIPAddresses",
        "name": "myPublicIP",
        "location": "[resourceGroup().location]",
        "properties": {
          "publicIPAllocationMethod": "Dynamic",
          "dnsSettings": {
            "domainNameLabel": "GEN-UNIQUE-8"
          }
        }
      },
      {
        "apiVersion": "2020-07-01",
        "type": "Microsoft.Network/publicIPAddresses",
        "name": "myPublicIPMySql",
        "location": "[resourceGroup().location]",
        "properties": {
          "publicIPAllocationMethod": "Dynamic"
        }
      },
      {
        "apiVersion": "2020-07-01",
        "type": "Microsoft.Network/publicIPAddresses",
        "name": "myPublicIPMongo",
        "location": "[resourceGroup().location]",
        "properties": {
          "publicIPAllocationMethod": "Dynamic"
        }
      },
      {
        "apiVersion": "2020-07-01",
        "type": "Microsoft.Network/virtualNetworks",
        "name": "VNET",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "Microsoft.Network/networkSecurityGroups/node-nsg"
        ],
        "properties": {
          "addressSpace": {
            "addressPrefixes": [
              "10.0.0.0/16"
            ]
          },
          "subnets": [
            {
              "name": "Subnet",
              "properties": {
                "addressPrefix": "10.0.0.0/24",
                "networkSecurityGroup": {
                  "id": "Microsoft.Network/networkSecurityGroups/node-nsg"
                }
              }
            }
          ]
        }
      },
      {
        "apiVersion": "2020-07-01",
        "type": "Microsoft.Network/networkSecurityGroups",
        "name": "node-nsg",
        "location": "[resourceGroup().location]",
        "properties": {
          "securityRules": [
            {
              "name": "ssh",
              "properties": {
                "description": "SSH",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "22",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 200,
                "direction": "Inbound"
              }
            },
            {
              "name": "LMS",
              "properties": {
                "description": "Allow connection to Open edX LMS",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "80",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 201,
                "direction": "Inbound"
              }
            },
            {
              "name": "CMS",
              "properties": {
                "description": "Allow connection to Open edX CMS",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "18010",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 203,
                "direction": "Inbound"
              }
            }
          ]
        }
      },
      {
        "apiVersion": "2020-07-01",
        "type": "Microsoft.Network/networkInterfaces",
        "name": "openedx-appcopyIndex()-nic",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "Microsoft.Network/virtualNetworks//VNET",
          "Microsoft.Network/loadBalancers//openedx-loadbalancer",
          "Microsoft.Network/loadBalancers/inboundNatRules/openedx-loadbalancer/SSH-VMcopyIndex()"
        ],
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipConfigNode",
              "properties": {
                "privateIPAllocationMethod": "Dynamic",
                "subnet": {
                  "id": "Microsoft.Network/virtualNetworks/subnets/VNET/Subnet"
                },
                "loadBalancerBackendAddressPools": [
                  {
                    "id": "Microsoft.Network/loadBalancers/backendAddressPools/openedx-loadbalancer/LoadBalancerBackend"
                  }
                ],
                "loadBalancerInboundNatRules": [
                  {
                    "id": "Microsoft.Network/loadBalancers/inboundNatRules/openedx-loadbalancer/SSH-VMcopyIndex()"
                  }
                ]
              }
            }
          ]
        },
        "copy": {
          "name": "appNetworkInterfacesCopy",
          "count": 1
        }
      },
      {
        "apiVersion": "2020-07-01",
        "type": "Microsoft.Network/networkInterfaces",
        "name": "openedx-mysql-nic",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "Microsoft.Network/publicIPAddresses//myPublicIPMySql",
          "Microsoft.Network/virtualNetworks//VNET"
        ],
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipConfigNode",
              "properties": {
                "privateIPAllocationMethod": "Dynamic",
                "publicIPAddress": {
                  "id": "Microsoft.Network/publicIPAddresses/myPublicIPMySql"
                },
                "subnet": {
                  "id": "Microsoft.Network/virtualNetworks/subnets/VNET/Subnet"
                }
              }
            }
          ]
        }
      },
      {
        "apiVersion": "2020-07-01",
        "type": "Microsoft.Network/networkInterfaces",
        "name": "openedx-mongo-nic",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "Microsoft.Network/publicIPAddresses//myPublicIPMongo",
          "Microsoft.Network/virtualNetworks//VNET"
        ],
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipConfigNode",
              "properties": {
                "privateIPAllocationMethod": "Dynamic",
                "publicIPAddress": {
                  "id": "Microsoft.Network/publicIPAddresses/myPublicIPMongo"
                },
                "subnet": {
                  "id": "Microsoft.Network/virtualNetworks/subnets/VNET/Subnet"
                }
              }
            }
          ]
        }
      },
      {
        "apiVersion": "2020-07-01",
        "name": "openedx-loadbalancer",
        "type": "Microsoft.Network/loadBalancers",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "Microsoft.Network/publicIPAddresses//myPublicIP"
        ],
        "properties": {
          "frontendIPConfigurations": [
            {
              "name": "LoadBalancerFrontend",
              "properties": {
                "publicIPAddress": {
                  "id": "Microsoft.Network/publicIPAddresses/myPublicIP"
                }
              }
            }
          ],
          "backendAddressPools": [
            {
              "name": "LoadBalancerBackend"
            }
          ],
          "loadBalancingRules": [
            {
              "name": "LBRuleLMS",
              "properties": {
                "frontendIPConfiguration": {
                  "id": "Microsoft.Network/loadBalancers/frontendIPConfigurations/openedx-loadbalancer/loadBalancerFrontend"
                },
                "backendAddressPool": {
                  "id": "Microsoft.Network/loadBalancers/backendAddressPools/openedx-loadbalancer/LoadBalancerBackend"
                },
                "protocol": "Tcp",
                "frontendPort": 80,
                "backendPort": 80,
                "enableFloatingIP": false,
                "idleTimeoutInMinutes": 5,
                "loadDistribution": "SourceIP",
                "probe": {
                  "id": "Microsoft.Network/loadBalancers/probes/openedx-loadbalancer/tcpProbeLMS"
                }
              }
            },
            {
              "name": "LBRuleCMS",
              "properties": {
                "frontendIPConfiguration": {
                  "id": "Microsoft.Network/loadBalancers/frontendIPConfigurations/openedx-loadbalancer/loadBalancerFrontend"
                },
                "backendAddressPool": {
                  "id": "Microsoft.Network/loadBalancers/backendAddressPools/openedx-loadbalancer/LoadBalancerBackend"
                },
                "protocol": "Tcp",
                "frontendPort": 18010,
                "backendPort": 18010,
                "enableFloatingIP": false,
                "idleTimeoutInMinutes": 5,
                "loadDistribution": "SourceIP",
                "probe": {
                  "id": "Microsoft.Network/loadBalancers/probes/openedx-loadbalancer/tcpProbeCMS"
                }
              }
            },
            {
              "name": "LBRuleSSL",
              "properties": {
                "frontendIPConfiguration": {
                  "id": "Microsoft.Network/loadBalancers/frontendIPConfigurations/openedx-loadbalancer/loadBalancerFrontend"
                },
                "backendAddressPool": {
                  "id": "Microsoft.Network/loadBalancers/backendAddressPools/openedx-loadbalancer/LoadBalancerBackend"
                },
                "protocol": "Tcp",
                "frontendPort": 443,
                "backendPort": 443,
                "enableFloatingIP": false,
                "idleTimeoutInMinutes": 5,
                "loadDistribution": "SourceIP"
              }
            }
          ],
          "probes": [
            {
              "name": "tcpProbeLMS",
              "properties": {
                "protocol": "Tcp",
                "port": 80,
                "intervalInSeconds": 5,
                "numberOfProbes": 2
              }
            },
            {
              "name": "tcpProbeCMS",
              "properties": {
                "protocol": "Tcp",
                "port": 18010,
                "intervalInSeconds": 5,
                "numberOfProbes": 2
              }
            }
          ]
        }
      },
      {
        "apiVersion": "2019-11-01",
        "type": "Microsoft.Network/loadBalancers/inboundNatRules",
        "name": "openedx-loadbalancer/SSH-VMcopyIndex()",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "Microsoft.Network/loadBalancers//openedx-loadbalancer"
        ],
        "properties": {
          "frontendIPConfiguration": {
            "id": "Microsoft.Network/loadBalancers/frontendIPConfigurations/openedx-loadbalancer/loadBalancerFrontend"
          },
          "protocol": "Tcp",
          "frontendPort": "[copyIndex(2220)]",
          "backendPort": 22,
          "enableFloatingIP": false
        },
        "copy": {
          "name": "inboundNatRulesCopy",
          "count": 1
        }
      },
      {
        "apiVersion": "2020-12-01",
        "type": "Microsoft.Compute/virtualMachines",
        "name": "openedx-appcopyIndex()",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "[resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
          "[resourceId('Microsoft.Network/networkInterfaces/', concat(variables('appVmName'), copyIndex(), '-nic'))]",
          "[resourceId('Microsoft.Compute/availabilitySets/', variables('availabilitySetName'))]"
        ],
        "properties": {
          "availabilitySet": {
            "id": "Microsoft.Compute/availabilitySets/avail-set"
          },
          "hardwareProfile": {
            "vmSize": "Standard_D2s_v3"
          },
          "osProfile": {
            "computerName": "openedx-appcopyIndex()",
            "adminUsername": "GEN-UNIQUE",
            "adminPassword": "GEN-PASSWORD"
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "Canonical",
              "offer": "UbuntuServer",
              "sku": "12.04.5-LTS",
              "version": "latest"
            },
            "osDisk": {
              "name": "openedx-appcopyIndex()_OSDisk",
              "caching": "ReadWrite",
              "createOption": "FromImage"
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "Microsoft.Network/networkInterfaces/openedx-appcopyIndex()-nic"
              }
            ]
          }
        },
        "copy": {
          "name": "appVMCopy",
          "count": 1
        }
      },
      {
        "apiVersion": "2020-12-01",
        "type": "Microsoft.Compute/virtualMachines",
        "name": "openedx-mysql",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "[resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
          "[resourceId('Microsoft.Network/networkInterfaces/', concat(variables('mySqlVmName'), '-nic'))]"
        ],
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_D2s_v3"
          },
          "osProfile": {
            "computerName": "openedx-mysql",
            "adminUsername": "GEN-UNIQUE",
            "adminPassword": "GEN-PASSWORD"
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "Canonical",
              "offer": "UbuntuServer",
              "sku": "12.04.5-LTS",
              "version": "latest"
            },
            "osDisk": {
              "name": "openedx-mysql_OSDisk",
              "caching": "ReadWrite",
              "createOption": "FromImage"
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "Microsoft.Network/networkInterfaces/openedx-mysql-nic"
              }
            ]
          }
        }
      },
      {
        "apiVersion": "2020-12-01",
        "type": "Microsoft.Compute/virtualMachines",
        "name": "openedx-mongo",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "[resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
          "[resourceId('Microsoft.Network/networkInterfaces/', concat(variables('mongoVmName'), '-nic'))]"
        ],
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_D2s_v3"
          },
          "osProfile": {
            "computerName": "openedx-mongo",
            "adminUsername": "GEN-UNIQUE",
            "adminPassword": "GEN-PASSWORD"
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "Canonical",
              "offer": "UbuntuServer",
              "sku": "12.04.5-LTS",
              "version": "latest"
            },
            "osDisk": {
              "name": "openedx-mongo_OSDisk",
              "caching": "ReadWrite",
              "createOption": "FromImage"
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "Microsoft.Network/networkInterfaces/openedx-mongo-nic"
              }
            ]
          }
        }
      },
      {
        "apiVersion": "2020-12-01",
        "type": "Microsoft.Compute/virtualMachines/extensions",
        "name": "openedx-app0/installscript",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "Microsoft.Compute/virtualMachines//openedx-app0"
        ],
        "properties": {
          "publisher": "Microsoft.Azure.Extensions",
          "type": "CustomScript",
          "typeHandlerVersion": "2.0",
          "autoUpgradeMinorVersion": true,
          "settings": {
            "fileUris": [
              "[uri(parameters('_artifactsLocation'), concat('scripts/install-openedx.sh', parameters('_artifactsLocationSasToken')))]",
              "[uri(parameters('_artifactsLocation'), concat('scripts/server-vars.yml', parameters('_artifactsLocationSasToken')))]",
              "[uri(parameters('_artifactsLocation'), concat('scripts/inventory.ini', parameters('_artifactsLocationSasToken')))]"
            ]
          },
          "protectedSettings": {
            "commandToExecute": "bash -c nohup ./install-openedx.sh 1 GEN-UNIQUE GEN-PASSWORD </dev/null &>/var/log/azure/openedx-install.log &"
          }
        }
      }
    ],
    "\uff04schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#"
  }
}