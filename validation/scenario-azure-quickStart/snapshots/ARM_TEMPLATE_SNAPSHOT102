{
  "structure": "filesystem",
  "error": null,
  "reference": "master",
  "contentType": "json",
  "source": "gitConnectorAzureQuickStart",
  "paths": [
    "/application-workloads/concourse/concourse-ci/azuredeploy.json",
    "/application-workloads/concourse/concourse-ci/azuredeploy.parameters.json"
  ],
  "timestamp": 1642962886472,
  "queryuser": null,
  "checksum": "99914b932bd37a50b983c5e7c90ae93b",
  "node": {
    "masterSnapshotId": "ARM_TEMPLATE_SNAPSHOT",
    "type": "arm",
    "collection": "armtemplate",
    "paths": [
      "/application-workloads/concourse/concourse-ci/azuredeploy.json",
      "/application-workloads/concourse/concourse-ci/azuredeploy.parameters.json"
    ],
    "snapshotId": "ARM_TEMPLATE_SNAPSHOT102",
    "status": "active",
    "validate": true,
    "resourceTypes": [
      "microsoft.network/publicipaddresses",
      "microsoft.network/virtualnetworks",
      "microsoft.resources/deployments",
      "microsoft.network/networkinterfaces",
      "microsoft.compute/virtualmachines/extensions",
      "microsoft.compute/virtualmachines",
      "microsoft.network/networksecuritygroups",
      "microsoft.storage/storageaccounts"
    ]
  },
  "snapshotId": "ARM_TEMPLATE_SNAPSHOT102",
  "collection": "armtemplate",
  "json": {
    "contentVersion": "1.0.0.0",
    "parameters": {
      "jumpboxVmName": {
        "type": "string",
        "metadata": {
          "description": "Name of the jumpbox VM, will be used as DNS Name for the Public IP used to access the Virtual Machine"
        },
        "value": "GEN-UNIQUE"
      },
      "jumpboxUbuntuOSVersion": {
        "type": "string",
        "defaultValue": "16.04-LTS",
        "metadata": {
          "description": "OS version of Ubuntu"
        }
      },
      "jumpboxVmSize": {
        "type": "string",
        "defaultValue": "Standard_D2_v3",
        "metadata": {
          "description": "Please check if the region support this VM size https://azure.microsoft.com/en-us/regions/#services. For more information about virtual machine sizes, see https://azure.microsoft.com/en-us/documentation/articles/virtual-machines-linux-sizes/"
        }
      },
      "jumpboxUsername": {
        "type": "string",
        "metadata": {
          "description": "User name for the Virtual Machine"
        },
        "value": "GEN-UNIQUE"
      },
      "jumpboxSshKeyData": {
        "type": "string",
        "metadata": {
          "description": "Please copy the content of your SSH RSA public key and paste it here. You can use \"ssh-keygen -t rsa -b 2048\" to generate your SSH key pairs."
        },
        "value": "GEN-SSH-PUB-KEY"
      },
      "concourseUsername": {
        "type": "string",
        "metadata": {
          "description": "Login username for Concourse web portal or Fly CLI"
        },
        "value": "GEN-UNIQUE-8"
      },
      "concoursePassword": {
        "type": "securestring",
        "metadata": {
          "description": "Login password for Concourse web portal or Fly CLI"
        },
        "value": "GEN-PASSWORD"
      },
      "concourseWorkerDiskSize": {
        "type": "int",
        "defaultValue": 30,
        "minValue": 30,
        "maxValue": 1023,
        "metadata": {
          "description": "Disk size of Concourse worker instance in GB, value must be between 30GB to 1023GB"
        },
        "value": 30
      },
      "environment": {
        "type": "string",
        "defaultValue": "AzureCloud",
        "allowedValues": [
          "AzureCloud",
          "AzureChinaCloud"
        ],
        "metadata": {
          "description": "Different environments in Azure. Supported values: AzureCloud, AzureChinaCloud"
        },
        "value": "AzureCloud"
      },
      "tenantID": {
        "type": "string",
        "metadata": {
          "description": "ID of the tenant. See https://github.com/cloudfoundry-incubator/bosh-azure-cpi-release/blob/master/docs/guidance.md"
        },
        "value": "GEN-AZUREAD-AKS-TENANTID"
      },
      "clientID": {
        "type": "string",
        "metadata": {
          "description": "ID of the client. See https://github.com/cloudfoundry-incubator/bosh-azure-cpi-release/blob/master/docs/guidance.md"
        },
        "value": "GEN-AZUREAD-AKS-APPID"
      },
      "clientSecret": {
        "type": "securestring",
        "metadata": {
          "description": "secret of the client. See https://github.com/cloudfoundry-incubator/bosh-azure-cpi-release/blob/master/docs/guidance.md"
        },
        "value": "GEN-AZUREAD-AKS-APPID-SECRET"
      },
      "boshVmSize": {
        "type": "string",
        "defaultValue": "Standard_D2_v3",
        "metadata": {
          "description": "Please check if the region support this VM size https://azure.microsoft.com/en-us/regions/#services. For more information about virtual machine sizes, see https://azure.microsoft.com/en-us/documentation/articles/virtual-machines-linux-sizes/"
        }
      },
      "autoDeployBosh": {
        "type": "string",
        "defaultValue": "enabled",
        "allowedValues": [
          "enabled",
          "disabled"
        ],
        "metadata": {
          "description": "The flag allowing to deploy Bosh automatically or not"
        }
      },
      "autoDeployConcourse": {
        "type": "string",
        "defaultValue": "enabled",
        "allowedValues": [
          "enabled",
          "disabled"
        ],
        "metadata": {
          "description": "The flag allowing to deploy Concourse automatically or not"
        }
      },
      "_artifactsLocation": {
        "type": "string",
        "defaultValue": "[deployment().properties.templateLink.uri]",
        "metadata": {
          "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
        }
      },
      "_artifactsLocationSasToken": {
        "type": "securestring",
        "defaultValue": "",
        "metadata": {
          "description": "For a standard deployment, leave empty. If you are running from a blob template, then provide the Shared Access Signature token (starting with a ?) that grants authorization to the private template. "
        }
      },
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Location for all resources."
        }
      }
    },
    "variables": {
      "defaultStorageAccountName": "[concat('concourse', uniqueString(resourceGroup().id))]",
      "storageAccountType": "Standard_RAGRS",
      "storageid": "[resourceId('Microsoft.Storage/storageAccounts', variables('defaultStorageAccountName'))]",
      "virtualNetworkName": "vnet",
      "virtualNetworkAddressSpace": "10.0.0.0/16",
      "subnetNameForBosh": "Bosh",
      "subnetAddressRangeForBosh": "10.0.0.0/24",
      "subnetGatewayForBosh": "10.0.0.1",
      "internalIPForBosh": "10.0.0.4",
      "subnetNameForConcourse": "Concourse",
      "subnetAddressRangeForConcourse": "10.0.16.0/20",
      "subnetGatewayForConcourse": "10.0.16.1",
      "devboxNetworkSecurityGroup": "nsg-devbox",
      "boshNetworkSecurityGroup": "nsg-bosh",
      "concourseNetworkSecurityGroup": "nsg-concourse",
      "nicName": "GEN-UNIQUE",
      "devboxPrivateIPAddress": "10.0.0.100",
      "imagePublisher": "Canonical",
      "imageOffer": "UbuntuServer",
      "sshKeyPath": "/home/GEN-UNIQUE/.ssh/authorized_keys",
      "baseUriAzureCloud": "[deployment().properties.templateLink.uri]",
      "baseUriAzureChinaCloud": "https://cloudfoundry.blob.core.chinacloudapi.cn/bosh-setup/",
      "filesToDownload": [
        "[uri(variables('baseUriAzureCloud'), concat('scripts/setup_env.sh', parameters('_artifactsLocationSasToken')))]",
        "[uri(variables('baseUriAzureCloud'), concat('manifests/bosh.yml', parameters('_artifactsLocationSasToken')))]",
        "[uri(variables('baseUriAzureCloud'), concat('manifests/cpi.yml', parameters('_artifactsLocationSasToken')))]",
        "[uri(variables('baseUriAzureCloud'), concat('manifests/custom-cpi-release.yml', parameters('_artifactsLocationSasToken')))]",
        "[uri(variables('baseUriAzureCloud'), concat('manifests/custom-environment.yml', parameters('_artifactsLocationSasToken')))]",
        "[uri(variables('baseUriAzureCloud'), concat('manifests/use-managed-disks.yml', parameters('_artifactsLocationSasToken')))]",
        "[uri(variables('baseUriAzureCloud'), concat('manifests/use-azure-dns.yml', parameters('_artifactsLocationSasToken')))]",
        "[uri(variables('baseUriAzureCloud'), concat('manifests/jumpbox-user.yml', parameters('_artifactsLocationSasToken')))]",
        "[uri(variables('baseUriAzureCloud'), concat('manifests/keep-failed-or-unreachable-vms.yml', parameters('_artifactsLocationSasToken')))]",
        "[uri(variables('baseUriAzureCloud'), concat('manifests/cloud-config.yml', parameters('_artifactsLocationSasToken')))]",
        "[uri(variables('baseUriAzureCloud'), concat('manifests/concourse.yml', parameters('_artifactsLocationSasToken')))]",
        "[uri(variables('baseUriAzureCloud'), concat('manifests/use-mirror-releases-for-bosh.yml', parameters('_artifactsLocationSasToken')))]",
        "[uri(variables('baseUriAzureCloud'), concat('manifests/use-mirror-releases-for-concourse.yml', parameters('_artifactsLocationSasToken')))]"
      ],
      "environment": {
        "AzureCloud": {
          "serviceHostBase": "[environment().suffixes.storage]",
          "boshCliUrl": "https://s3.amazonaws.com/bosh-cli-artifacts/bosh-cli-5.1.2-linux-amd64",
          "boshAzureCPIReleaseUrl": "https://bosh.io/d/github.com/cloudfoundry-incubator/bosh-azure-cpi-release?v=35.4.0",
          "boshAzureCPIReleaseSha1": "372c0220e2e38ca9201135eccb52ff912f2d0538",
          "stemcellUrl": "https://bosh.io/d/stemcells/bosh-azure-hyperv-ubuntu-xenial-go_agent?v=97.12",
          "stemcellSha1": "a04ddc9b87dfb8431838df706a7b0d5ddaf2db4d"
        },
        "azureChinaCloud": {
          "serviceHostBase": "core.chinacloudapi.cn",
          "boshCliUrl": "[uri(variables('baseUriAzureChinaCloud'), 'bosh-cli/bosh-cli-5.1.2-linux-amd64')]",
          "boshAzureCPIReleaseUrl": "https://mirror.azure.cn/bosh/bosh-azure-cpi-release/bosh-azure-cpi-release-35.4.0.tgz",
          "boshAzureCPIReleaseSha1": "372c0220e2e38ca9201135eccb52ff912f2d0538",
          "stemcellUrl": "[uri(variables('baseUriAzureChinaCloud'), 'bosh-azure-stemcells/bosh-stemcell-97.12-azure-hyperv-ubuntu-xenial-go_agent.tgz')]",
          "stemcellSha1": "a04ddc9b87dfb8431838df706a7b0d5ddaf2db4d"
        }
      },
      "environmentVariable": "(environment)[parameters(environment)]"
    },
    "resources": [
      {
        "apiVersion": "2020-07-01",
        "type": "Microsoft.Network/networkSecurityGroups",
        "name": "nsg-bosh",
        "location": "[resourceGroup().location]",
        "properties": {
          "securityRules": [
            {
              "name": "ssh",
              "properties": {
                "description": "Allow SSH",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "22",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 200,
                "direction": "Inbound"
              }
            },
            {
              "name": "bosh-agent",
              "properties": {
                "description": "Allow bosh-agent",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "6868",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 201,
                "direction": "Inbound"
              }
            },
            {
              "name": "bosh-director",
              "properties": {
                "description": "Allow bosh-director",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "25555",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 202,
                "direction": "Inbound"
              }
            },
            {
              "name": "dns",
              "properties": {
                "description": "Allow DNS",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "53",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 203,
                "direction": "Inbound"
              }
            }
          ]
        }
      },
      {
        "apiVersion": "2020-07-01",
        "type": "Microsoft.Network/networkSecurityGroups",
        "name": "nsg-devbox",
        "location": "[resourceGroup().location]",
        "properties": {
          "securityRules": [
            {
              "name": "ssh",
              "properties": {
                "description": "Allow SSH",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "22",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 200,
                "direction": "Inbound"
              }
            }
          ]
        }
      },
      {
        "apiVersion": "2020-07-01",
        "type": "Microsoft.Network/networkSecurityGroups",
        "name": "nsg-concourse",
        "location": "[resourceGroup().location]",
        "properties": {
          "securityRules": [
            {
              "name": "concourse-https",
              "properties": {
                "description": "Allow HTTPS",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "443",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 200,
                "direction": "Inbound"
              }
            },
            {
              "name": "concourse-ssh",
              "properties": {
                "description": "Allow SSH",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "22",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 201,
                "direction": "Inbound"
              }
            },
            {
              "name": "concourse-http",
              "properties": {
                "description": "Allow HTTP",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "80",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 202,
                "direction": "Inbound"
              }
            },
            {
              "name": "concourse-atc",
              "properties": {
                "description": "Allow Concourse ATC",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "8080",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 203,
                "direction": "Inbound"
              }
            },
            {
              "name": "concourse-tsa",
              "properties": {
                "description": "Allow Concourse TSA",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "2222",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 204,
                "direction": "Inbound"
              }
            },
            {
              "name": "concourse-garden",
              "properties": {
                "description": "Allow Concourse Garden",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "7777",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 205,
                "direction": "Inbound"
              }
            },
            {
              "name": "concourse-baggageclaim",
              "properties": {
                "description": "Allow Concourse Baggageclaim",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "7788",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 206,
                "direction": "Inbound"
              }
            }
          ]
        }
      },
      {
        "type": "Microsoft.Storage/storageAccounts",
        "name": "[variables('defaultStorageAccountName')]",
        "apiVersion": "2015-06-15",
        "location": "[resourceGroup().location]",
        "properties": {
          "accountType": "Standard_RAGRS"
        }
      },
      {
        "apiVersion": "2015-06-15",
        "type": "Microsoft.Network/publicIPAddresses",
        "name": "GEN-UNIQUE-devbox",
        "location": "[resourceGroup().location]",
        "properties": {
          "publicIPAllocationMethod": "Dynamic",
          "dnsSettings": {
            "domainNameLabel": "[concat(toLower(parameters('jumpboxVmName')), '-', uniqueString(resourceGroup().id))]"
          }
        }
      },
      {
        "apiVersion": "2015-06-15",
        "type": "Microsoft.Network/publicIPAddresses",
        "name": "GEN-UNIQUE-concourse",
        "location": "[resourceGroup().location]",
        "properties": {
          "publicIPAllocationMethod": "static"
        }
      },
      {
        "apiVersion": "2015-06-15",
        "type": "Microsoft.Network/virtualNetworks",
        "name": "vnet",
        "location": "[resourceGroup().location]",
        "properties": {
          "addressSpace": {
            "addressPrefixes": [
              "10.0.0.0/16"
            ]
          },
          "subnets": [
            {
              "name": "Bosh",
              "properties": {
                "addressPrefix": "10.0.0.0/24"
              }
            },
            {
              "name": "Concourse",
              "properties": {
                "addressPrefix": "10.0.16.0/20"
              }
            }
          ]
        }
      },
      {
        "apiVersion": "2015-06-15",
        "type": "Microsoft.Network/networkInterfaces",
        "name": "GEN-UNIQUE",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "Microsoft.Network/publicIPAddresses//GEN-UNIQUE-devbox",
          "Microsoft.Network/virtualNetworks//vnet",
          "Microsoft.Network/networkSecurityGroups//nsg-devbox"
        ],
        "properties": {
          "networkSecurityGroup": {
            "id": "Microsoft.Network/networkSecurityGroups/nsg-devbox"
          },
          "ipConfigurations": [
            {
              "name": "ipconfig1",
              "properties": {
                "privateIPAllocationMethod": "Static",
                "privateIPAddress": "10.0.0.100",
                "publicIPAddress": {
                  "id": "Microsoft.Network/publicIPAddresses/GEN-UNIQUE-devbox"
                },
                "subnet": {
                  "id": "Microsoft.Network/virtualNetworks/subnets/vnet/Bosh"
                }
              }
            }
          ]
        }
      },
      {
        "name": "generate-customdata",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2015-01-01",
        "dependsOn": [
          "[resourceId('Microsoft.Storage/storageAccounts/', variables('defaultStorageAccountName'))]",
          "[resourceId('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(variables('baseUriAzureCloud'), concat('generate-customdata.json', parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "customData": {
              "value": {
                "VNET_NAME": "vnet",
                "SUBNET_NAME_FOR_BOSH": "Bosh",
                "SUBNET_ADDRESS_RANGE_FOR_BOSH": "10.0.0.0/24",
                "BOSH_VM_SIZE": "Standard_D2_v3",
                "SUBNET_GATEWAY_FOR_BOSH": "10.0.0.1",
                "INTERNAL_IP_FOR_BOSH": "10.0.0.4",
                "SUBNET_NAME_FOR_CONCOURSE": "Concourse",
                "SUBNET_ADDRESS_RANGE_FOR_CONCOURSE": "10.0.16.0/20",
                "SUBNET_GATEWAY_FOR_CONCOURSE": "subnetgatewayForConcourse",
                "CONCOURSE_PUBLIC_IP": "[reference(resourceId('Microsoft.Network/publicIPAddresses', concat(parameters('jumpboxVmName'),'-concourse'))).ipAddress]",
                "NSG_NAME_FOR_BOSH": "nsg-bosh",
                "NSG_NAME_FOR_CONCOURSE": "nsg-concourse",
                "SUBSCRIPTION_ID": "[subscription().subscriptionId]",
                "RESOURCE_GROUP_NAME": "[resourceGroup().name]",
                "DEFAULT_STORAGE_ACCOUNT_NAME": "[variables('defaultStorageAccountName')]",
                "STORAGE_ACCESS_KEY": "[listKeys(variables('storageid'), '2015-06-15').key1]",
                "ADMIN_USER_NAME": "GEN-UNIQUE",
                "ENVIRONMENT": "AzureCloud",
                "SERVICE_HOST_BASE": "(environmentVariable).serviceHostBase",
                "BOSH_AZURE_CPI_RELEASE_URL": "(environmentVariable).boshAzureCPIReleaseUrl",
                "BOSH_AZURE_CPI_RELEASE_SHA1": "(environmentVariable).boshAzureCPIReleaseSha1",
                "STEMCELL_URL": "(environmentVariable).stemcellUrl",
                "STEMCELL_SHA1": "(environmentVariable).stemcellSha1",
                "BOSH_CLI_URL": "(environmentVariable).boshCLIUrl",
                "AUTO_DEPLOY_BOSH": "enabled",
                "AUTO_DEPLOY_CONCOURSE": "enabled",
                "CONCOURSE_USERNAME": "GEN-UNIQUE-8",
                "CONCOURSE_PASSWORD": "GEN-PASSWORD",
                "CONCOURSE_WORKER_DISK_SIZE": 30
              }
            }
          }
        }
      },
      {
        "apiVersion": "2017-03-30",
        "type": "Microsoft.Compute/virtualMachines",
        "name": "GEN-UNIQUE",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "Microsoft.Resources/deployments/generate-customdata"
        ],
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_D2_v3"
          },
          "osProfile": {
            "computerName": "GEN-UNIQUE",
            "adminUsername": "GEN-UNIQUE",
            "linuxConfiguration": {
              "disablePasswordAuthentication": true,
              "ssh": {
                "publicKeys": [
                  {
                    "path": "/home/GEN-UNIQUE/.ssh/authorized_keys",
                    "keyData": "GEN-SSH-PUB-KEY"
                  }
                ]
              }
            },
            "customData": "[reference('Microsoft.Resources/deployments/generate-customdata', '2015-01-01').outputs.customData.value]"
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "Canonical",
              "offer": "UbuntuServer",
              "sku": "16.04-LTS",
              "version": "latest"
            },
            "osDisk": {
              "name": "GEN-UNIQUE_OSDisk",
              "caching": "ReadWrite",
              "createOption": "FromImage"
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "Microsoft.Network/networkInterfaces/GEN-UNIQUE"
              }
            ]
          }
        }
      },
      {
        "type": "Microsoft.Compute/virtualMachines/extensions",
        "name": "GEN-UNIQUE/initdevbox",
        "apiVersion": "2015-06-15",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "Microsoft.Compute/virtualMachines//GEN-UNIQUE"
        ],
        "properties": {
          "publisher": "Microsoft.Azure.Extensions",
          "type": "CustomScript",
          "typeHandlerVersion": "2.0",
          "autoUpgradeMinorVersion": true,
          "settings": {
            "fileUris": [
              "[uri(variables('baseUriAzureCloud'), concat('scripts/setup_env.sh', parameters('_artifactsLocationSasToken')))]",
              "[uri(variables('baseUriAzureCloud'), concat('manifests/bosh.yml', parameters('_artifactsLocationSasToken')))]",
              "[uri(variables('baseUriAzureCloud'), concat('manifests/cpi.yml', parameters('_artifactsLocationSasToken')))]",
              "[uri(variables('baseUriAzureCloud'), concat('manifests/custom-cpi-release.yml', parameters('_artifactsLocationSasToken')))]",
              "[uri(variables('baseUriAzureCloud'), concat('manifests/custom-environment.yml', parameters('_artifactsLocationSasToken')))]",
              "[uri(variables('baseUriAzureCloud'), concat('manifests/use-managed-disks.yml', parameters('_artifactsLocationSasToken')))]",
              "[uri(variables('baseUriAzureCloud'), concat('manifests/use-azure-dns.yml', parameters('_artifactsLocationSasToken')))]",
              "[uri(variables('baseUriAzureCloud'), concat('manifests/jumpbox-user.yml', parameters('_artifactsLocationSasToken')))]",
              "[uri(variables('baseUriAzureCloud'), concat('manifests/keep-failed-or-unreachable-vms.yml', parameters('_artifactsLocationSasToken')))]",
              "[uri(variables('baseUriAzureCloud'), concat('manifests/cloud-config.yml', parameters('_artifactsLocationSasToken')))]",
              "[uri(variables('baseUriAzureCloud'), concat('manifests/concourse.yml', parameters('_artifactsLocationSasToken')))]",
              "[uri(variables('baseUriAzureCloud'), concat('manifests/use-mirror-releases-for-bosh.yml', parameters('_artifactsLocationSasToken')))]",
              "[uri(variables('baseUriAzureCloud'), concat('manifests/use-mirror-releases-for-concourse.yml', parameters('_artifactsLocationSasToken')))]"
            ]
          },
          "protectedSettings": {
            "commandToExecute": "bash -l -c \"./setup_env.sh GEN-AZUREAD-AKS-TENANTID GEN-AZUREAD-AKS-APPID GEN-AZUREAD-AKS-APPID-SECRET 2>&1 | tee /home/GEN-UNIQUE/install.log\""
          }
        }
      }
    ],
    "outputs": {
      "sshDevBox": {
        "type": "string",
        "value": "[concat('ssh ', parameters('jumpboxUsername'), '@', reference(resourceId('Microsoft.Network/publicIPAddresses/', concat(parameters('jumpboxVmName'), '-devbox'))).dnsSettings.fqdn)]"
      },
      "concourseEndpoint": {
        "type": "string",
        "value": "[concat('http://', reference(resourceId('Microsoft.Network/publicIPAddresses',concat(parameters('jumpboxVmName'), '-concourse'))).ipAddress, ':8080')]"
      }
    },
    "\uff04schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#"
  }
}