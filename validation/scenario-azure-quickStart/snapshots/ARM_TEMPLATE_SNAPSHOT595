{
  "structure": "filesystem",
  "error": null,
  "reference": "master",
  "contentType": "json",
  "source": "gitConnectorAzureQuickStart",
  "paths": [
    "/application-workloads/zulu/Linux-Java-ZuluOpenJDK/azuredeploy.json",
    "/application-workloads/zulu/Linux-Java-ZuluOpenJDK/azuredeploy.parameters.json"
  ],
  "timestamp": 1642962897608,
  "queryuser": null,
  "checksum": "99914b932bd37a50b983c5e7c90ae93b",
  "node": {
    "masterSnapshotId": "ARM_TEMPLATE_SNAPSHOT",
    "type": "arm",
    "collection": "armtemplate",
    "paths": [
      "/application-workloads/zulu/Linux-Java-ZuluOpenJDK/azuredeploy.json",
      "/application-workloads/zulu/Linux-Java-ZuluOpenJDK/azuredeploy.parameters.json"
    ],
    "snapshotId": "ARM_TEMPLATE_SNAPSHOT595",
    "status": "active",
    "validate": true,
    "resourceTypes": [
      "microsoft.network/publicipaddresses",
      "microsoft.network/virtualnetworks",
      "microsoft.network/networkinterfaces",
      "microsoft.compute/virtualmachines",
      "microsoft.network/networksecuritygroups",
      "microsoft.storage/storageaccounts"
    ]
  },
  "snapshotId": "ARM_TEMPLATE_SNAPSHOT595",
  "collection": "armtemplate",
  "json": {
    "contentVersion": "1.0.0.0",
    "parameters": {
      "OS": {
        "type": "string",
        "defaultValue": "Ubuntu 20.04-LTS",
        "allowedValues": [
          "Ubuntu 20.04-LTS",
          "Ubuntu 18.04-LTS",
          "Debian 10",
          "Debian 9",
          "CentOS 8.1"
        ],
        "metadata": {
          "description": "The Linux distribution for the VM. This will pick a fully patched image of the selected distribution."
        }
      },
      "javaPackageName": {
        "type": "string",
        "defaultValue": "Azul_Zulu_OpenJDK-8-JDK",
        "allowedValues": [
          "Azul_Zulu_OpenJDK-7-JDK",
          "Azul_Zulu_OpenJDK-7-JRE",
          "Azul_Zulu_OpenJDK-7-JRE-Headless",
          "Azul_Zulu_OpenJDK-8-JDK",
          "Azul_Zulu_OpenJDK-8-JRE",
          "Azul_Zulu_OpenJDK-8-JRE-Headless",
          "Azul_Zulu_OpenJDK-11-JDK",
          "Azul_Zulu_OpenJDK-11-JRE",
          "Azul_Zulu_OpenJDK-11-JRE-Headless",
          "Azul_Zulu_OpenJDK-13-JDK",
          "Azul_Zulu_OpenJDK-13-JRE",
          "Azul_Zulu_OpenJDK-13-JRE-Headless"
        ],
        "metadata": {
          "description": "Azul Zulu OpenJDK JVM for Azure package name"
        }
      },
      "vmSize": {
        "type": "string",
        "defaultValue": "Standard_D2s_v3",
        "metadata": {
          "description": "Size for the Virtual Machine."
        }
      },
      "vmName": {
        "type": "string",
        "defaultValue": "linux-zulu",
        "metadata": {
          "description": "Name for the Virtual Machine."
        }
      },
      "adminUsername": {
        "type": "string",
        "metadata": {
          "description": "User name for the Virtual Machine."
        },
        "value": "GEN-UNIQUE"
      },
      "authenticationType": {
        "type": "string",
        "defaultValue": "sshPublicKey",
        "allowedValues": [
          "password",
          "sshPublicKey"
        ],
        "metadata": {
          "description": "Type of authentication to use on the Virtual Machine."
        }
      },
      "adminPasswordOrKey": {
        "type": "securestring",
        "metadata": {
          "description": "Password or SSH key for the Virtual Machine."
        },
        "value": "GEN-SSH-PUB-KEY"
      },
      "storageNewOrExisting": {
        "type": "string",
        "defaultValue": "new",
        "metadata": {
          "description": "Determines whether or not a new storage account should be provisioned."
        }
      },
      "storageAccountName": {
        "type": "string",
        "defaultValue": "[concat('storage', uniqueString(resourceGroup().id))]",
        "metadata": {
          "description": "Name of the storage account"
        }
      },
      "storageAccountType": {
        "type": "string",
        "defaultValue": "Standard_LRS",
        "allowedValues": [
          "Standard_LRS"
        ],
        "metadata": {
          "description": "Storage account type"
        }
      },
      "storageAccountResourceGroupName": {
        "type": "string",
        "defaultValue": "[resourceGroup().name]",
        "metadata": {
          "description": "Name of the resource group for the existing storage account"
        }
      },
      "virtualNetworkNewOrExisting": {
        "type": "string",
        "defaultValue": "new",
        "metadata": {
          "description": "Determines whether or not a new virtual network should be provisioned."
        }
      },
      "virtualNetworkName": {
        "type": "string",
        "defaultValue": "VirtualNetwork",
        "metadata": {
          "description": "Name of the virtual network"
        }
      },
      "addressPrefixes": {
        "type": "array",
        "defaultValue": [
          "10.0.0.0/16"
        ],
        "metadata": {
          "description": "Address prefix of the virtual network"
        }
      },
      "subnetName": {
        "type": "string",
        "defaultValue": "default",
        "metadata": {
          "description": "Name of the subnet"
        }
      },
      "subnetPrefix": {
        "type": "string",
        "defaultValue": "10.0.0.0/24",
        "metadata": {
          "description": "Subnet prefix of the virtual network"
        }
      },
      "virtualNetworkResourceGroupName": {
        "type": "string",
        "defaultValue": "[resourceGroup().name]",
        "metadata": {
          "description": "Name of the resource group for the existing virtual network"
        }
      },
      "publicIpNewOrExisting": {
        "type": "string",
        "defaultValue": "new",
        "metadata": {
          "description": "Determines whether or not a new public ip should be provisioned."
        }
      },
      "publicIpName": {
        "type": "string",
        "defaultValue": "PublicIp",
        "metadata": {
          "description": "Name of the public ip address"
        }
      },
      "publicIpDns": {
        "type": "string",
        "defaultValue": "[concat('linux-vm-', uniqueString(resourceGroup().id))]",
        "metadata": {
          "description": "DNS of the public ip address for the VM"
        }
      },
      "publicIpResourceGroupName": {
        "type": "string",
        "defaultValue": "[resourceGroup().name]",
        "metadata": {
          "description": "Name of the resource group for the public ip address"
        }
      },
      "publicIpAllocationMethod": {
        "type": "string",
        "defaultValue": "Dynamic",
        "allowedValues": [
          "Dynamic",
          "Static"
        ],
        "metadata": {
          "description": "Allocation method for the public ip address"
        }
      },
      "publicIpSku": {
        "type": "string",
        "defaultValue": "Basic",
        "allowedValues": [
          "Basic",
          "Standard"
        ],
        "metadata": {
          "description": "Name of the resource group for the public ip address"
        }
      },
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Location for the resources."
        }
      },
      "_artifactsLocation": {
        "type": "string",
        "metadata": {
          "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
        },
        "defaultValue": "[deployment().properties.templateLink.uri]"
      },
      "_artifactsLocationSasToken": {
        "type": "securestring",
        "metadata": {
          "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."
        },
        "defaultValue": ""
      }
    },
    "variables": {
      "imageReference": {
        "Ubuntu 20.04-LTS": {
          "publisher": "Canonical",
          "offer": "0001-com-ubuntu-server-focal",
          "sku": "20_04-lts",
          "version": "latest"
        },
        "Ubuntu 18.04-LTS": {
          "publisher": "Canonical",
          "offer": "UbuntuServer",
          "sku": "18.04-LTS",
          "version": "latest"
        },
        "Debian 10": {
          "publisher": "Debian",
          "offer": "debian-10",
          "sku": "10",
          "version": "latest"
        },
        "Debian 9": {
          "publisher": "credativ",
          "offer": "Debian",
          "sku": "9",
          "version": "latest"
        },
        "CentOS 8.1": {
          "publisher": "OpenLogic",
          "offer": "CentOS",
          "sku": "8_1",
          "version": "latest"
        }
      },
      "linuxConfiguration": {
        "disablePasswordAuthentication": true,
        "ssh": {
          "publicKeys": [
            {
              "path": "/home/GEN-UNIQUE/.ssh/authorized_keys",
              "keyData": "GEN-SSH-PUB-KEY"
            }
          ]
        }
      },
      "networkSecurityGroupName": "linux-zulu-nsg",
      "nicName": "linux-zulu-nic",
      "publicIpAddressId": {
        "id": "[resourceGroup().name]/Microsoft.Network/publicIPAddresses/PublicIp"
      },
      "scriptFile": {
        "Ubuntu 20.04-LTS": {
          "scriptFileName": "apt-zulu-install.sh"
        },
        "Ubuntu 18.04-LTS": {
          "scriptFileName": "apt-zulu-install.sh"
        },
        "Debian 9": {
          "scriptFileName": "apt-zulu-install.sh"
        },
        "Debian 10": {
          "scriptFileName": "apt-zulu-install.sh"
        },
        "CentOS 8.1": {
          "scriptFileName": "yum-zulu-install.sh"
        }
      }
    },
    "resources": [
      {
        "condition": false,
        "type": "Microsoft.Storage/storageAccounts",
        "apiVersion": "2019-06-01",
        "name": "[concat('storage', uniqueString(resourceGroup().id))]",
        "location": "[resourceGroup().location]",
        "kind": "Storage",
        "sku": {
          "name": "Standard_LRS"
        }
      },
      {
        "condition": false,
        "type": "Microsoft.Network/virtualNetworks",
        "apiVersion": "2019-11-01",
        "name": "VirtualNetwork",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "linux-zulu-nsg"
        ],
        "properties": {
          "addressSpace": {
            "addressPrefixes": [
              "10.0.0.0/16"
            ]
          },
          "subnets": [
            {
              "name": "default",
              "properties": {
                "addressPrefix": "10.0.0.0/24",
                "networkSecurityGroup": {
                  "id": "Microsoft.Network/networkSecurityGroups/linux-zulu-nsg"
                }
              }
            }
          ]
        }
      },
      {
        "condition": false,
        "type": "Microsoft.Network/publicIPAddresses",
        "apiVersion": "2019-11-01",
        "name": "PublicIp",
        "location": "[resourceGroup().location]",
        "sku": {
          "name": "Basic"
        },
        "properties": {
          "publicIPAllocationMethod": "Dynamic",
          "dnsSettings": {
            "domainNameLabel": "[concat('linux-vm-', uniqueString(resourceGroup().id))]"
          }
        }
      },
      {
        "type": "Microsoft.Network/networkSecurityGroups",
        "apiVersion": "2019-11-01",
        "name": "linux-zulu-nsg",
        "location": "[resourceGroup().location]",
        "properties": {
          "securityRules": [
            {
              "name": "AllowSSH",
              "properties": {
                "priority": 1000,
                "access": "Allow",
                "direction": "Inbound",
                "protocol": "Tcp",
                "sourceAddressPrefix": "*",
                "sourcePortRange": "*",
                "destinationAddressPrefix": "*",
                "destinationPortRange": "22"
              }
            }
          ]
        }
      },
      {
        "type": "Microsoft.Network/networkInterfaces",
        "apiVersion": "2019-11-01",
        "name": "linux-zulu-nic",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "PublicIp",
          "VirtualNetwork",
          "linux-zulu-nsg"
        ],
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipconfig1",
              "properties": {
                "privateIPAllocationMethod": "Dynamic",
                "subnet": {
                  "id": "[resourceGroup().name]/Microsoft.Network/virtualNetworks/subnets//VirtualNetwork/default"
                },
                "publicIPAddress": "[if(not(equals(parameters('publicIpNewOrExisting'), 'none')), variables('publicIpAddressId') , json('null'))]"
              }
            }
          ],
          "networkSecurityGroup": {
            "id": "Microsoft.Network/networkSecurityGroups/linux-zulu-nsg"
          }
        }
      },
      {
        "type": "Microsoft.Compute/virtualMachines",
        "apiVersion": "2019-12-01",
        "name": "linux-zulu",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "[concat('storage', uniqueString(resourceGroup().id))]",
          "linux-zulu-nic"
        ],
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_D2s_v3"
          },
          "osProfile": {
            "computerName": "linux-zulu",
            "adminUsername": "GEN-UNIQUE",
            "adminPassword": "GEN-SSH-PUB-KEY",
            "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]"
          },
          "storageProfile": {
            "imageReference": "(imageReference)[parameters(OS)]",
            "osDisk": {
              "caching": "ReadWrite",
              "createOption": "FromImage"
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "Microsoft.Network/networkInterfaces/linux-zulu-nic"
              }
            ]
          },
          "diagnosticsProfile": {
            "bootDiagnostics": {
              "enabled": true,
              "storageUri": "[reference(resourceId(parameters('storageAccountResourceGroupName'), 'Microsoft.Storage/storageAccounts/', parameters('storageAccountName')), '2019-06-01').primaryEndpoints.blob]"
            }
          }
        },
        "resources": [
          {
            "type": "extensions",
            "apiVersion": "2019-12-01",
            "name": "installScript",
            "location": "[resourceGroup().location]",
            "dependsOn": [
              "linux-zulu"
            ],
            "properties": {
              "publisher": "Microsoft.Azure.Extensions",
              "type": "CustomScript",
              "typeHandlerVersion": "2.0",
              "autoUpgradeMinorVersion": true,
              "settings": {
                "fileUris": [
                  "[uri(parameters('_artifactsLocation'), concat('scripts/', variables('scriptFile')[parameters('OS')].scriptFileName, parameters('_artifactsLocationSasToken')))]"
                ],
                "commandToExecute": "[concat('bash ', variables('scriptFile')[parameters('OS')].scriptFileName, ' ', parameters('javaPackageName'))]"
              }
            }
          }
        ]
      }
    ],
    "outputs": {
      "ssh-command": {
        "type": "string",
        "value": "[if(equals(parameters('publicIpNewOrExisting'), 'none'), 'no public ip', concat('ssh ', parameters('adminUsername'), '@', reference(resourceId(parameters('publicIpResourceGroupName'), 'Microsoft.Network/publicIPAddresses', parameters('publicIpName')), '2019-11-01').dnsSettings.fqdn))]"
      }
    },
    "\uff04schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#"
  }
}