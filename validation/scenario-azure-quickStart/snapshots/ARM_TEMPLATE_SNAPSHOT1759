{
  "structure": "filesystem",
  "error": null,
  "reference": "master",
  "contentType": "json",
  "source": "gitConnectorAzureQuickStart",
  "paths": [
    "/quickstarts/microsoft.web/function-http-trigger/azuredeploy.json",
    "/quickstarts/microsoft.web/function-http-trigger/azuredeploy.parameters.json"
  ],
  "timestamp": 1642962910955,
  "queryuser": null,
  "checksum": "99914b932bd37a50b983c5e7c90ae93b",
  "node": {
    "masterSnapshotId": "ARM_TEMPLATE_SNAPSHOT",
    "type": "arm",
    "collection": "armtemplate",
    "paths": [
      "/quickstarts/microsoft.web/function-http-trigger/azuredeploy.json",
      "/quickstarts/microsoft.web/function-http-trigger/azuredeploy.parameters.json"
    ],
    "snapshotId": "ARM_TEMPLATE_SNAPSHOT1759",
    "status": "active",
    "validate": true,
    "resourceTypes": [
      "microsoft.web/sites",
      "microsoft.keyvault/vaults/secrets",
      "microsoft.web/sites/functions",
      "microsoft.storage/storageaccounts",
      "microsoft.keyvault/vaults",
      "microsoft.web/serverfarms",
      "microsoft.insights/components"
    ]
  },
  "snapshotId": "ARM_TEMPLATE_SNAPSHOT1759",
  "collection": "armtemplate",
  "json": {
    "contentVersion": "1.0.0.0",
    "metadata": {
      "_generator": {
        "name": "bicep",
        "version": "0.4.613.9944",
        "templateHash": "875047576570933390"
      }
    },
    "parameters": {
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Specifies region of all resources."
        }
      },
      "appNameSuffix": {
        "type": "string",
        "defaultValue": "[uniqueString(resourceGroup().id)]",
        "metadata": {
          "description": "Suffix for function app, storage account, and key vault names."
        }
      },
      "keyVaultSku": {
        "type": "string",
        "defaultValue": "Standard",
        "metadata": {
          "description": "Key Vault SKU name."
        }
      },
      "storageSku": {
        "type": "string",
        "defaultValue": "Standard_LRS",
        "metadata": {
          "description": "Storage account SKU name."
        }
      }
    },
    "functions": [],
    "variables": {
      "functionAppName": "[format('fn-{0}', parameters('appNameSuffix'))]",
      "appServicePlanName": "FunctionPlan",
      "appInsightsName": "AppInsights",
      "storageAccountName": "[format('fnstor{0}', replace(parameters('appNameSuffix'), '-', ''))]",
      "functionNameComputed": "MyHttpTriggeredFunction",
      "functionRuntime": "dotnet",
      "keyVaultName": "[format('kv{0}', replace(parameters('appNameSuffix'), '-', ''))]",
      "functionAppKeySecretName": "FunctionAppHostKey"
    },
    "resources": [
      {
        "type": "Microsoft.Storage/storageAccounts",
        "apiVersion": "2021-04-01",
        "name": "[format('fnstor{0}', replace(parameters('appNameSuffix'), '-', ''))]",
        "location": "[resourceGroup().location]",
        "sku": {
          "name": "Standard_LRS"
        },
        "kind": "StorageV2",
        "properties": {
          "supportsHttpsTrafficOnly": true,
          "encryption": {
            "services": {
              "file": {
                "keyType": "Account",
                "enabled": true
              },
              "blob": {
                "keyType": "Account",
                "enabled": true
              }
            },
            "keySource": "Microsoft.Storage"
          },
          "accessTier": "Hot"
        }
      },
      {
        "type": "Microsoft.Insights/components",
        "apiVersion": "2020-02-02",
        "name": "AppInsights",
        "location": "[resourceGroup().location]",
        "kind": "web",
        "properties": {
          "Application_Type": "web",
          "publicNetworkAccessForIngestion": "Enabled",
          "publicNetworkAccessForQuery": "Enabled"
        }
      },
      {
        "type": "Microsoft.Web/serverfarms",
        "apiVersion": "2020-12-01",
        "name": "FunctionPlan",
        "location": "[resourceGroup().location]",
        "kind": "functionapp",
        "sku": {
          "name": "Y1"
        },
        "properties": {}
      },
      {
        "type": "Microsoft.Web/sites",
        "apiVersion": "2020-12-01",
        "name": "[format('fn-{0}', parameters('appNameSuffix'))]",
        "location": "[resourceGroup().location]",
        "kind": "functionapp",
        "properties": {
          "serverFarmId": "Microsoft.Web/serverfarms/FunctionPlan",
          "siteConfig": {
            "appSettings": [
              {
                "name": "AzureWebJobsStorage",
                "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', variables('storageAccountName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2021-04-01').keys[0].value)]"
              },
              {
                "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', variables('storageAccountName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2021-04-01').keys[0].value)]"
              },
              {
                "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                "value": "[reference(resourceId('Microsoft.Insights/components', variables('appInsightsName'))).InstrumentationKey]"
              },
              {
                "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
                "value": "[format('InstrumentationKey={0}', reference(resourceId('Microsoft.Insights/components', variables('appInsightsName'))).InstrumentationKey)]"
              },
              {
                "name": "FUNCTIONS_WORKER_RUNTIME",
                "value": "dotnet"
              },
              {
                "name": "FUNCTIONS_EXTENSION_VERSION",
                "value": "~3"
              }
            ]
          },
          "httpsOnly": true
        },
        "dependsOn": [
          "Microsoft.Insights/components/AppInsights",
          "Microsoft.Web/serverfarms/FunctionPlan",
          "Microsoft.Storage/storageAccounts/[format('fnstor{0}', replace(parameters('appNameSuffix'), '-', ''))]"
        ]
      },
      {
        "type": "Microsoft.Web/sites/functions",
        "apiVersion": "2020-12-01",
        "name": "[format('{0}/{1}', variables('functionAppName'), variables('functionNameComputed'))]",
        "properties": {
          "config": {
            "disabled": false,
            "bindings": [
              {
                "name": "req",
                "type": "httpTrigger",
                "direction": "in",
                "authLevel": "function",
                "methods": [
                  "get"
                ]
              },
              {
                "name": "$return",
                "type": "http",
                "direction": "out"
              }
            ]
          },
          "files": {
            "run.csx": "#r \"Newtonsoft.Json\"\r\n\r\nusing System.Net;\r\nusing Microsoft.AspNetCore.Mvc;\r\nusing Microsoft.Extensions.Primitives;\r\nusing Newtonsoft.Json;\r\n\r\npublic static async Task<IActionResult> Run(HttpRequest req, ILogger log)\r\n{\r\n      log.LogInformation(\"C# HTTP trigger function processed a request.\");\r\n\r\n    string name = req.Query[\"name\"];\r\n\r\n    string requestBody = await new StreamReader(req.Body).ReadToEndAsync();\r\n    dynamic data = JsonConvert.DeserializeObject(requestBody);\r\n    name = name ?? data?.name;\r\n\r\n    string responseMessage = string.IsNullOrEmpty(name)\r\n        ? \"This HTTP triggered function executed successfully. Pass a name in the query string or in the request body for a personalized response.\"\r\n                : $\"Hello, {name}. This HTTP triggered function executed successfully.\";\r\n\r\n            return new OkObjectResult(responseMessage);\r\n}"
          }
        },
        "dependsOn": [
          "Microsoft.Web/sites/[format('fn-{0}', parameters('appNameSuffix'))]"
        ]
      },
      {
        "type": "Microsoft.KeyVault/vaults",
        "apiVersion": "2019-09-01",
        "name": "[format('kv{0}', replace(parameters('appNameSuffix'), '-', ''))]",
        "location": "[resourceGroup().location]",
        "properties": {
          "tenantId": "[subscription().tenantId]",
          "sku": {
            "family": "A",
            "name": "Standard"
          },
          "accessPolicies": []
        }
      },
      {
        "type": "Microsoft.KeyVault/vaults/secrets",
        "apiVersion": "2019-09-01",
        "name": "[format('{0}/{1}', variables('keyVaultName'), variables('functionAppKeySecretName'))]",
        "properties": {
          "value": "[listKeys(format('{0}/host/default', resourceId('Microsoft.Web/sites', variables('functionAppName'))), '2020-12-01').functionKeys.default]"
        },
        "dependsOn": [
          "Microsoft.Web/sites/[format('fn-{0}', parameters('appNameSuffix'))]",
          "Microsoft.KeyVault/vaults/[format('kv{0}', replace(parameters('appNameSuffix'), '-', ''))]"
        ]
      }
    ],
    "outputs": {
      "functionAppHostName": {
        "type": "string",
        "value": "[reference(resourceId('Microsoft.Web/sites', variables('functionAppName'))).defaultHostName]"
      },
      "functionName": {
        "type": "string",
        "value": "[variables('functionNameComputed')]"
      }
    },
    "\uff04schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#"
  }
}