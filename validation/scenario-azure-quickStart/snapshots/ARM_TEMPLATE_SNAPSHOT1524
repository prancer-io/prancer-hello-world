{
  "structure": "filesystem",
  "error": null,
  "reference": "master",
  "contentType": "json",
  "source": "gitConnectorAzureQuickStart",
  "paths": [
    "/quickstarts/microsoft.network/front-door-api-management/azuredeploy.json",
    "/quickstarts/microsoft.network/front-door-api-management/azuredeploy.parameters.json"
  ],
  "timestamp": 1642962908733,
  "queryuser": null,
  "checksum": "99914b932bd37a50b983c5e7c90ae93b",
  "node": {
    "masterSnapshotId": "ARM_TEMPLATE_SNAPSHOT",
    "type": "arm",
    "collection": "armtemplate",
    "paths": [
      "/quickstarts/microsoft.network/front-door-api-management/azuredeploy.json",
      "/quickstarts/microsoft.network/front-door-api-management/azuredeploy.parameters.json"
    ],
    "snapshotId": "ARM_TEMPLATE_SNAPSHOT1524",
    "status": "active",
    "validate": true,
    "resourceTypes": [
      "microsoft.network/virtualnetworks",
      "microsoft.apimanagement/service/loggers",
      "microsoft.apimanagement/service",
      "microsoft.network/frontdoorwebapplicationfirewallpolicies",
      "microsoft.network/frontdoors",
      "microsoft.apimanagement/service/providers/diagnosticsettings",
      "microsoft.network/networksecuritygroups",
      "microsoft.operationalinsights/workspaces",
      "microsoft.network/frontdoors/providers/diagnosticsettings",
      "microsoft.insights/components"
    ]
  },
  "snapshotId": "ARM_TEMPLATE_SNAPSHOT1524",
  "collection": "armtemplate",
  "json": {
    "contentVersion": "1.0.0.0",
    "parameters": {
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Location for the Azure resources."
        }
      },
      "virtualNetwork": {
        "type": "object",
        "defaultValue": {
          "name": "FrontDoorApimSampleVnet",
          "addressPrefixes": [
            "10.0.0.0/16"
          ],
          "subnets": [
            {
              "name": "ApiManagementSubnet",
              "addressPrefix": "10.0.0.0/24",
              "nsg": "FrontDoorApimSampleNsg"
            }
          ]
        },
        "metadata": {
          "description": "Specifies the Virtual Network configuration."
        }
      },
      "workspaceName": {
        "type": "string",
        "metadata": {
          "description": "Name of the Log Analytics workspace."
        },
        "value": "GEN-UNIQUE-20"
      },
      "workspaceSku": {
        "type": "string",
        "allowedValues": [
          "PerGB2018",
          "Free",
          "Standalone",
          "PerNode",
          "Standard",
          "Premium"
        ],
        "defaultValue": "Standalone",
        "metadata": {
          "description": "Pricing tier: PerGB2018 or legacy tiers (Free, Standalone, PerNode, Standard or Premium) which are not available to all customers."
        }
      },
      "appInsightsName": {
        "type": "string",
        "metadata": {
          "description": "The name of your Application Insights resource used by API Management."
        },
        "value": "GEN-UNIQUE-20"
      },
      "apimServiceName": {
        "type": "string",
        "metadata": {
          "description": "The name of your API Management service."
        },
        "value": "GEN-UNIQUE-20"
      },
      "apimPublisherEmail": {
        "type": "string",
        "defaultValue": "admin@contoso.com",
        "metadata": {
          "description": "The email address of the owner of the service"
        },
        "value": "email@example.com"
      },
      "apimPublisherName": {
        "type": "string",
        "defaultValue": "Contoso",
        "metadata": {
          "description": "The name of the publisher."
        },
        "value": "templateTest"
      },
      "apimSku": {
        "type": "string",
        "allowedValues": [
          "Developer",
          "Premium"
        ],
        "defaultValue": "Developer",
        "metadata": {
          "description": "The pricing tier of this API Management service. Only Developer and Premium are supported when deploying into a shared VNET."
        }
      },
      "apimCapacity": {
        "type": "int",
        "defaultValue": 1,
        "metadata": {
          "description": "Number of deployed units of the SKU."
        }
      },
      "frontDoorName": {
        "type": "string",
        "minLength": 5,
        "maxLength": 64,
        "metadata": {
          "description": "Name of the Azure Front Door which is globally unique. Min length: 5. Max length: 64"
        },
        "value": "GEN-UNIQUE-20"
      },
      "frontDoorEnforceCertificateNameCheck": {
        "type": "string",
        "defaultValue": "Disabled",
        "allowedValues": [
          "Enabled",
          "Disabled"
        ],
        "metadata": {
          "description": "Whether to enforce certificate name check on HTTPS requests to all backend pools. No effect on non-HTTPS requests. - Enabled or Disabled"
        }
      },
      "frontDoorFrontendEndpoint": {
        "type": "object",
        "defaultValue": {
          "name": "MainFrontendEndpoint",
          "sessionAffinityEnabledState": "Disabled",
          "sessionAffinityTtlSeconds": 0
        },
        "metadata": {
          "description": "This parameter contains the name and properties of the frontend endpoint."
        }
      },
      "frontDoorBackendPool": {
        "type": "object",
        "defaultValue": {
          "name": "ApimBackendPool",
          "loadBalancerName": "ApimLoadBalancer"
        },
        "metadata": {
          "description": "This parameter contains the name and properties of the Application Gateway Backend Pool"
        }
      },
      "frontDoorRoutingRule": {
        "type": "object",
        "defaultValue": {
          "name": "ApimRoutingRule",
          "acceptedProtocols": [
            "Http",
            "Https"
          ],
          "patternsToMatch": [
            "/*"
          ],
          "customForwardingPath": "/",
          "forwardingProtocol": "MatchRequest",
          "cacheConfiguration": {
            "queryParameterStripDirective": "StripNone",
            "dynamicCompression": "Enabled"
          }
        },
        "metadata": {
          "description": "This parameter contains the name and properties of the routing rule."
        }
      },
      "frontDoorHealthProbeSettings": {
        "type": "object",
        "defaultValue": {
          "name": "ApimHealthProbeSettings",
          "intervalInSeconds": 30,
          "path": "/status-0123456789abcdef",
          "protocol": "Https"
        },
        "metadata": {
          "description": "This parameter contains the name and properties of the health probe settings."
        }
      },
      "deployWaf": {
        "type": "bool",
        "defaultValue": true,
        "metadata": {
          "description": "Specifies whether to deploy a global WAF policy in Front Door."
        }
      },
      "wafPolicyName": {
        "type": "string",
        "defaultValue": "FrontDoorApimSampleWaf",
        "metadata": {
          "description": "The name of the WAF policy"
        }
      },
      "wafMode": {
        "type": "string",
        "allowedValues": [
          "Detection",
          "Prevention"
        ],
        "defaultValue": "Prevention",
        "metadata": {
          "description": "Describes if it is in detection mode or prevention mode at policy level."
        }
      },
      "allowTrafficOnlyFromFrontDoor": {
        "type": "bool",
        "defaultValue": false,
        "metadata": {
          "description": "Specifies whether to allow traffic to API Management public endpoints only from Front Door."
        },
        "value": false
      }
    },
    "variables": {
      "nsgId": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('virtualNetwork').subnets[0].nsg)]",
      "vnetId": "Microsoft.Network/virtualNetworks/FrontDoorApimSampleVnet",
      "apimId": "Microsoft.ApiManagement/service/GEN-UNIQUE-20",
      "appInsightsId": "Microsoft.Insights/components/GEN-UNIQUE-20",
      "apimSubnetId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetwork').name, parameters('virtualNetwork').subnets[0].name)]",
      "workspaceId": "Microsoft.OperationalInsights/workspaces//GEN-UNIQUE-20",
      "loggerId": "Microsoft.ApiManagement/service/loggers/GEN-UNIQUE-20/GEN-UNIQUE-20",
      "frontDoorId": "Microsoft.Network/frontdoors/GEN-UNIQUE-20",
      "frontDoorBackendPoolId": "Microsoft.Network/frontdoors/backendPools/GEN-UNIQUE-20/ApimBackendPool",
      "frontDoorHealthProbeSettingsId": "Microsoft.Network/frontdoors/healthProbeSettings/GEN-UNIQUE-20/ApimHealthProbeSettings",
      "frontDoorLoadBalancerId": "Microsoft.Network/frontdoors/loadBalancingSettings/GEN-UNIQUE-20/ApimLoadBalancer",
      "frontDoorFrontedEndpointId": "Microsoft.Network/frontdoors/frontendEndpoints/GEN-UNIQUE-20/MainFrontendEndpoint",
      "wafPolicyId": "Microsoft.Network/FrontDoorWebApplicationFirewallPolicies/FrontDoorApimSampleWaf",
      "mockApiId": "Microsoft.ApiManagement/service/apis/GEN-UNIQUE-20/mockApi",
      "postmanEchoApiId": "Microsoft.ApiManagement/service/apis/GEN-UNIQUE-20/postmanEchoApi",
      "customProductId": "Microsoft.ApiManagement/service/products/GEN-UNIQUE-20/custom",
      "testMethodId": "Microsoft.ApiManagement/service/apis/operations/GEN-UNIQUE-20/mockApi/test",
      "frontDoorSuffix": "[if(equals(toLower(environment().name), 'azureusgovernment'), 'azurefd.us', environment().suffixes.azureFrontDoorEndpointSuffix)]",
      "frontDoorHostName": "[concat(toLower(parameters('frontDoorName')), '.', variables('frontDoorSuffix'))]"
    },
    "resources": [
      {
        "apiVersion": "2020-08-01",
        "type": "Microsoft.OperationalInsights/workspaces",
        "name": "GEN-UNIQUE-20",
        "location": "[resourceGroup().location]",
        "properties": {
          "sku": {
            "name": "Standalone"
          }
        },
        "resources": []
      },
      {
        "type": "Microsoft.Network/networkSecurityGroups",
        "name": "FrontDoorApimSampleNsg",
        "apiVersion": "2019-09-01",
        "location": "[resourceGroup().location]",
        "properties": {
          "securityRules": [
            {
              "name": "ClientCommunicationToAPIManagementInbound",
              "properties": {
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "80",
                "sourceAddressPrefix": "[if(parameters('allowTrafficOnlyFromFrontDoor'), 'AzureFrontDoor.Backend', 'Internet')]",
                "destinationAddressPrefix": "VirtualNetwork",
                "access": "Allow",
                "priority": 100,
                "direction": "Inbound"
              }
            },
            {
              "name": "SecureClientCommunicationToAPIManagementInbound",
              "properties": {
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "443",
                "sourceAddressPrefix": "[if(parameters('allowTrafficOnlyFromFrontDoor'), 'AzureFrontDoor.Backend', 'Internet')]",
                "destinationAddressPrefix": "VirtualNetwork",
                "access": "Allow",
                "priority": 110,
                "direction": "Inbound"
              }
            },
            {
              "name": "ManagementEndpointForAzurePortalAndPowershellInbound",
              "properties": {
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "3443",
                "sourceAddressPrefix": "ApiManagement",
                "destinationAddressPrefix": "VirtualNetwork",
                "access": "Allow",
                "priority": 120,
                "direction": "Inbound"
              }
            },
            {
              "name": "DependencyOnRedisCacheInbound",
              "properties": {
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "6381-6383",
                "sourceAddressPrefix": "VirtualNetwork",
                "destinationAddressPrefix": "VirtualNetwork",
                "access": "Allow",
                "priority": 130,
                "direction": "Inbound"
              }
            },
            {
              "name": "AzureInfrastructureLoadBalancer",
              "properties": {
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "AzureLoadBalancer",
                "destinationAddressPrefix": "VirtualNetwork",
                "access": "Allow",
                "priority": 180,
                "direction": "Inbound"
              }
            },
            {
              "name": "DependencyOnAzureSQLOutbound",
              "properties": {
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "1433",
                "sourceAddressPrefix": "VirtualNetwork",
                "destinationAddressPrefix": "Sql",
                "access": "Allow",
                "priority": 140,
                "direction": "Outbound"
              }
            },
            {
              "name": "DependencyForLogToEventHubPolicyOutbound",
              "properties": {
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "5671",
                "sourceAddressPrefix": "VirtualNetwork",
                "destinationAddressPrefix": "EventHub",
                "access": "Allow",
                "priority": 150,
                "direction": "Outbound"
              }
            },
            {
              "name": "DependencyOnRedisCacheOutbound",
              "properties": {
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "6381-6383",
                "sourceAddressPrefix": "VirtualNetwork",
                "destinationAddressPrefix": "VirtualNetwork",
                "access": "Allow",
                "priority": 160,
                "direction": "Outbound"
              }
            },
            {
              "name": "DependencyOnAzureFileShareForGitOutbound",
              "properties": {
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "445",
                "sourceAddressPrefix": "VirtualNetwork",
                "destinationAddressPrefix": "Storage",
                "access": "Allow",
                "priority": 170,
                "direction": "Outbound"
              }
            },
            {
              "name": "PublishDiagnosticLogsAndMetricsOutbound",
              "properties": {
                "description": "APIM Logs and Metrics for consumption by admins and your IT team are all part of the management plane",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "sourceAddressPrefix": "VirtualNetwork",
                "destinationAddressPrefix": "AzureMonitor",
                "access": "Allow",
                "priority": 185,
                "direction": "Outbound",
                "destinationPortRanges": [
                  "443",
                  "12000",
                  "1886"
                ]
              }
            },
            {
              "name": "ConnectToSmtpRelayForSendingEmailsOutbound",
              "properties": {
                "description": "APIM features the ability to generate email traffic as part of the data plane and the management plane",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "sourceAddressPrefix": "VirtualNetwork",
                "destinationAddressPrefix": "Internet",
                "access": "Allow",
                "priority": 190,
                "direction": "Outbound",
                "destinationPortRanges": [
                  "25",
                  "587",
                  "25028"
                ]
              }
            },
            {
              "name": "AuthenticateToAzureActiveDirectoryOutbound",
              "properties": {
                "description": "Connect to Azure Active Directory for Developer Portal Authentication or for Oauth2 flow during any Proxy Authentication",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "sourceAddressPrefix": "VirtualNetwork",
                "destinationAddressPrefix": "AzureActiveDirectory",
                "access": "Allow",
                "priority": 200,
                "direction": "Outbound",
                "destinationPortRanges": [
                  "80",
                  "443"
                ]
              }
            },
            {
              "name": "DependencyOnAzureStorageOutbound",
              "properties": {
                "description": "APIM service dependency on Azure Blob and Azure Table Storage",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "443",
                "sourceAddressPrefix": "VirtualNetwork",
                "destinationAddressPrefix": "Storage",
                "access": "Allow",
                "priority": 100,
                "direction": "Outbound"
              }
            },
            {
              "name": "PublishMonitoringLogsOutbound",
              "properties": {
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "443",
                "sourceAddressPrefix": "VirtualNetwork",
                "destinationAddressPrefix": "AzureCloud",
                "access": "Allow",
                "priority": 300,
                "direction": "Outbound"
              }
            }
          ]
        }
      },
      {
        "apiVersion": "2020-07-01",
        "type": "Microsoft.Network/virtualNetworks",
        "name": "FrontDoorApimSampleVnet",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('virtualNetwork').subnets[0].nsg)]"
        ],
        "properties": {
          "addressSpace": {
            "addressPrefixes": [
              "10.0.0.0/16"
            ]
          },
          "copy": [
            {
              "name": "subnets",
              "count": 36,
              "input": {
                "name": "virtualNetwork).subnets[copyIndex(subnets",
                "properties": {
                  "addressPrefix": "virtualNetwork).subnets[copyIndex(subnets",
                  "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('virtualNetwork').subnets[copyIndex('subnets')].nsg)]"
                  }
                }
              }
            }
          ]
        }
      },
      {
        "name": "GEN-UNIQUE-20",
        "type": "Microsoft.Insights/components",
        "apiVersion": "2018-05-01-preview",
        "location": "[resourceGroup().location]",
        "kind": "web",
        "tags": {
          "name": "GEN-UNIQUE-20",
          "resource": "GEN-UNIQUE-20",
          "service": "Application Insights"
        },
        "properties": {
          "Application_Type": "web",
          "Request_Source": "rest"
        }
      },
      {
        "type": "Microsoft.ApiManagement/service/loggers",
        "name": "GEN-UNIQUE-20/GEN-UNIQUE-20",
        "apiVersion": "2019-12-01",
        "dependsOn": [
          "Microsoft.ApiManagement/service/GEN-UNIQUE-20"
        ],
        "properties": {
          "loggerType": "applicationInsights",
          "description": "Logger resources to APIM",
          "credentials": {
            "instrumentationKey": "[reference(variables('appInsightsId'), '2015-05-01').InstrumentationKey]"
          }
        }
      },
      {
        "name": "GEN-UNIQUE-20",
        "type": "Microsoft.ApiManagement/service",
        "apiVersion": "2019-12-01",
        "location": "[resourceGroup().location]",
        "tags": {
          "name": "GEN-UNIQUE-20",
          "service": "APIM"
        },
        "sku": {
          "name": "Developer",
          "capacity": 1
        },
        "identity": {
          "type": "SystemAssigned"
        },
        "dependsOn": [
          "Microsoft.Network/virtualNetworks/FrontDoorApimSampleVnet"
        ],
        "properties": {
          "publisherEmail": "email@example.com",
          "publisherName": "templateTest",
          "virtualNetworkType": "External",
          "virtualNetworkConfiguration": {
            "subnetResourceId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetwork').name, parameters('virtualNetwork').subnets[0].name)]"
          }
        },
        "resources": [
          {
            "apiVersion": "2019-12-01",
            "type": "products",
            "name": "custom",
            "dependsOn": [
              "Microsoft.ApiManagement/service/GEN-UNIQUE-20",
              "Microsoft.ApiManagement/service/apis/GEN-UNIQUE-20/mockApi",
              "Microsoft.ApiManagement/service/apis/GEN-UNIQUE-20/postmanEchoApi"
            ],
            "properties": {
              "displayName": "Custom",
              "description": "Subscribers have completely unlimited access to the API. Administrator approval is required.",
              "subscriptionRequired": true,
              "approvalRequired": false,
              "subscriptionsLimit": 1,
              "state": "published"
            },
            "resources": [
              {
                "apiVersion": "2019-12-01",
                "type": "apis",
                "name": "mockApi",
                "dependsOn": [
                  "Microsoft.ApiManagement/service/GEN-UNIQUE-20",
                  "Microsoft.ApiManagement/service/apis/GEN-UNIQUE-20/mockApi",
                  "Microsoft.ApiManagement/service/products/GEN-UNIQUE-20/custom"
                ],
                "properties": {
                  "displayName": "Mock API",
                  "apiRevision": "1",
                  "description": "This is a Mock API.",
                  "subscriptionRequired": true,
                  "path": "mock",
                  "protocols": [
                    "https",
                    "http"
                  ],
                  "subscriptionKeyParameterNames": {
                    "header": "Ocp-Apim-Subscription-Key",
                    "query": "subscription-key"
                  },
                  "isCurrent": true
                }
              },
              {
                "apiVersion": "2019-12-01",
                "type": "apis",
                "name": "postmanEchoApi",
                "dependsOn": [
                  "Microsoft.ApiManagement/service/GEN-UNIQUE-20",
                  "Microsoft.ApiManagement/service/apis/GEN-UNIQUE-20/postmanEchoApi",
                  "Microsoft.ApiManagement/service/products/GEN-UNIQUE-20/custom"
                ],
                "properties": {
                  "displayName": "Postman Echo API",
                  "apiRevision": "1",
                  "description": "This is the Postman Echo API.",
                  "subscriptionRequired": true,
                  "serviceUrl": "https://postman-echo.com",
                  "path": "postman-echo",
                  "protocols": [
                    "https",
                    "http"
                  ],
                  "subscriptionKeyParameterNames": {
                    "header": "Ocp-Apim-Subscription-Key",
                    "query": "subscription-key"
                  },
                  "isCurrent": true
                }
              }
            ]
          },
          {
            "type": "apis",
            "name": "mockApi",
            "apiVersion": "2019-12-01",
            "dependsOn": [
              "Microsoft.ApiManagement/service/GEN-UNIQUE-20"
            ],
            "properties": {
              "displayName": "Mock API",
              "apiRevision": "1",
              "description": "This is a Mock API.",
              "subscriptionRequired": true,
              "path": "mock",
              "protocols": [
                "https",
                "http"
              ],
              "subscriptionKeyParameterNames": {
                "header": "Ocp-Apim-Subscription-Key",
                "query": "subscription-key"
              },
              "isCurrent": true
            },
            "resources": [
              {
                "type": "operations",
                "name": "test",
                "apiVersion": "2019-12-01",
                "dependsOn": [
                  "Microsoft.ApiManagement/service/GEN-UNIQUE-20",
                  "Microsoft.ApiManagement/service/apis/GEN-UNIQUE-20/mockApi"
                ],
                "properties": {
                  "displayName": "Test",
                  "method": "GET",
                  "urlTemplate": "/test",
                  "description": "This method always return 200.",
                  "responses": [
                    {
                      "statusCode": 200,
                      "description": "The GET mock methods always returns a given response",
                      "representations": [
                        {
                          "contentType": "application/json",
                          "sample": "{\"company\": \"Contoso\"\"api\": \"Mock API\"\"method\": \"GET\"\"operation\": \"test\"}"
                        }
                      ]
                    }
                  ]
                },
                "resources": [
                  {
                    "name": "policy",
                    "type": "policies",
                    "apiVersion": "2019-12-01",
                    "dependsOn": [
                      "Microsoft.ApiManagement/service/GEN-UNIQUE-20",
                      "Microsoft.ApiManagement/service/apis/GEN-UNIQUE-20/mockApi",
                      "Microsoft.ApiManagement/service/apis/operations/GEN-UNIQUE-20/mockApi/test"
                    ],
                    "properties": {
                      "value": "<policies>\r\n    <inbound>\r\n        <base />\r\n        <mock-response status-code=\"200\" content-type=\"application/json\" />\r\n    </inbound>\r\n    <backend>\r\n        <base />\r\n    </backend>\r\n    <outbound>\r\n        <base />\r\n    </outbound>\r\n    <on-error>\r\n        <base />\r\n    </on-error>\r\n</policies>",
                      "format": "xml"
                    }
                  }
                ]
              },
              {
                "apiVersion": "2019-12-01",
                "type": "policies",
                "name": "policy",
                "dependsOn": [
                  "Microsoft.ApiManagement/service/GEN-UNIQUE-20",
                  "Microsoft.ApiManagement/service/apis/GEN-UNIQUE-20/mockApi"
                ],
                "properties": {
                  "format": "xml",
                  "value": "<policies>\r\n\t<inbound>\r\n\t\t<base />\r\n\t\t<cors>\r\n\t\t\t<allowed-origins>\r\n\t\t\t\t<origin>*</origin>\r\n\t\t\t</allowed-origins>\r\n\t\t\t<allowed-methods>\r\n\t\t\t\t<method>GET</method>\r\n\t\t\t\t<method>POST</method>\r\n\t\t\t\t<method>PUT</method>\r\n\t\t\t\t<method>DELETE</method>\r\n\t\t\t\t<method>HEAD</method>\r\n\t\t\t\t<method>OPTIONS</method>\r\n\t\t\t\t<method>PATCH</method>\r\n\t\t\t\t<method>TRACE</method>\r\n\t\t\t</allowed-methods>\r\n\t\t\t<allowed-headers>\r\n\t\t\t\t<header>*</header>\r\n\t\t\t</allowed-headers>\r\n\t\t\t<expose-headers>\r\n\t\t\t\t<header>*</header>\r\n\t\t\t</expose-headers>\r\n\t\t</cors>\r\n\t</inbound>\r\n\t<backend>\r\n\t\t<base />\r\n\t</backend>\r\n\t<outbound>\r\n\t\t<base />\r\n\t</outbound>\r\n\t<on-error>\r\n\t\t<base />\r\n\t</on-error>\r\n</policies>"
                }
              },
              {
                "type": "diagnostics",
                "name": "applicationinsights",
                "apiVersion": "2019-12-01",
                "dependsOn": [
                  "Microsoft.ApiManagement/service/GEN-UNIQUE-20",
                  "Microsoft.ApiManagement/service/loggers/GEN-UNIQUE-20/GEN-UNIQUE-20",
                  "Microsoft.ApiManagement/service/apis/GEN-UNIQUE-20/mockApi"
                ],
                "properties": {
                  "alwaysLog": "allErrors",
                  "loggerId": "Microsoft.ApiManagement/service/loggers/GEN-UNIQUE-20/GEN-UNIQUE-20",
                  "sampling": {
                    "samplingType": "fixed",
                    "percentage": 100
                  },
                  "enableHttpCorrelationHeaders": true
                }
              }
            ]
          },
          {
            "type": "apis",
            "name": "postmanEchoApi",
            "apiVersion": "2019-12-01",
            "dependsOn": [
              "Microsoft.ApiManagement/service/GEN-UNIQUE-20"
            ],
            "properties": {
              "displayName": "Postman Echo API",
              "apiRevision": "1",
              "description": "This is the Postman Echo API.",
              "subscriptionRequired": true,
              "serviceUrl": "https://postman-echo.com",
              "path": "postman-echo",
              "protocols": [
                "https",
                "http"
              ],
              "subscriptionKeyParameterNames": {
                "header": "Ocp-Apim-Subscription-Key",
                "query": "subscription-key"
              },
              "isCurrent": true
            },
            "resources": [
              {
                "type": "operations",
                "name": "get",
                "apiVersion": "2019-12-01",
                "dependsOn": [
                  "Microsoft.ApiManagement/service/GEN-UNIQUE-20",
                  "Microsoft.ApiManagement/service/apis/GEN-UNIQUE-20/postmanEchoApi"
                ],
                "properties": {
                  "displayName": "GET Request",
                  "method": "GET",
                  "urlTemplate": "/get",
                  "description": "The HTTP GET request method is meant to retrieve data from a server. The data is identified by a unique URI (Uniform Resource Identifier). "
                }
              },
              {
                "apiVersion": "2019-12-01",
                "type": "policies",
                "name": "policy",
                "dependsOn": [
                  "Microsoft.ApiManagement/service/GEN-UNIQUE-20",
                  "Microsoft.ApiManagement/service/apis/GEN-UNIQUE-20/postmanEchoApi"
                ],
                "properties": {
                  "format": "xml",
                  "value": "<policies>\r\n\t<inbound>\r\n\t\t<base />\r\n\t\t<cors>\r\n\t\t\t<allowed-origins>\r\n\t\t\t\t<origin>*</origin>\r\n\t\t\t</allowed-origins>\r\n\t\t\t<allowed-methods>\r\n\t\t\t\t<method>GET</method>\r\n\t\t\t\t<method>POST</method>\r\n\t\t\t\t<method>PUT</method>\r\n\t\t\t\t<method>DELETE</method>\r\n\t\t\t\t<method>HEAD</method>\r\n\t\t\t\t<method>OPTIONS</method>\r\n\t\t\t\t<method>PATCH</method>\r\n\t\t\t\t<method>TRACE</method>\r\n\t\t\t</allowed-methods>\r\n\t\t\t<allowed-headers>\r\n\t\t\t\t<header>*</header>\r\n\t\t\t</allowed-headers>\r\n\t\t\t<expose-headers>\r\n\t\t\t\t<header>*</header>\r\n\t\t\t</expose-headers>\r\n\t\t</cors>\r\n\t</inbound>\r\n\t<backend>\r\n\t\t<base />\r\n\t</backend>\r\n\t<outbound>\r\n\t\t<base />\r\n\t</outbound>\r\n\t<on-error>\r\n\t\t<base />\r\n\t</on-error>\r\n</policies>"
                }
              },
              {
                "type": "diagnostics",
                "name": "applicationinsights",
                "apiVersion": "2019-12-01",
                "dependsOn": [
                  "Microsoft.ApiManagement/service/GEN-UNIQUE-20",
                  "Microsoft.ApiManagement/service/loggers/GEN-UNIQUE-20/GEN-UNIQUE-20",
                  "Microsoft.ApiManagement/service/apis/GEN-UNIQUE-20/postmanEchoApi"
                ],
                "properties": {
                  "alwaysLog": "allErrors",
                  "loggerId": "Microsoft.ApiManagement/service/loggers/GEN-UNIQUE-20/GEN-UNIQUE-20",
                  "sampling": {
                    "samplingType": "fixed",
                    "percentage": 100
                  },
                  "enableHttpCorrelationHeaders": true
                }
              }
            ]
          }
        ]
      },
      {
        "type": "Microsoft.ApiManagement/service/providers/diagnosticsettings",
        "name": "GEN-UNIQUE-20/Microsoft.Insights/service",
        "apiVersion": "2016-09-01",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "Microsoft.ApiManagement/service/GEN-UNIQUE-20",
          "Microsoft.OperationalInsights/workspaces//GEN-UNIQUE-20"
        ],
        "properties": {
          "workspaceId": "Microsoft.OperationalInsights/workspaces//GEN-UNIQUE-20",
          "logs": [
            {
              "category": "GatewayLogs",
              "enabled": true,
              "retentionPolicy": {
                "enabled": true,
                "days": 0
              }
            }
          ],
          "metrics": [
            {
              "category": "AllMetrics",
              "timeGrain": "PT1M",
              "enabled": true,
              "retentionPolicy": {
                "enabled": false,
                "days": 0
              }
            }
          ]
        }
      },
      {
        "condition": true,
        "apiVersion": "2019-03-01",
        "type": "Microsoft.Network/FrontDoorWebApplicationFirewallPolicies",
        "name": "FrontDoorApimSampleWaf",
        "location": "global",
        "properties": {
          "policySettings": {
            "mode": "Prevention",
            "enabledState": "Enabled"
          },
          "managedRules": {
            "managedRuleSets": [
              {
                "ruleSetType": "DefaultRuleSet",
                "ruleSetVersion": "1.0"
              }
            ]
          }
        }
      },
      {
        "type": "Microsoft.Network/frontdoors",
        "apiVersion": "2019-05-01",
        "name": "GEN-UNIQUE-20",
        "location": "Global",
        "dependsOn": [
          "Microsoft.Network/FrontDoorWebApplicationFirewallPolicies/FrontDoorApimSampleWaf"
        ],
        "properties": {
          "backendPoolsSettings": {
            "enforceCertificateNameCheck": "Disabled",
            "sendRecvTimeoutSeconds": 120
          },
          "enabledState": "Enabled",
          "resourceState": "Enabled",
          "backendPools": [
            {
              "name": "ApimBackendPool",
              "properties": {
                "backends": [
                  {
                    "address": "[reference(resourceId('Microsoft.ApiManagement/service', parameters('apimServiceName'))).hostnameConfigurations[0].hostName]",
                    "httpPort": 80,
                    "httpsPort": 443,
                    "priority": 1,
                    "weight": 100,
                    "backendHostHeader": "[reference(resourceId('Microsoft.ApiManagement/service', parameters('apimServiceName'))).hostnameConfigurations[0].hostName]"
                  }
                ],
                "healthProbeSettings": {
                  "id": "Microsoft.Network/frontdoors/healthProbeSettings/GEN-UNIQUE-20/ApimHealthProbeSettings"
                },
                "loadBalancingSettings": {
                  "id": "Microsoft.Network/frontdoors/loadBalancingSettings/GEN-UNIQUE-20/ApimLoadBalancer"
                }
              }
            }
          ],
          "healthProbeSettings": [
            {
              "name": "ApimHealthProbeSettings",
              "properties": {
                "intervalInSeconds": 30,
                "path": "/status-0123456789abcdef",
                "protocol": "Https"
              }
            }
          ],
          "frontendEndpoints": [
            {
              "name": "MainFrontendEndpoint",
              "properties": {
                "hostName": "[variables('frontDoorHostName')]",
                "sessionAffinityEnabledState": "Disabled",
                "sessionAffinityTtlSeconds": 0,
                "resourceState": "Enabled",
                "webApplicationFirewallPolicyLink": {
                  "id": "[if(parameters('deployWaf'), variables('wafPolicyId'), json('null'))]"
                }
              }
            }
          ],
          "loadBalancingSettings": [
            {
              "name": "ApimLoadBalancer",
              "properties": {
                "additionalLatencyMilliseconds": 0,
                "sampleSize": 4,
                "successfulSamplesRequired": 2
              }
            }
          ],
          "routingRules": [
            {
              "name": "ApimRoutingRule",
              "properties": {
                "frontendEndpoints": [
                  {
                    "id": "Microsoft.Network/frontdoors/frontendEndpoints/GEN-UNIQUE-20/MainFrontendEndpoint"
                  }
                ],
                "acceptedProtocols": [
                  "Http",
                  "Https"
                ],
                "patternsToMatch": [
                  "/*"
                ],
                "routeConfiguration": {
                  "@odata.type": "#Microsoft.Azure.FrontDoor.Models.FrontdoorForwardingConfiguration",
                  "customForwardingPath": "/",
                  "forwardingProtocol": "MatchRequest",
                  "backendPool": {
                    "id": "Microsoft.Network/frontdoors/backendPools/GEN-UNIQUE-20/ApimBackendPool"
                  },
                  "cacheConfiguration": {
                    "queryParameterStripDirective": "StripNone",
                    "dynamicCompression": "Enabled"
                  }
                }
              }
            }
          ],
          "friendlyName": "GEN-UNIQUE-20"
        }
      },
      {
        "type": "Microsoft.Network/frontdoors/providers/diagnosticsettings",
        "name": "GEN-UNIQUE-20/Microsoft.Insights/service",
        "apiVersion": "2016-09-01",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "Microsoft.Network/frontdoors/GEN-UNIQUE-20",
          "Microsoft.OperationalInsights/workspaces//GEN-UNIQUE-20"
        ],
        "properties": {
          "workspaceId": "Microsoft.OperationalInsights/workspaces//GEN-UNIQUE-20",
          "logs": [
            {
              "category": "FrontdoorAccessLog",
              "enabled": true,
              "retentionPolicy": {
                "enabled": true,
                "days": 0
              }
            },
            {
              "category": "FrontdoorWebApplicationFirewallLog",
              "enabled": true,
              "retentionPolicy": {
                "enabled": true,
                "days": 0
              }
            }
          ],
          "metrics": [
            {
              "category": "AllMetrics",
              "timeGrain": "PT1M",
              "enabled": true,
              "retentionPolicy": {
                "enabled": false,
                "days": 0
              }
            }
          ]
        }
      }
    ],
    "outputs": {
      "apiManagement": {
        "value": "[reference(resourceId('Microsoft.ApiManagement/service', parameters('apimServiceName')), '2019-12-01', 'Full')]",
        "type": "object"
      }
    },
    "\uff04schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#"
  }
}