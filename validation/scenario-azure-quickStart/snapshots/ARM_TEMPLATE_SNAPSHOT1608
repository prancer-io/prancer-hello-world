{
  "structure": "filesystem",
  "error": null,
  "reference": "master",
  "contentType": "json",
  "source": "gitConnectorAzureQuickStart",
  "paths": [
    "/quickstarts/microsoft.network/vnet-nsg-for-redis/azuredeploy.json",
    "/quickstarts/microsoft.network/vnet-nsg-for-redis/azuredeploy.parameters.json"
  ],
  "timestamp": 1642962909641,
  "queryuser": null,
  "checksum": "99914b932bd37a50b983c5e7c90ae93b",
  "node": {
    "masterSnapshotId": "ARM_TEMPLATE_SNAPSHOT",
    "type": "arm",
    "collection": "armtemplate",
    "paths": [
      "/quickstarts/microsoft.network/vnet-nsg-for-redis/azuredeploy.json",
      "/quickstarts/microsoft.network/vnet-nsg-for-redis/azuredeploy.parameters.json"
    ],
    "snapshotId": "ARM_TEMPLATE_SNAPSHOT1608",
    "status": "active",
    "validate": true,
    "resourceTypes": [
      "microsoft.resources/deployments",
      "microsoft.network/networksecuritygroups"
    ]
  },
  "snapshotId": "ARM_TEMPLATE_SNAPSHOT1608",
  "collection": "armtemplate",
  "json": {
    "contentVersion": "1.0.0.0",
    "parameters": {
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "The location of the existing Virtual Network and new Network Security Group."
        },
        "value": "GET-PREREQ-existingVirtualNetworkLocation"
      },
      "existingVirtualNetworkResourceGroupName": {
        "type": "string",
        "defaultValue": "[resourceGroup().name]",
        "metadata": {
          "description": "The resource group of the existing Virtual Network."
        },
        "value": "GET-PREREQ-existingVirtualNetworkResourceGroupName"
      },
      "existingVirtualNetworkName": {
        "type": "string",
        "metadata": {
          "description": "The name of the existing Virtual Network."
        },
        "value": "GET-PREREQ-existingVirtualNetworkName"
      },
      "existingSubnetName": {
        "type": "string",
        "metadata": {
          "description": "The name of the existing subnet."
        },
        "value": "GET-PREREQ-existingSubnetName"
      },
      "newNsgName": {
        "type": "string",
        "metadata": {
          "description": "The name of the new Network Security Group."
        },
        "value": "GEN-UNIQUE"
      }
    },
    "variables": {
      "subnetId": "GET-PREREQ-existingVirtualNetworkResourceGroupName/Microsoft.Network/virtualNetworks/subnets/GET-PREREQ-existingVirtualNetworkName/GET-PREREQ-existingSubnetName"
    },
    "resources": [
      {
        "type": "Microsoft.Network/networkSecurityGroups",
        "apiVersion": "2020-05-01",
        "name": "GEN-UNIQUE",
        "location": "GET-PREREQ-existingVirtualNetworkLocation",
        "properties": {
          "securityRules": [
            {
              "name": "Allow_Outbound_Storage_PKI",
              "properties": {
                "description": "Redis dependencies on Azure Storage/PKI (Internet)",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRanges": [
                  "80",
                  "443"
                ],
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "[reference(variables('subnetId'), '2018-04-01').addressPrefix]",
                "access": "Allow",
                "priority": 200,
                "direction": "Outbound"
              }
            },
            {
              "name": "Allow_Outbound_DNS",
              "properties": {
                "description": "Redis dependencies on DNS (Internet/VNet)",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "53",
                "sourceAddressPrefix": "[reference(variables('subnetId'), '2018-04-01').addressPrefix]",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 201,
                "direction": "Outbound"
              }
            },
            {
              "name": "Allow_Outbound_RedisPortsWithinSubnet",
              "properties": {
                "description": "Internal communications for Redis",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRanges": [
                  "6379",
                  "6380",
                  "8443",
                  "10221-10231",
                  "20226",
                  "13000-13999",
                  "15000-15999"
                ],
                "sourceAddressPrefix": "[reference(variables('subnetId'), '2018-04-01').addressPrefix]",
                "destinationAddressPrefix": "[reference(variables('subnetId'), '2018-04-01').addressPrefix]",
                "access": "Allow",
                "priority": 202,
                "direction": "Outbound"
              }
            },
            {
              "name": "Allow_Inbound_ClientEndpoints",
              "properties": {
                "description": "Client communication to Redis, Azure load balancing",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRanges": [
                  "6379",
                  "6380"
                ],
                "sourceAddressPrefix": "[reference(variables('subnetId'), '2018-04-01').addressPrefix]",
                "destinationAddressPrefix": "[reference(variables('subnetId'), '2018-04-01').addressPrefix]",
                "access": "Allow",
                "priority": 200,
                "direction": "Inbound"
              }
            },
            {
              "name": "Allow_Inbound_ClientCommunicationWithinVNET",
              "properties": {
                "description": "Client communication to Redis, Azure load balancing",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRanges": [
                  "6379",
                  "6380",
                  "13000-13999",
                  "15000-15999"
                ],
                "sourceAddressPrefix": "VirtualNetwork",
                "destinationAddressPrefix": "[reference(variables('subnetId'), '2018-04-01').addressPrefix]",
                "access": "Allow",
                "priority": 201,
                "direction": "Inbound"
              }
            },
            {
              "name": "Allow_Inbound_LoadBalancingWithinVNET",
              "properties": {
                "description": "Client communication to Redis, Azure load balancing",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRanges": [
                  "6379",
                  "6380",
                  "13000-13999",
                  "15000-15999"
                ],
                "sourceAddressPrefix": "AzureLoadBalancer",
                "destinationAddressPrefix": "[reference(variables('subnetId'), '2018-04-01').addressPrefix]",
                "access": "Allow",
                "priority": 202,
                "direction": "Inbound"
              }
            },
            {
              "name": "Allow_Inbound_InternalRedisCommunication",
              "properties": {
                "description": "Internal communications for Redis",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRanges": [
                  "8443",
                  "10221-10231",
                  "20226"
                ],
                "sourceAddressPrefix": "[reference(variables('subnetId'), '2018-04-01').addressPrefix]",
                "destinationAddressPrefix": "[reference(variables('subnetId'), '2018-04-01').addressPrefix]",
                "access": "Allow",
                "priority": 203,
                "direction": "Inbound"
              }
            },
            {
              "name": "Allow_Inbound_LoadBalancerToRedisInternalAddresses",
              "properties": {
                "description": "Internal communications for Redis",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "10221-10231",
                "sourceAddressPrefix": "AzureLoadBalancer",
                "destinationAddressPrefix": "[reference(variables('subnetId'), '2018-04-01').addressPrefix]",
                "access": "Allow",
                "priority": 204,
                "direction": "Inbound"
              }
            },
            {
              "name": "Allow_Inbound_LoadBalancing",
              "properties": {
                "description": "Azure load balancing",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRanges": [
                  "8500",
                  "16001"
                ],
                "sourceAddressPrefix": "AzureLoadBalancer",
                "destinationAddressPrefix": "[reference(variables('subnetId'), '2018-04-01').addressPrefix]",
                "access": "Allow",
                "priority": 205,
                "direction": "Inbound"
              }
            }
          ]
        }
      },
      {
        "apiVersion": "2020-06-01",
        "type": "Microsoft.Resources/deployments",
        "name": "associateNsg",
        "resourceGroup": "GET-PREREQ-existingVirtualNetworkResourceGroupName",
        "dependsOn": [
          "GEN-UNIQUE"
        ],
        "properties": {
          "mode": "Incremental",
          "template": {
            "contentVersion": "1.0.0.0",
            "resources": [
              {
                "apiVersion": "2020-05-01",
                "type": "Microsoft.Network/virtualNetworks/subnets",
                "name": "GET-PREREQ-existingVirtualNetworkName/GET-PREREQ-existingSubnetName",
                "location": "GET-PREREQ-existingVirtualNetworkLocation",
                "properties": {
                  "addressPrefix": "[reference(variables('subnetId'), '2020-05-01').addressPrefix]",
                  "networkSecurityGroup": {
                    "id": "Microsoft.Network/networkSecurityGroups/GEN-UNIQUE"
                  }
                }
              }
            ],
            "\uff04schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#"
          }
        }
      }
    ],
    "outputs": {
      "existingVirtualNetworkName": {
        "type": "string",
        "value": "[parameters('existingVirtualNetworkName')]"
      },
      "existingSubnetName": {
        "type": "string",
        "value": "[parameters('existingSubnetName')]"
      },
      "subnetAddressPrefix": {
        "type": "string",
        "value": "[reference(variables('subnetId'), '2018-04-01').addressPrefix]"
      },
      "newNsgName": {
        "type": "string",
        "value": "[parameters('newNsgName')]"
      }
    },
    "\uff04schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#"
  }
}