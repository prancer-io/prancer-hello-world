{
  "structure": "filesystem",
  "error": null,
  "reference": "master",
  "contentType": "json",
  "source": "gitConnectorAzureQuickStart",
  "paths": [
    "/quickstarts/microsoft.machinelearningservices/machine-learning-linkedservice-create/prereqs/nestedtemplates/pausetemplate.json"
  ],
  "timestamp": 1642962907867,
  "queryuser": null,
  "checksum": "99914b932bd37a50b983c5e7c90ae93b",
  "node": {
    "masterSnapshotId": "ARM_TEMPLATE_SNAPSHOT",
    "type": "arm",
    "collection": "armtemplate",
    "paths": [
      "/quickstarts/microsoft.machinelearningservices/machine-learning-linkedservice-create/prereqs/nestedtemplates/pausetemplate.json"
    ],
    "snapshotId": "ARM_TEMPLATE_SNAPSHOT1448",
    "status": "active",
    "validate": true,
    "resourceTypes": [
      "microsoft.logic/workflows"
    ]
  },
  "snapshotId": "ARM_TEMPLATE_SNAPSHOT1448",
  "collection": "armtemplate",
  "json": {
    "contentVersion": "1.0.0.0",
    "parameters": {
      "location": {
        "type": "string"
      },
      "companyTla": {
        "type": "string"
      },
      "deploymentType": {
        "type": "string"
      },
      "LogicAppName": {
        "type": "string"
      },
      "Frequency": {
        "type": "string"
      },
      "TIME_ZONE": {
        "type": "string"
      },
      "PauseTime": {
        "type": "string"
      }
    },
    "variables": {
      "pauseTimeHour": "[split(substring(parameters('PauseTime'), 11, 5), ':')[0]]",
      "recurrenceHours": [
        "[split(substring(parameters('PauseTime'), 11, 5), ':')[0]]"
      ],
      "recurrenceMinutes": [
        0
      ],
      "pauseTimeString": "[substring(parameters('PauseTime'), 0, 8)]",
      "dailySchedule": [
        "Monday",
        "Tuesday",
        "Wednesday",
        "Thursday",
        "Friday",
        "Saturday",
        "Sunday"
      ],
      "weekdaySchedule": [
        "Monday",
        "Tuesday",
        "Wednesday",
        "Thursday",
        "Friday"
      ],
      "recurrenceSchedule": "[if(equals(parameters('Frequency'), 'Weekdays'), variables('weekdaySchedule'), variables('dailySchedule'))]",
      "synapseWorkspaceName": "[toLower(concat(variables('synapseName'),'ws1'))]",
      "synapseName": "[toLower(concat(parameters('companyTla'),parameters('deploymentType')))]",
      "synapseSQLPoolName": "[toLower(concat(variables('workspaceName'),'p1'))]",
      "workspaceName": "[toLower(concat(variables('synapseName'),'ws1'))]",
      "getRESTAPI": "subscriptions/@{variables('RestAPIVariables')['SubscriptionId']}/resourceGroups/@{variables('RestAPIVariables')['ResourceGroupName']}/providers/Microsoft.Synapse/workspaces/@{variables('RestAPIVariables')['workspaceName']}/sqlPools/@{variables('RestAPIVariables')['sqlPoolName']}?api-version=2019-06-01-preview",
      "pauseRESTAPI": "subscriptions/@{variables('RestAPIVariables')['SubscriptionId']}/resourceGroups/@{variables('RestAPIVariables')['ResourceGroupName']}/providers/Microsoft.Synapse/workspaces/@{variables('RestAPIVariables')['workspaceName']}/sqlPools/@{variables('RestAPIVariables')['sqlPoolName']}/pause?api-version=2019-06-01-preview",
      "aqcRESTAPI": "subscriptions/@{variables('RestAPIVariables')['SubscriptionId']}/resourceGroups/@{variables('RestAPIVariables')['ResourceGroupName']}/providers/Microsoft.Synapse/workspaces/@{variables('RestAPIVariables')['WorkspaceName']}/sqlpools/@{variables('RestAPIVariables')['SQLPoolName']}/dataWarehouseUserActivities/current?api-version=2019-06-01-preview",
      "managementEndpoint": "[environment().resourceManager]"
    },
    "resources": [
      {
        "type": "Microsoft.Logic/workflows",
        "apiVersion": "2019-05-01",
        "name": "LogicAppName",
        "location": "location",
        "identity": {
          "type": "SystemAssigned"
        },
        "properties": {
          "state": "Enabled",
          "definition": {
            "actions": {
              "Initialize_API_variables": {
                "type": "InitializeVariable",
                "inputs": {
                  "variables": [
                    {
                      "name": "RestAPIVariables",
                      "type": "Object",
                      "value": {
                        "workspaceName": "[toLower(concat(variables('synapseName'),'ws1'))]",
                        "sqlPoolName": "[toLower(concat(variables('workspaceName'),'p1'))]",
                        "ResourceGroupName": "[resourceGroup().name]",
                        "SubscriptionId": "[subscription().subscriptionId]",
                        "TenantId": "[subscription().tenantId]",
                        "ScheduleTimeZone": "TIME_ZONE",
                        "PauseTime": "[substring(parameters('PauseTime'), 0, 8)]"
                      }
                    }
                  ]
                }
              },
              "Initialize_ActiveQueryCount_variable": {
                "inputs": {
                  "variables": [
                    {
                      "name": "ActiveQueryCount",
                      "type": "Integer",
                      "value": 1
                    }
                  ]
                },
                "runAfter": {
                  "Initialize_API_variables": [
                    "Succeeded"
                  ]
                },
                "type": "InitializeVariable"
              },
              "Get_Synapse_state": {
                "type": "Http",
                "inputs": {
                  "method": "GET",
                  "uri": "[environment().resourceManager]subscriptions/@{variables('RestAPIVariables')['SubscriptionId']}/resourceGroups/@{variables('RestAPIVariables')['ResourceGroupName']}/providers/Microsoft.Synapse/workspaces/@{variables('RestAPIVariables')['workspaceName']}/sqlPools/@{variables('RestAPIVariables')['sqlPoolName']}?api-version=2019-06-01-preview",
                  "authentication": {
                    "type": "ManagedServiceIdentity"
                  }
                },
                "runAfter": {
                  "Initialize_ActiveQueryCount_variable": [
                    "Succeeded"
                  ]
                }
              },
              "Parse_JSON": {
                "inputs": {
                  "content": "@body('Get_Synapse_state')",
                  "schema": {
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "location": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "properties": {
                        "properties": {
                          "collation": {
                            "type": "string"
                          },
                          "creationDate": {
                            "type": "string"
                          },
                          "maxSizeBytes": {
                            "type": "integer"
                          },
                          "provisioningState": {
                            "type": "string"
                          },
                          "restorePointInTime": {
                            "type": "string"
                          },
                          "status": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "sku": {
                        "properties": {
                          "capacity": {
                            "type": "integer"
                          },
                          "name": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "runAfter": {
                  "Get_Synapse_state": [
                    "Succeeded"
                  ]
                },
                "type": "ParseJson"
              },
              "PauseSynapseIfOnline": {
                "type": "If",
                "expression": {
                  "and": [
                    {
                      "equals": [
                        "@body('Get_Synapse_state')['properties']['status']",
                        "Online"
                      ]
                    }
                  ]
                },
                "actions": {
                  "Pause_SQL_Pool": {
                    "type": "Http",
                    "inputs": {
                      "method": "POST",
                      "uri": "[environment().resourceManager]subscriptions/@{variables('RestAPIVariables')['SubscriptionId']}/resourceGroups/@{variables('RestAPIVariables')['ResourceGroupName']}/providers/Microsoft.Synapse/workspaces/@{variables('RestAPIVariables')['workspaceName']}/sqlPools/@{variables('RestAPIVariables')['sqlPoolName']}/pause?api-version=2019-06-01-preview",
                      "authentication": {
                        "type": "ManagedServiceIdentity"
                      }
                    },
                    "runAfter": {
                      "Until_ZeroActiveQueries": [
                        "Succeeded"
                      ]
                    }
                  },
                  "Until_ZeroActiveQueries": {
                    "type": "Until",
                    "expression": "@equals(variables('ActiveQueryCount'), 0)",
                    "limit": {
                      "count": 3,
                      "timeout": "PT3H"
                    },
                    "actions": {
                      "GetActiveQueryCount": {
                        "type": "Http",
                        "inputs": {
                          "method": "GET",
                          "uri": "[environment().resourceManager]subscriptions/@{variables('RestAPIVariables')['SubscriptionId']}/resourceGroups/@{variables('RestAPIVariables')['ResourceGroupName']}/providers/Microsoft.Synapse/workspaces/@{variables('RestAPIVariables')['WorkspaceName']}/sqlpools/@{variables('RestAPIVariables')['SQLPoolName']}/dataWarehouseUserActivities/current?api-version=2019-06-01-preview",
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      },
                      "Update_ActiveQueryCount_variable": {
                        "type": "SetVariable",
                        "inputs": {
                          "name": "ActiveQueryCount",
                          "value": "@body('GetActiveQueryCount')['properties']['activeQueriesCount']"
                        },
                        "runAfter": {
                          "GetActiveQueryCount": [
                            "Succeeded"
                          ]
                        }
                      },
                      "Wait5minsIfActiveQuery": {
                        "type": "If",
                        "actions": {
                          "Wait_5mins": {
                            "inputs": {
                              "interval": {
                                "count": 5,
                                "unit": "Minute"
                              }
                            },
                            "type": "Wait"
                          }
                        },
                        "expression": {
                          "and": [
                            {
                              "greater": [
                                "@variables('ActiveQueryCount')",
                                0
                              ]
                            }
                          ]
                        },
                        "runAfter": {
                          "Update_ActiveQueryCount_variable": [
                            "Succeeded"
                          ]
                        }
                      }
                    }
                  }
                },
                "runAfter": {
                  "Parse_JSON": [
                    "Succeeded"
                  ]
                }
              }
            },
            "triggers": {
              "Recurrence": {
                "type": "Recurrence",
                "recurrence": {
                  "frequency": "Week",
                  "interval": 1,
                  "timeZone": "TIME_ZONE",
                  "startTime": "2019-01-01T00:00:00Z",
                  "schedule": {
                    "weekDays": "[if(equals(parameters('Frequency'), 'Weekdays'), variables('weekdaySchedule'), variables('dailySchedule'))]",
                    "hours": [
                      "[split(substring(parameters('PauseTime'), 11, 5), ':')[0]]"
                    ],
                    "minutes": [
                      0
                    ]
                  }
                }
              }
            },
            "contentVersion": "1.0.0.0",
            "\uff04schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#"
          }
        }
      }
    ],
    "\uff04schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#"
  }
}