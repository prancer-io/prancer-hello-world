{
  "structure": "filesystem",
  "error": null,
  "reference": "master",
  "contentType": "json",
  "source": "gitConnectorAzureQuickStart",
  "paths": [
    "/quickstarts/microsoft.timeseriesinsights/timeseriesinsights-environment-payg-with-iothub/azuredeploy.json",
    "/quickstarts/microsoft.timeseriesinsights/timeseriesinsights-environment-payg-with-iothub/azuredeploy.parameters.json"
  ],
  "timestamp": 1642962910738,
  "queryuser": null,
  "checksum": "99914b932bd37a50b983c5e7c90ae93b",
  "node": {
    "masterSnapshotId": "ARM_TEMPLATE_SNAPSHOT",
    "type": "arm",
    "collection": "armtemplate",
    "paths": [
      "/quickstarts/microsoft.timeseriesinsights/timeseriesinsights-environment-payg-with-iothub/azuredeploy.json",
      "/quickstarts/microsoft.timeseriesinsights/timeseriesinsights-environment-payg-with-iothub/azuredeploy.parameters.json"
    ],
    "snapshotId": "ARM_TEMPLATE_SNAPSHOT1735",
    "status": "active",
    "validate": true,
    "resourceTypes": [
      "microsoft.timeseriesinsights/environments/accesspolicies",
      "microsoft.devices/iothubs/eventhubendpoints/consumergroups",
      "microsoft.devices/iothubs",
      "microsoft.timeseriesinsights/environments",
      "microsoft.storage/storageaccounts"
    ]
  },
  "snapshotId": "ARM_TEMPLATE_SNAPSHOT1735",
  "collection": "armtemplate",
  "json": {
    "contentVersion": "1.0.0.0",
    "parameters": {
      "iotHubNewOrExisting": {
        "type": "string",
        "defaultValue": "new",
        "metadata": {
          "description": "Determines whether or not a new IoT Hub should be provisioned."
        }
      },
      "iotHubResourceGroup": {
        "type": "string",
        "defaultValue": "[resourceGroup().name]",
        "metadata": {
          "description": "If you have an existing IotHub provide the name here. Defaults to the same resource group as the TSI environnment."
        }
      },
      "iotHubName": {
        "type": "string",
        "defaultValue": "[concat('tsi', uniquestring(resourceGroup().id))]",
        "metadata": {
          "description": "The name of the source IoT hub."
        },
        "value": "GEN-UNIQUE"
      },
      "iotHubSku": {
        "type": "string",
        "defaultValue": "S1",
        "allowedValues": [
          "F1",
          "S1",
          "S2",
          "S3",
          "B1",
          "B2",
          "B3"
        ],
        "metadata": {
          "description": "The name of the IoT hub Sku."
        }
      },
      "iotHubSkuTier": {
        "type": "string",
        "defaultValue": "Standard",
        "metadata": {
          "description": "The billing tier for the IoT hub."
        }
      },
      "consumerGroupName": {
        "type": "string",
        "defaultValue": "tsiquickstart",
        "metadata": {
          "description": "The name of the consumer group that the Time Series Insights service will use to read the data from the event hub. NOTE: To avoid resource contention, this consumer group must be dedicated to the Time Series Insights service and not shared with other readers."
        },
        "value": "GEN-UNIQUE"
      },
      "environmentName": {
        "type": "string",
        "defaultValue": "tsiquickstart",
        "maxLength": 90,
        "metadata": {
          "description": "Name of the environment. The name cannot include:   '<', '>', '%', '&', ':', '\\', '?', '/' and any control characters. All other characters are allowed."
        },
        "value": "GEN-UNIQUE"
      },
      "environmentDisplayName": {
        "type": "string",
        "defaultValue": "tsiquickstart",
        "maxLength": 90,
        "metadata": {
          "description": "An optional friendly name to show in tooling or user interfaces instead of the environment name."
        }
      },
      "environmentSkuName": {
        "type": "string",
        "defaultValue": "L1",
        "allowedValues": [
          "L1"
        ],
        "metadata": {
          "description": "The name of the sku. For more information, see https://azure.microsoft.com/pricing/details/time-series-insights/"
        }
      },
      "environmentKind": {
        "type": "string",
        "defaultValue": "LongTerm",
        "allowedValues": [
          "LongTerm"
        ],
        "metadata": {
          "description": "The Time Series Environment kind."
        }
      },
      "environmentSkuCapacity": {
        "type": "int",
        "defaultValue": 1,
        "minValue": 1,
        "maxValue": 10,
        "metadata": {
          "description": "The unit capacity of the Sku. For more information, see https://azure.microsoft.com/pricing/details/time-series-insights/"
        }
      },
      "environmentTimeSeriesIdProperties": {
        "type": "array",
        "maxLength": 3,
        "metadata": {
          "description": "Time Series ID acts as a partition key for your data and as a primary key for your time series model. It is important that you specify the appropriate Time Series Property ID during environment creation, since you can't change it later. Note that the Property ID is case sensitive. You can use 1-3 keys: one is required, but up to three can be used to create a composite."
        },
        "value": [
          {
            "name": "GEN-UNIQUE",
            "type": "string"
          }
        ]
      },
      "eventSourceName": {
        "type": "string",
        "defaultValue": "tsiquickstart",
        "maxLength": 90,
        "metadata": {
          "description": "Name of the event source child resource. The name cannot include:   '<', '>', '%', '&', ':', '\\', '?', '/' and any control characters. All other characters are allowed."
        },
        "value": "GEN-UNIQUE"
      },
      "eventSourceDisplayName": {
        "type": "string",
        "defaultValue": "tsiquickstart",
        "maxLength": 90,
        "metadata": {
          "description": "An optional friendly name to show in tooling or user interfaces instead of the event source name."
        }
      },
      "eventSourceTimestampPropertyName": {
        "type": "string",
        "defaultValue": "",
        "maxLength": 90,
        "metadata": {
          "description": "The event property that will be used as the event source's timestamp. If a value isn't specified for timestampPropertyName, or if null or empty-string is specified, the event creation time will be used."
        }
      },
      "eventSourceKeyName": {
        "type": "string",
        "defaultValue": "service",
        "metadata": {
          "description": "The name of the shared access key that the Time Series Insights service will use to connect to the event hub."
        }
      },
      "accessPolicyReaderObjectIds": {
        "type": "array",
        "defaultValue": [],
        "metadata": {
          "description": "A list of object ids of the users or applications in AAD that should have Reader access to the environment. The service principal objectId can be obtained by calling the Get-AzureRMADUser or the Get-AzureRMADServicePrincipal cmdlets. Creating an access policy for AAD groups is not yet supported."
        }
      },
      "accessPolicyContributorObjectIds": {
        "type": "array",
        "defaultValue": [],
        "metadata": {
          "description": "A list of object ids of the users or applications in AAD that should have Contributor access to the environment. The service principal objectId can be obtained by calling the Get-AzureRMADUser or the Get-AzureRMADServicePrincipal cmdlets. Creating an access policy for AAD groups is not yet supported."
        }
      },
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Location for all resources."
        }
      },
      "storageAccountType": {
        "type": "string",
        "defaultValue": "Standard_LRS",
        "allowedValues": [
          "Standard_LRS",
          "Standard_GRS",
          "Standard_ZRS"
        ],
        "metadata": {
          "description": "Storage Account type for L1 TSI environments."
        }
      },
      "warmStoreDataRetention": {
        "type": "string",
        "defaultValue": "P7D",
        "metadata": {
          "description": "ISO duration between 7 and 31 days. Remove the 'warmStoreConfiguration' property from the envrionment to delete the warm store."
        }
      }
    },
    "variables": {
      "environmentTagsValue": {
        "displayName": "tsiquickstart"
      },
      "eventSourceTagsValue": {
        "displayName": "tsiquickstart"
      },
      "eventSourceResourceId": "[resourceGroup().name]/Microsoft.Devices/IotHubs/GEN-UNIQUE",
      "storageAccountName": "[concat('tsi', uniquestring(resourceGroup().id))]"
    },
    "resources": [
      {
        "condition": false,
        "type": "Microsoft.Devices/IotHubs",
        "apiVersion": "2020-03-01",
        "name": "GEN-UNIQUE",
        "location": "[resourceGroup().location]",
        "sku": {
          "name": "S1",
          "tier": "Standard",
          "capacity": 1
        }
      },
      {
        "condition": false,
        "type": "Microsoft.Devices/iotHubs/eventhubEndpoints/ConsumerGroups",
        "apiVersion": "2020-03-01",
        "name": "GEN-UNIQUE/events/GEN-UNIQUE",
        "dependsOn": [
          "Microsoft.Devices/iothubs/GEN-UNIQUE"
        ]
      },
      {
        "type": "Microsoft.TimeSeriesInsights/environments",
        "apiVersion": "2018-08-15-preview",
        "name": "GEN-UNIQUE",
        "location": "[resourceGroup().location]",
        "kind": "LongTerm",
        "tags": {
          "displayName": "tsiquickstart"
        },
        "properties": {
          "storageConfiguration": {
            "accountName": "[variables('storageAccountName')]",
            "managementKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2019-06-01').keys[0].value]"
          },
          "timeSeriesIdProperties": [
            {
              "name": "GEN-UNIQUE",
              "type": "string"
            }
          ],
          "warmStoreConfiguration": {
            "dataRetention": "P7D"
          }
        },
        "sku": {
          "name": "L1",
          "capacity": 1
        },
        "resources": [
          {
            "type": "eventsources",
            "apiVersion": "2018-08-15-preview",
            "name": "GEN-UNIQUE",
            "location": "[resourceGroup().location]",
            "kind": "Microsoft.IoTHub",
            "dependsOn": [
              "Microsoft.TimeSeriesInsights/environments/GEN-UNIQUE",
              "Microsoft.Devices/IotHubs/GEN-UNIQUE",
              "Microsoft.Devices/IotHubs/eventHubEndpoints/ConsumerGroups/GEN-UNIQUE/events/GEN-UNIQUE"
            ],
            "tags": {
              "displayName": "tsiquickstart"
            },
            "properties": {
              "eventSourceResourceId": "[resourceGroup().name]/Microsoft.Devices/IotHubs/GEN-UNIQUE",
              "iotHubName": "GEN-UNIQUE",
              "consumerGroupName": "GEN-UNIQUE",
              "keyName": "service",
              "sharedAccessKey": "[listkeys(resourceId('Microsoft.Devices/IoTHubs/IotHubKeys', parameters('iotHubName'), parameters('eventSourceKeyName')), '2020-03-01').primaryKey]",
              "timestampPropertyName": ""
            }
          }
        ]
      },
      {
        "condition": "[not(empty(parameters('accessPolicyReaderObjectIds')))]",
        "type": "Microsoft.TimeSeriesInsights/environments/accesspolicies",
        "apiVersion": "2018-08-15-preview",
        "name": "GEN-UNIQUE/readerAccessPolicycopyIndex()",
        "dependsOn": [
          "Microsoft.TimeSeriesInsights/environments/GEN-UNIQUE"
        ],
        "copy": {
          "name": "accessPolicyReaderCopy",
          "count": "[if(empty(parameters('accessPolicyReaderObjectIds')), 1, length(parameters('accessPolicyReaderObjectIds')))]"
        },
        "properties": {
          "principalObjectId": "accessPolicyReaderObjectIds)[copyIndex(",
          "roles": [
            "Reader"
          ]
        }
      },
      {
        "condition": "[not(empty(parameters('accessPolicyContributorObjectIds')))]",
        "type": "Microsoft.TimeSeriesInsights/environments/accesspolicies",
        "apiVersion": "2018-08-15-preview",
        "name": "GEN-UNIQUE/contributorAccessPolicycopyIndex()",
        "dependsOn": [
          "Microsoft.TimeSeriesInsights/environments/GEN-UNIQUE"
        ],
        "copy": {
          "name": "accessPolicyContributorCopy",
          "count": "[if(empty(parameters('accessPolicyContributorObjectIds')), 1, length(parameters('accessPolicyContributorObjectIds')))]"
        },
        "properties": {
          "principalObjectId": "accessPolicyContributorObjectIds)[copyIndex(",
          "roles": [
            "Contributor"
          ]
        }
      },
      {
        "condition": false,
        "type": "Microsoft.Storage/storageAccounts",
        "apiVersion": "2018-11-01",
        "name": "[variables('storageAccountName')]",
        "location": "[resourceGroup().location]",
        "sku": {
          "name": "Standard_LRS"
        },
        "kind": "StorageV2",
        "properties": {}
      }
    ],
    "outputs": {
      "dataAccessFQDN": {
        "value": "[reference(resourceId('Microsoft.TimeSeriesInsights/environments', parameters('environmentName'))).dataAccessFQDN]",
        "type": "string"
      }
    },
    "\uff04schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#"
  }
}