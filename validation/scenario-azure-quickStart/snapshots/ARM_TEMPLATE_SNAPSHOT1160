{
  "structure": "filesystem",
  "error": null,
  "reference": "master",
  "contentType": "json",
  "source": "gitConnectorAzureQuickStart",
  "paths": [
    "/quickstarts/microsoft.compute/vmss-master-slave-customscript/azuredeploy.json",
    "/quickstarts/microsoft.compute/vmss-master-slave-customscript/azuredeploy.parameters.json"
  ],
  "timestamp": 1642962904938,
  "queryuser": null,
  "checksum": "99914b932bd37a50b983c5e7c90ae93b",
  "node": {
    "masterSnapshotId": "ARM_TEMPLATE_SNAPSHOT",
    "type": "arm",
    "collection": "armtemplate",
    "paths": [
      "/quickstarts/microsoft.compute/vmss-master-slave-customscript/azuredeploy.json",
      "/quickstarts/microsoft.compute/vmss-master-slave-customscript/azuredeploy.parameters.json"
    ],
    "snapshotId": "ARM_TEMPLATE_SNAPSHOT1160",
    "status": "active",
    "validate": true,
    "resourceTypes": [
      "microsoft.network/publicipaddresses",
      "microsoft.network/virtualnetworks",
      "microsoft.network/loadbalancers",
      "microsoft.compute/virtualmachinescalesets"
    ]
  },
  "snapshotId": "ARM_TEMPLATE_SNAPSHOT1160",
  "collection": "armtemplate",
  "json": {
    "contentVersion": "1.0.0.0",
    "parameters": {
      "masterNodeCount": {
        "type": "int",
        "minValue": 1,
        "maxValue": 50,
        "metadata": {
          "description": "Number of master node in VMSS; if singlePlacementGroup is true (the default), then this value must be 100 or less; if singlePlacementGroup is false, then ths value must be 50 or less"
        },
        "value": 3
      },
      "masterNodeSku": {
        "defaultValue": "Standard_A1",
        "type": "string",
        "metadata": {
          "description": "Size of VMs in the VM Scale Set for master node."
        },
        "value": "Standard_A1"
      },
      "dataNodeSku": {
        "defaultValue": "Standard_D4S_v3",
        "type": "string",
        "metadata": {
          "description": "Size of VMs in the VM Scale Set for data node."
        },
        "value": "Standard_D4S_v3"
      },
      "dataNodeCount": {
        "type": "int",
        "minValue": 1,
        "maxValue": 100,
        "metadata": {
          "description": "Number of data nodes in VMSS; if singlePlacementGroup is true (the default), then this value must be 100 or less; if singlePlacementGroup is false, then ths value must be 100 or less"
        },
        "value": 5
      },
      "adminUsername": {
        "type": "string",
        "metadata": {
          "description": "Admin username on all VMs."
        },
        "value": "GEN-UNIQUE"
      },
      "osImagePublisher": {
        "type": "string",
        "defaultValue": "OpenLogic",
        "metadata": {
          "description": "Maps to the publisher in the Azure Stack Platform Image Repository manifest file."
        },
        "value": "OpenLogic"
      },
      "osImageOffer": {
        "type": "string",
        "defaultValue": "CentOS",
        "metadata": {
          "description": "Maps to the Offer in the Azure Stack Platform Image Repository manifest file."
        },
        "value": "CentOS"
      },
      "osImageSku": {
        "type": "string",
        "defaultValue": "7.4",
        "metadata": {
          "description": "The CentOS version for the VM. This will pick a fully patched image of this given CentOS version. Default value: 7.4"
        },
        "value": "7.4"
      },
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Location for all resources."
        }
      },
      "authenticationType": {
        "type": "string",
        "defaultValue": "sshPublicKey",
        "allowedValues": [
          "sshPublicKey",
          "password"
        ],
        "metadata": {
          "description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."
        }
      },
      "adminPasswordOrKey": {
        "type": "securestring",
        "metadata": {
          "description": "SSH Key or password for the Virtual Machine. SSH key is recommended."
        },
        "value": "GEN-SSH-PUB-KEY"
      }
    },
    "variables": {
      "vmssName": "[concat('vmss', uniqueString(resourceGroup().id, deployment().name))]",
      "vnetName": "[concat('vnet-', variables('vmssName'))]",
      "subnetMaster": "[concat('mastersubnet-', variables('vmssName'))]",
      "subnetData": "[concat('datasubnet-', variables('vmssName'))]",
      "masterPublicIPAddressName": "[toLower(concat('pip-master', variables('vmssName')))]",
      "dataPublicIPAddressName": "[toLower(concat('pip-data', variables('vmssName')))]",
      "vmssDomainName": "[toLower(concat('pubdns', variables('vmssName')))]",
      "masterNodeLoadBalancerName": "[concat('LB-MasterN', variables('vmssName'))]",
      "dataNodeLoadBalancerName": "[concat('LB-DataN', variables('vmssName'))]",
      "masterNodeLoadBalancerFrontEndName": "[concat('LBFrontEnd', variables('vmssName'))]",
      "dataNodeLoadBalancerFrontEndName": "[concat('LBFrontEnd', variables('vmssName'))]",
      "masterNodeLoadBalancerBackEndName": "[concat('LBBackEnd',variables('vmssName'))]",
      "dataNodeLoadBalancerBackEndName": "[concat('LBBackEnd',variables('vmssName'))]",
      "masterNodeLoadBalancerProbeName": "[concat('LBHttpProbe', variables('vmssName'))]",
      "dataNodeLoadBalancerProbeName": "[concat('LBHttpProbe', variables('vmssName'))]",
      "masterNodeLoadBalancerNatPoolName": "[concat('LBNatPool', variables('vmssName'))]",
      "dataNodeLoadBalancerNatPoolName": "[concat('LBNatPool', variables('vmssName'))]",
      "linuxConfiguration": {
        "disablePasswordAuthentication": true,
        "ssh": {
          "publicKeys": [
            {
              "path": "/home/GEN-UNIQUE/.ssh/authorized_keys",
              "keyData": "GEN-SSH-PUB-KEY"
            }
          ]
        }
      }
    },
    "resources": [
      {
        "type": "Microsoft.Network/virtualNetworks",
        "name": "[variables('vnetName')]",
        "apiVersion": "2020-08-01",
        "location": "[resourceGroup().location]",
        "properties": {
          "addressSpace": {
            "addressPrefixes": [
              "10.0.0.0/16"
            ]
          },
          "subnets": [
            {
              "name": "[variables('subnetMaster')]",
              "properties": {
                "addressPrefix": "10.0.0.0/24"
              }
            },
            {
              "name": "[variables('subnetData')]",
              "properties": {
                "addressPrefix": "10.0.1.0/24"
              }
            }
          ]
        }
      },
      {
        "type": "Microsoft.Network/publicIPAddresses",
        "name": "[toLower(concat('pip-master', variables('vmssName')))]",
        "apiVersion": "2017-06-01",
        "location": "[resourceGroup().location]",
        "properties": {
          "publicIPAllocationMethod": "Dynamic",
          "dnsSettings": {
            "domainNameLabel": "[toLower(concat('pubdns', variables('vmssName')))]-master-node"
          }
        }
      },
      {
        "type": "Microsoft.Network/publicIPAddresses",
        "name": "[toLower(concat('pip-data', variables('vmssName')))]",
        "apiVersion": "2017-06-01",
        "location": "[resourceGroup().location]",
        "properties": {
          "publicIPAllocationMethod": "Dynamic",
          "dnsSettings": {
            "domainNameLabel": "[toLower(concat('pubdns', variables('vmssName')))]-data-node"
          }
        }
      },
      {
        "type": "Microsoft.Network/loadBalancers",
        "name": "[variables('masterNodeLoadBalancerName')]",
        "apiVersion": "2017-06-01",
        "location": "[resourceGroup().location]",
        "properties": {
          "frontendIPConfigurations": [
            {
              "name": "[variables('masterNodeLoadBalancerFrontEndName')]",
              "properties": {
                "publicIPAddress": {
                  "id": "Microsoft.Network/publicIPAddresses/[toLower(concat('pip-master', variables('vmssName')))]"
                }
              }
            }
          ],
          "backendAddressPools": [
            {
              "name": "masterNodeLoadBalancerBackendName"
            }
          ],
          "loadBalancingRules": [
            {
              "name": "roundRobinLBRule",
              "properties": {
                "frontendIPConfiguration": {
                  "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', variables('masterNodeLoadBalancerName'), variables('masterNodeLoadBalancerFrontEndName'))]"
                },
                "backendAddressPool": {
                  "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('masterNodeLoadBalancerName'), variables('masterNodeLoadBalancerBackendName'))]"
                },
                "protocol": "Tcp",
                "frontendPort": 80,
                "backendPort": 80,
                "enableFloatingIP": false,
                "idleTimeoutInMinutes": 5,
                "probe": {
                  "id": "[resourceId('Microsoft.Network/loadBalancers/probes', variables('masterNodeLoadBalancerName'), variables('masterNodeLoadBalancerProbeName'))]"
                }
              }
            }
          ],
          "probes": [
            {
              "name": "[variables('masterNodeLoadBalancerProbeName')]",
              "properties": {
                "protocol": "Tcp",
                "port": 80,
                "intervalInSeconds": 5,
                "numberOfProbes": 2
              }
            }
          ],
          "inboundNatPools": [
            {
              "name": "[variables('masterNodeLoadBalancerNatPoolName')]",
              "properties": {
                "frontendIPConfiguration": {
                  "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', variables('masterNodeLoadBalancerName'), variables('masterNodeLoadBalancerFrontEndName'))]"
                },
                "protocol": "Tcp",
                "frontendPortRangeStart": 50000,
                "frontendPortRangeEnd": 50019,
                "backendPort": 22
              }
            }
          ]
        },
        "dependsOn": [
          "[resourceId('Microsoft.Network/virtualNetworks/', variables('vnetName'))]",
          "[resourceId('Microsoft.Network/publicIPAddresses/', variables('masterPublicIPAddressName'))]"
        ]
      },
      {
        "type": "Microsoft.Network/loadBalancers",
        "name": "[variables('dataNodeLoadBalancerName')]",
        "apiVersion": "2017-06-01",
        "location": "[resourceGroup().location]",
        "properties": {
          "frontendIPConfigurations": [
            {
              "name": "[variables('dataNodeLoadBalancerFrontEndName')]",
              "properties": {
                "publicIPAddress": {
                  "id": "Microsoft.Network/publicIPAddresses/[toLower(concat('pip-data', variables('vmssName')))]"
                }
              }
            }
          ],
          "backendAddressPools": [
            {
              "name": "dataNodeLoadBalancerBackendName"
            }
          ],
          "loadBalancingRules": [
            {
              "name": "roundRobinLBRule",
              "properties": {
                "frontendIPConfiguration": {
                  "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', variables('dataNodeLoadBalancerName'), variables('dataNodeLoadBalancerFrontEndName'))]"
                },
                "backendAddressPool": {
                  "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('dataNodeLoadBalancerName'), variables('dataNodeLoadBalancerBackendName'))]"
                },
                "protocol": "Tcp",
                "frontendPort": 80,
                "backendPort": 80,
                "enableFloatingIP": false,
                "idleTimeoutInMinutes": 5,
                "probe": {
                  "id": "[resourceId('Microsoft.Network/loadBalancers/probes', variables('dataNodeLoadBalancerName'), variables('dataNodeLoadBalancerProbeName'))]"
                }
              }
            }
          ],
          "probes": [
            {
              "name": "[variables('dataNodeLoadBalancerProbeName')]",
              "properties": {
                "protocol": "Tcp",
                "port": 80,
                "intervalInSeconds": 5,
                "numberOfProbes": 2
              }
            }
          ],
          "inboundNatPools": [
            {
              "name": "[variables('dataNodeLoadBalancerNatPoolName')]",
              "properties": {
                "frontendIPConfiguration": {
                  "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', variables('dataNodeLoadBalancerName'), variables('dataNodeLoadBalancerFrontEndName'))]"
                },
                "protocol": "Tcp",
                "frontendPortRangeStart": 50000,
                "frontendPortRangeEnd": 50019,
                "backendPort": 22
              }
            }
          ]
        },
        "dependsOn": [
          "[resourceId('Microsoft.Network/virtualNetworks/', variables('vnetName'))]",
          "[resourceId('Microsoft.Network/publicIPAddresses/', variables('dataPublicIPAddressName'))]"
        ]
      },
      {
        "type": "Microsoft.Compute/virtualMachineScaleSets",
        "sku": {
          "name": "Standard_A1",
          "tier": "Standard",
          "capacity": 3
        },
        "name": "[concat(variables('vmssName'), '-master-node')]",
        "apiVersion": "2017-12-01",
        "location": "[resourceGroup().location]",
        "properties": {
          "upgradePolicy": {
            "mode": "Manual"
          },
          "virtualMachineProfile": {
            "storageProfile": {
              "osDisk": {
                "caching": "ReadWrite",
                "createOption": "FromImage"
              },
              "imageReference": {
                "publisher": "OpenLogic",
                "offer": "CentOS",
                "sku": "7.4",
                "version": "latest"
              }
            },
            "osProfile": {
              "computerNamePrefix": "[variables('vmssName')]",
              "adminUsername": "GEN-UNIQUE",
              "adminPassword": "GEN-SSH-PUB-KEY",
              "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]"
            },
            "networkProfile": {
              "networkInterfaceConfigurations": [
                {
                  "name": "nic",
                  "properties": {
                    "primary": true,
                    "ipConfigurations": [
                      {
                        "name": "ipconfig",
                        "properties": {
                          "subnet": {
                            "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('subnetMaster'))]"
                          },
                          "loadBalancerBackendAddressPools": [
                            {
                              "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('masterNodeLoadBalancerName'), variables('masterNodeLoadBalancerBackEndName'))]"
                            }
                          ],
                          "loadBalancerInboundNatPools": [
                            {
                              "id": "[resourceId('Microsoft.Network/loadBalancers/inboundNatPools', variables('masterNodeLoadBalancerName'), variables('masterNodeLoadBalancerNatPoolName'))]"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "extensionProfile": {
              "extensions": [
                {
                  "type": "Microsoft.Compute/virtualMachines/extensions",
                  "name": "[concat(variables('vmssName'),'-LinuxCustomScriptExtension')]",
                  "properties": {
                    "publisher": "Microsoft.OSTCExtensions",
                    "type": "CustomScriptForLinux",
                    "typeHandlerVersion": "1.3",
                    "autoUpgradeMinorVersion": true,
                    "settings": {
                      "commandToExecute": "touch test1.txt"
                    }
                  }
                }
              ]
            }
          }
        },
        "dependsOn": [
          "[resourceId('Microsoft.Network/virtualNetworks/', variables('vnetName'))]",
          "[resourceId('Microsoft.Network/loadBalancers', variables('masterNodeLoadBalancerName'))]"
        ]
      },
      {
        "type": "Microsoft.Compute/virtualMachineScaleSets",
        "sku": {
          "name": "Standard_D4S_v3",
          "tier": "Standard",
          "capacity": 5
        },
        "name": "[concat(variables('vmssName'), '-data-node')]",
        "apiVersion": "2017-12-01",
        "location": "[resourceGroup().location]",
        "properties": {
          "upgradePolicy": {
            "mode": "Manual"
          },
          "virtualMachineProfile": {
            "storageProfile": {
              "osDisk": {
                "caching": "ReadWrite",
                "createOption": "FromImage"
              },
              "imageReference": {
                "publisher": "OpenLogic",
                "offer": "CentOS",
                "sku": "7.4",
                "version": "latest"
              }
            },
            "osProfile": {
              "computerNamePrefix": "[variables('vmssName')]",
              "adminUsername": "GEN-UNIQUE",
              "adminPassword": "GEN-SSH-PUB-KEY",
              "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]"
            },
            "networkProfile": {
              "networkInterfaceConfigurations": [
                {
                  "name": "nic",
                  "properties": {
                    "primary": true,
                    "ipConfigurations": [
                      {
                        "name": "ipconfig",
                        "properties": {
                          "subnet": {
                            "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('subnetData'))]"
                          },
                          "loadBalancerBackendAddressPools": [
                            {
                              "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('dataNodeLoadBalancerName'), variables('dataNodeLoadBalancerBackendName'))]"
                            }
                          ],
                          "loadBalancerInboundNatPools": [
                            {
                              "id": "[resourceId('Microsoft.Network/loadBalancers/inboundNatPools', variables('dataNodeLoadBalancerName'), variables('dataNodeLoadBalancerNatPoolName'))]"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "extensionProfile": {
              "extensions": [
                {
                  "type": "Microsoft.Compute/virtualMachines/extensions",
                  "name": "[concat(variables('vmssName'),'-LinuxCustomScriptExtension')]",
                  "properties": {
                    "publisher": "Microsoft.OSTCExtensions",
                    "type": "CustomScriptForLinux",
                    "typeHandlerVersion": "1.3",
                    "autoUpgradeMinorVersion": true,
                    "settings": {
                      "commandToExecute": "touch test2.txt"
                    }
                  }
                }
              ]
            }
          }
        },
        "dependsOn": [
          "[resourceId('Microsoft.Network/virtualNetworks/', variables('vnetName'))]",
          "[resourceId('Microsoft.Network/loadBalancers', variables('dataNodeLoadBalancerName'))]"
        ]
      }
    ],
    "\uff04schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#"
  }
}