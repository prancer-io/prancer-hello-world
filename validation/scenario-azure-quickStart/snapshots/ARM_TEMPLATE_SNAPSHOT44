{
  "structure": "filesystem",
  "error": null,
  "reference": "master",
  "contentType": "json",
  "source": "gitConnectorAzureQuickStart",
  "paths": [
    "/application-workloads/buffalo/gobuffalo/azuredeploy.json",
    "/application-workloads/buffalo/gobuffalo/azuredeploy.parameters.json"
  ],
  "timestamp": 1642962883753,
  "queryuser": null,
  "checksum": "99914b932bd37a50b983c5e7c90ae93b",
  "node": {
    "masterSnapshotId": "ARM_TEMPLATE_SNAPSHOT",
    "type": "arm",
    "collection": "armtemplate",
    "paths": [
      "/application-workloads/buffalo/gobuffalo/azuredeploy.json",
      "/application-workloads/buffalo/gobuffalo/azuredeploy.parameters.json"
    ],
    "snapshotId": "ARM_TEMPLATE_SNAPSHOT44",
    "status": "active",
    "validate": true,
    "resourceTypes": [
      "microsoft.web/sites",
      "microsoft.dbformysql/servers",
      "microsoft.web/serverfarms",
      "microsoft.dbforpostgresql/servers"
    ]
  },
  "snapshotId": "ARM_TEMPLATE_SNAPSHOT44",
  "collection": "armtemplate",
  "json": {
    "contentVersion": "1.0.0.0",
    "parameters": {
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "The Azure Region which should be targeted while provisioning the infrastructure described in this template."
        }
      },
      "imageName": {
        "type": "string",
        "defaultValue": "appsvc/sample-hello-world:latest",
        "metadata": {
          "description": "The image which defines the application to be hosted in Azure."
        }
      },
      "name": {
        "type": "string",
        "defaultValue": "[concat('site', uniqueString(resourceGroup().id, deployment().name))]",
        "metadata": {
          "description": "A unique name to identify the site, and its relate assets once it is created."
        }
      },
      "database": {
        "type": "string",
        "defaultValue": "postgresql",
        "allowedValues": [
          "none",
          "postgresql",
          "mysql"
        ],
        "metadata": {
          "description": "The flavor of database that should be deployed alongside this application."
        }
      },
      "databaseName": {
        "type": "string",
        "defaultValue": "buffalo_development",
        "metadata": {
          "description": "The name that will identify the database which is created, should one be created."
        }
      },
      "databaseAdministratorLogin": {
        "type": "string",
        "defaultValue": "",
        "metadata": {
          "description": "The user handle for the administrator of the database to be created."
        },
        "value": "GEN-UNIQUE"
      },
      "databaseAdministratorLoginPassword": {
        "type": "SecureString",
        "defaultValue": "",
        "metadata": {
          "description": "The password for the administrator of the database to be created."
        },
        "value": "GEN-PASSWORD"
      },
      "dockerRegistryAccess": {
        "type": "string",
        "defaultValue": "public",
        "allowedValues": [
          "public",
          "private"
        ],
        "metadata": {
          "description": "Denotes whether the image selected lives in a public or private Docker registry."
        }
      },
      "dockerRegistryServerURL": {
        "type": "string",
        "defaultValue": "",
        "metadata": {
          "description": "The url of the Docker registry which hosts the repository being used to host the image for your site."
        }
      },
      "dockerRegistryServerUsername": {
        "type": "string",
        "defaultValue": "",
        "metadata": {
          "description": "The user handle used to authenticate against the private Docker registry, if applicable."
        }
      },
      "dockerRegistryServerPassword": {
        "type": "SecureString",
        "defaultValue": "",
        "metadata": {
          "description": "The password used to authenticate against the private Docker registry, if applicable."
        }
      }
    },
    "variables": {
      "hostingPlanName": "hostingPlan-[concat('site', uniqueString(resourceGroup().id, deployment().name))]",
      "postgresqlName": "[concat('site', uniqueString(resourceGroup().id, deployment().name))]-postgresql",
      "mysqlName": "[concat('site', uniqueString(resourceGroup().id, deployment().name))]-mysql",
      "appSettingsPublicRegistry": [
        {
          "name": "WEBSITES_ENABLE_APP_SERVICE_STORAGE",
          "value": "false"
        }
      ],
      "appSettingsPrivateRegistry": [
        {
          "name": "WEBSITES_ENABLE_APP_SERVICE_STORAGE",
          "value": "false"
        },
        {
          "name": "DOCKER_REGISTRY_SERVER_URL",
          "value": ""
        },
        {
          "name": "DOCKER_REGISTRY_SERVER_USERNAME",
          "value": ""
        },
        {
          "name": "DOCKER_REGISTRY_SERVER_PASSWORD",
          "value": ""
        }
      ]
    },
    "resources": [
      {
        "type": "Microsoft.Web/sites",
        "name": "[concat('site', uniqueString(resourceGroup().id, deployment().name))]",
        "apiVersion": "2018-02-01",
        "location": "[resourceGroup().location]",
        "tags": {
          "[concat('hidden-related:', subscription().id, '/resourcegroups/', resourceGroup().name, '/providers/Microsoft.Web/serverfarms/', variables('hostingPlanName'))]": "empty",
          "gobuffalo": "empty"
        },
        "properties": {
          "name": "[concat('site', uniqueString(resourceGroup().id, deployment().name))]",
          "siteConfig": {
            "appSettings": "[if(equals(parameters('dockerRegistryAccess'), 'private'), variables('appSettingsPrivateRegistry'), variables('appSettingsPublicRegistry'))]",
            "connectionStrings": [
              {
                "name": "DATABASE_URL",
                "connectionString": "[if(equals(parameters('database'), 'postgresql'), concat('postgres://', parameters('databaseAdministratorLogin'), '@', variables('postgresqlName'),':', parameters('databaseAdministratorLoginPassword'), '@', reference(resourceId('Microsoft.DBforPostgreSQL/servers',variables('postgresqlName'))).fullyQualifiedDomainName, ':5432/', parameters('databaseName')), if(equals(parameters('database'), 'mysql'), concat('mysql://', parameters('databaseAdministratorLogin'), '@', variables('mysqlName'), ':', parameters('databaseAdministratorLoginPassword'), '@tcp(', reference(resourceId('Microsoft.DBforMySQL/servers',variables('mysqlName'))).fullyQualifiedDomainName , ':3306/', parameters('databaseName'), '?allowNativePasswords=true'),'not applicable'))]",
                "type": "[if(equals(parameters('database'), 'mysql'), 'mysql', 'custom')]"
              }
            ],
            "appCommandLine": "",
            "linuxFxVersion": "DOCKER|appsvc/sample-hello-world:latest"
          },
          "serverFarmId": "Microsoft.Web/serverfarms/hostingPlan-[concat('site', uniqueString(resourceGroup().id, deployment().name))]",
          "hostingEnvironment": ""
        },
        "dependsOn": [
          "[variables('hostingPlanName')]",
          "[variables('postgresqlName')]",
          "[variables('mysqlName')]"
        ]
      },
      {
        "type": "Microsoft.Web/serverfarms",
        "sku": {
          "Tier": "Basic",
          "Name": "B1"
        },
        "kind": "linux",
        "name": "hostingPlan-[concat('site', uniqueString(resourceGroup().id, deployment().name))]",
        "apiVersion": "2016-09-01",
        "location": "[resourceGroup().location]",
        "properties": {
          "name": "hostingPlan-[concat('site', uniqueString(resourceGroup().id, deployment().name))]",
          "workerSizeId": "0",
          "reserved": true,
          "numberOfWorkers": "1",
          "hostingEnvironment": ""
        }
      },
      {
        "condition": false,
        "type": "Microsoft.DBforPostgreSQL/servers",
        "sku": {
          "name": "B_Gen5_1",
          "family": "Gen5",
          "capacity": "",
          "size": "5120",
          "tier": "Basic"
        },
        "kind": "",
        "name": "[variables('postgresqlName')]",
        "apiVersion": "2017-12-01-preview",
        "location": "[resourceGroup().location]",
        "properties": {
          "version": "9.6",
          "administratorLogin": "GEN-UNIQUE",
          "administratorLoginPassword": "GEN-PASSWORD",
          "sslEnforcement": "Disabled"
        },
        "resources": [
          {
            "condition": false,
            "type": "firewallRules",
            "apiVersion": "2017-12-01-preview",
            "dependsOn": [
              "[variables('postgresqlName')]"
            ],
            "location": "[resourceGroup().location]",
            "name": "AllowAzureIPs",
            "properties": {
              "startIpAddress": "0.0.0.0",
              "endIpAddress": "0.0.0.0"
            }
          }
        ]
      },
      {
        "condition": false,
        "type": "Microsoft.DBforMySQL/servers",
        "sku": {
          "name": "B_Gen5_2",
          "tier": "Basic",
          "capacity": 2,
          "size": 5120,
          "family": "Gen5"
        },
        "kind": "",
        "name": "[variables('mysqlName')]",
        "apiVersion": "2017-12-01-preview",
        "location": "[resourceGroup().location]",
        "properties": {
          "version": "5.7",
          "administratorLogin": "GEN-UNIQUE",
          "administratorLoginPassword": "GEN-PASSWORD",
          "storageProfile": {
            "storageMB": 5120,
            "backupRetentionDays": 7,
            "geoRedundantBackup": "Disabled"
          },
          "sslEnforcement": "Disabled"
        },
        "resources": [
          {
            "condition": false,
            "type": "firewallRules",
            "apiVersion": "2017-12-01-preview",
            "dependsOn": [
              "[variables('mysqlName')]"
            ],
            "location": "[resourceGroup().location]",
            "name": "AllowAzureIPs",
            "properties": {
              "startIpAddress": "0.0.0.0",
              "endIpAddress": "0.0.0.0"
            }
          }
        ]
      }
    ],
    "\uff04schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#"
  }
}