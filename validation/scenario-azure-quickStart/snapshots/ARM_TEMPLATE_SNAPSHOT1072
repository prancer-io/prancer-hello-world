{
  "structure": "filesystem",
  "error": null,
  "reference": "master",
  "contentType": "json",
  "source": "gitConnectorAzureQuickStart",
  "paths": [
    "/quickstarts/microsoft.compute/vm-different-rg-vnet/azuredeploy.json",
    "/quickstarts/microsoft.compute/vm-different-rg-vnet/azuredeploy.parameters.json"
  ],
  "timestamp": 1642962904165,
  "queryuser": null,
  "checksum": "99914b932bd37a50b983c5e7c90ae93b",
  "node": {
    "masterSnapshotId": "ARM_TEMPLATE_SNAPSHOT",
    "type": "arm",
    "collection": "armtemplate",
    "paths": [
      "/quickstarts/microsoft.compute/vm-different-rg-vnet/azuredeploy.json",
      "/quickstarts/microsoft.compute/vm-different-rg-vnet/azuredeploy.parameters.json"
    ],
    "snapshotId": "ARM_TEMPLATE_SNAPSHOT1072",
    "status": "active",
    "validate": true,
    "resourceTypes": [
      "microsoft.network/publicipaddresses",
      "microsoft.storage/storageaccounts",
      "microsoft.network/networkinterfaces",
      "microsoft.compute/virtualmachines"
    ]
  },
  "snapshotId": "ARM_TEMPLATE_SNAPSHOT1072",
  "collection": "armtemplate",
  "json": {
    "contentVersion": "1.0.0.0",
    "parameters": {
      "newStorageAccountName": {
        "type": "string",
        "metadata": {
          "description": "Name of new storage account"
        },
        "value": "GEN-UNIQUE"
      },
      "storageAccountType": {
        "type": "string",
        "defaultValue": "Standard_LRS",
        "allowedValues": [
          "Standard_LRS",
          "Standard_GRS"
        ],
        "metadata": {
          "description": "Type of storage account"
        }
      },
      "publicIPName": {
        "type": "string",
        "metadata": {
          "description": "Name of Public IP"
        },
        "value": "GEN-UNIQUE"
      },
      "publicIPAddressType": {
        "type": "string",
        "defaultValue": "Dynamic",
        "allowedValues": [
          "Dynamic"
        ],
        "metadata": {
          "description": "Type of Public Address"
        }
      },
      "vmName": {
        "type": "string",
        "metadata": {
          "description": "Name of the VM"
        },
        "value": "GEN-UNIQUE-10"
      },
      "vmSize": {
        "type": "string",
        "defaultValue": "Standard_A1_v2",
        "metadata": {
          "description": "Size of the VM"
        }
      },
      "imagePublisher": {
        "type": "string",
        "defaultValue": "Canonical",
        "metadata": {
          "description": "Image Publisher"
        }
      },
      "imageOffer": {
        "type": "string",
        "defaultValue": "UbuntuServer",
        "metadata": {
          "description": "Image Offer"
        }
      },
      "imageSKU": {
        "type": "string",
        "defaultValue": "18.04-LTS",
        "allowedValues": [
          "14.04.5-LTS",
          "16.04-LTS",
          "18.04-LTS"
        ],
        "metadata": {
          "description": "Image SKU"
        },
        "value": "18.04-LTS"
      },
      "adminUsername": {
        "type": "string",
        "metadata": {
          "description": "VM Admin Username"
        },
        "value": "GEN-UNIQUE"
      },
      "virtualNetworkName": {
        "type": "string",
        "metadata": {
          "description": "VNET Name"
        },
        "value": "GET-PREREQ-virtualNetworkName"
      },
      "virtualNetworkResourceGroup": {
        "type": "string",
        "metadata": {
          "description": "Resource Group VNET is deployed in"
        },
        "value": "GET-PREREQ-virtualNetworkResourceGroup"
      },
      "subnet1Name": {
        "type": "string",
        "metadata": {
          "description": "Name of the subnet inside the VNET"
        },
        "value": "GET-PREREQ-subnet1Name"
      },
      "nicName": {
        "type": "string",
        "metadata": {
          "description": "Network Interface Name"
        },
        "value": "GEN-UNIQUE"
      },
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Location for all resources."
        }
      },
      "authenticationType": {
        "type": "string",
        "defaultValue": "sshPublicKey",
        "allowedValues": [
          "sshPublicKey",
          "password"
        ],
        "metadata": {
          "description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."
        }
      },
      "adminPasswordOrKey": {
        "type": "securestring",
        "metadata": {
          "description": "SSH Key or password for the Virtual Machine. SSH key is recommended."
        },
        "value": "GEN-SSH-PUB-KEY"
      }
    },
    "variables": {
      "linuxConfiguration": {
        "disablePasswordAuthentication": true,
        "ssh": {
          "publicKeys": [
            {
              "path": "/home/GEN-UNIQUE/.ssh/authorized_keys",
              "keyData": "GEN-SSH-PUB-KEY"
            }
          ]
        }
      }
    },
    "resources": [
      {
        "type": "Microsoft.Storage/storageAccounts",
        "name": "GEN-UNIQUE",
        "apiVersion": "2019-06-01",
        "location": "[resourceGroup().location]",
        "sku": {
          "name": "Standard_LRS"
        },
        "kind": "StorageV2"
      },
      {
        "apiVersion": "2020-05-01",
        "type": "Microsoft.Network/publicIPAddresses",
        "name": "GEN-UNIQUE",
        "location": "[resourceGroup().location]",
        "properties": {
          "publicIPAllocationMethod": "Dynamic"
        }
      },
      {
        "apiVersion": "2020-05-01",
        "type": "Microsoft.Network/networkInterfaces",
        "name": "GEN-UNIQUE",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "Microsoft.Network/publicIPAddresses//GEN-UNIQUE"
        ],
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipconfig1",
              "properties": {
                "privateIPAllocationMethod": "Dynamic",
                "publicIPAddress": {
                  "id": "Microsoft.Network/publicIPAddresses/GEN-UNIQUE"
                },
                "subnet": {
                  "id": "GET-PREREQ-virtualNetworkResourceGroup/Microsoft.Network/virtualNetworks/subnets/GET-PREREQ-virtualNetworkName/GET-PREREQ-subnet1Name"
                }
              }
            }
          ]
        }
      },
      {
        "apiVersion": "2020-06-01",
        "type": "Microsoft.Compute/virtualMachines",
        "name": "GEN-UNIQUE-10",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "Microsoft.Storage/storageAccounts//GEN-UNIQUE",
          "Microsoft.Network/networkInterfaces//GEN-UNIQUE"
        ],
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_A1_v2"
          },
          "osProfile": {
            "computerName": "GEN-UNIQUE-10",
            "adminUsername": "GEN-UNIQUE",
            "adminPassword": "GEN-SSH-PUB-KEY",
            "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]"
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "Canonical",
              "offer": "UbuntuServer",
              "sku": "18.04-LTS",
              "version": "latest"
            },
            "osDisk": {
              "name": "GEN-UNIQUE-10_OSDisk",
              "caching": "ReadWrite",
              "createOption": "FromImage",
              "managedDisk": {
                "storageAccountType": "StandardSSD_LRS"
              }
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "Microsoft.Network/networkInterfaces/GEN-UNIQUE"
              }
            ]
          },
          "diagnosticsProfile": {
            "bootDiagnostics": {
              "enabled": true,
              "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts', toLower(parameters('newStorageAccountName')))).primaryEndpoints.blob]"
            }
          }
        }
      }
    ],
    "\uff04schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#"
  }
}