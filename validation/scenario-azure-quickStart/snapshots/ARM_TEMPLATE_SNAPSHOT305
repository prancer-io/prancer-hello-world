{
  "structure": "filesystem",
  "error": null,
  "reference": "master",
  "contentType": "json",
  "source": "gitConnectorAzureQuickStart",
  "paths": [
    "/application-workloads/moodle/moodle-scalable-cluster-ubuntu/azuredeploy.json",
    "/application-workloads/moodle/moodle-scalable-cluster-ubuntu/azuredeploy.parameters.json"
  ],
  "timestamp": 1642962892109,
  "queryuser": null,
  "checksum": "99914b932bd37a50b983c5e7c90ae93b",
  "node": {
    "masterSnapshotId": "ARM_TEMPLATE_SNAPSHOT",
    "type": "arm",
    "collection": "armtemplate",
    "paths": [
      "/application-workloads/moodle/moodle-scalable-cluster-ubuntu/azuredeploy.json",
      "/application-workloads/moodle/moodle-scalable-cluster-ubuntu/azuredeploy.parameters.json"
    ],
    "snapshotId": "ARM_TEMPLATE_SNAPSHOT305",
    "status": "active",
    "validate": true,
    "resourceTypes": [
      "microsoft.resources/deployments"
    ]
  },
  "snapshotId": "ARM_TEMPLATE_SNAPSHOT305",
  "collection": "armtemplate",
  "json": {
    "contentVersion": "1.0.0.0",
    "parameters": {
      "_artifactsLocation": {
        "type": "string",
        "metadata": {
          "description": "The base URI where artifacts required by this template are located including a trailing '/'"
        },
        "defaultValue": "[deployment().properties.templateLink.uri]"
      },
      "_artifactsLocationSasToken": {
        "type": "securestring",
        "metadata": {
          "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated. Use the defaultValue if the staging location is not secured."
        },
        "defaultValue": ""
      },
      "applyScriptsSwitch": {
        "defaultValue": true,
        "metadata": {
          "description": "Switch to process or bypass all scripts/extensions"
        },
        "type": "bool"
      },
      "azureBackupSwitch": {
        "defaultValue": false,
        "metadata": {
          "description": "Switch to configure AzureBackup and enlist VM's"
        },
        "type": "bool",
        "value": true
      },
      "vnetGwDeploySwitch": {
        "defaultValue": false,
        "metadata": {
          "description": "Switch to deploy a virtual network gateway or not"
        },
        "type": "bool"
      },
      "installO365pluginsSwitch": {
        "defaultValue": false,
        "metadata": {
          "description": "Switch to install Moodle Office 365 plugins"
        },
        "type": "bool"
      },
      "installElasticSearchSwitch": {
        "defaultValue": false,
        "metadata": {
          "description": "Switch to install Moodle ElasticSearch plugins & VMs"
        },
        "type": "bool"
      },
      "storageAccountType": {
        "defaultValue": "Standard_LRS",
        "allowedValues": [
          "Standard_LRS",
          "Standard_GRS",
          "Standard_ZRS"
        ],
        "metadata": {
          "description": "Storage Account type"
        },
        "type": "string",
        "value": "Standard_LRS"
      },
      "dbServerType": {
        "defaultValue": "mysql",
        "allowedValues": [
          "mysql",
          "postgres"
        ],
        "metadata": {
          "description": "Database type"
        },
        "type": "string",
        "value": "mysql"
      },
      "fileServerType": {
        "defaultValue": "gluster",
        "allowedValues": [
          "gluster",
          "nfs"
        ],
        "metadata": {
          "description": "File server type: GlusterFS, Azure Files (CIFS)--disabled due to too slow perf, NFS--not highly available"
        },
        "type": "string"
      },
      "webServerType": {
        "defaultValue": "apache",
        "allowedValues": [
          "apache",
          "nginx"
        ],
        "metadata": {
          "description": "Web server type"
        },
        "type": "string",
        "value": "apache"
      },
      "controllerVmSku": {
        "defaultValue": "Standard_D2s_v3",
        "metadata": {
          "description": "VM size for the controller node"
        },
        "type": "string",
        "value": "Standard_D2s_v3"
      },
      "autoscaleVmSku": {
        "defaultValue": "Standard_D2s_v3",
        "metadata": {
          "description": "VM size for autoscaled nodes"
        },
        "type": "string",
        "value": "Standard_D2s_v3"
      },
      "autoscaleVmCount": {
        "defaultValue": 10,
        "metadata": {
          "description": "Maximum number of autoscaled nodes"
        },
        "type": "int",
        "value": 10
      },
      "elasticVmSku": {
        "defaultValue": "Standard_D2s_v3",
        "metadata": {
          "description": "VM size for the elastic search nodes"
        },
        "type": "string",
        "value": "Standard_D2s_v3"
      },
      "firewallRuleName": {
        "defaultValue": "open-to-the-world",
        "metadata": {
          "description": "Database firewall rule name"
        },
        "type": "string"
      },
      "gatewaySubnet": {
        "allowedValues": [
          "GatewaySubnet"
        ],
        "defaultValue": "GatewaySubnet",
        "metadata": {
          "description": "name for Virtual network gateway subnet"
        },
        "type": "string"
      },
      "gatewayType": {
        "allowedValues": [
          "Vpn",
          "ER"
        ],
        "defaultValue": "Vpn",
        "metadata": {
          "description": "Virtual network gateway type"
        },
        "type": "string"
      },
      "glusterVmSku": {
        "defaultValue": "Standard_D2s_v3",
        "metadata": {
          "description": "VM size for the gluster nodes"
        },
        "type": "string",
        "value": "Standard_D2s_v3"
      },
      "fileServerDiskSize": {
        "defaultValue": 127,
        "metadata": {
          "description": "Size per disk for gluster nodes or nfs server"
        },
        "type": "int",
        "value": 127
      },
      "fileServerDiskCount": {
        "defaultValue": 4,
        "minValue": 2,
        "maxValue": 8,
        "metadata": {
          "description": "Number of disks in raid0 per gluster node or nfs server"
        },
        "type": "int",
        "value": 4
      },
      "moodleVersion": {
        "allowedValues": [
          "MOODLE_34_STABLE",
          "MOODLE_33_STABLE",
          "MOODLE_32_STABLE",
          "MOODLE_31_STABLE",
          "MOODLE_30_STABLE",
          "MOODLE_29_STABLE"
        ],
        "defaultValue": "MOODLE_34_STABLE",
        "metadata": {
          "description": "The Moodle version you want to install."
        },
        "type": "string",
        "value": "MOODLE_34_STABLE"
      },
      "dbLogin": {
        "defaultValue": "dbadmin",
        "metadata": {
          "description": "Database admin username"
        },
        "type": "string"
      },
      "siteURL": {
        "defaultValue": "www.example.org",
        "metadata": {
          "description": "URL for Moodle site"
        },
        "type": "string",
        "value": "www.example.org"
      },
      "skuCapacityDTU": {
        "metadata": {
          "description": "MySql/Postgresql database trasaction units"
        },
        "type": "int",
        "value": 2
      },
      "skuFamily": {
        "defaultValue": "SkuFamily",
        "metadata": {
          "description": "MySql/Postgresql sku family"
        },
        "type": "string",
        "value": "Gen5"
      },
      "skuName": {
        "metadata": {
          "description": "MySql/Postgresql sku name"
        },
        "type": "string",
        "value": "B_Gen5_2"
      },
      "skuSizeMB": {
        "defaultValue": 51200,
        "metadata": {
          "description": "MySql/Postgresql sku size in MB. For Basic tier, minimum 50GB, increased by 125GB up to 1TB. For Standard tier, minimum 125GB, increase by 125GB up to 1TB"
        },
        "type": "int",
        "value": 51200
      },
      "skuTier": {
        "allowedValues": [
          "Basic",
          "Standard"
        ],
        "defaultValue": "Basic",
        "metadata": {
          "description": "MySql/Postgresql sku tier"
        },
        "type": "string",
        "value": "Basic"
      },
      "sshPublicKey": {
        "metadata": {
          "description": "ssh public key"
        },
        "type": "string",
        "value": "GEN-SSH-PUB-KEY"
      },
      "sshUsername": {
        "defaultValue": "azureadmin",
        "metadata": {
          "description": "ssh user name"
        },
        "type": "string"
      },
      "sslEnforcement": {
        "allowedValues": [
          "Disabled",
          "Enabled"
        ],
        "defaultValue": "Disabled",
        "metadata": {
          "description": "MySql/Postgresql SSL connection"
        },
        "type": "string"
      },
      "postgresVersion": {
        "allowedValues": [
          "9.5",
          "9.6"
        ],
        "defaultValue": "9.6",
        "metadata": {
          "description": "Postgresql version"
        },
        "type": "string",
        "value": "9.6"
      },
      "mysqlVersion": {
        "allowedValues": [
          "5.6",
          "5.7"
        ],
        "defaultValue": "5.7",
        "metadata": {
          "description": "Mysql version"
        },
        "type": "string",
        "value": "5.7"
      },
      "vNetAddressSpace": {
        "defaultValue": "172.31.0.0",
        "metadata": {
          "description": "Address range for the Moodle virtual network - presumed /16 - further subneting during vnet creation"
        },
        "type": "string",
        "value": "172.31.0.0"
      },
      "vpnType": {
        "allowedValues": [
          "RouteBased",
          "PolicyBased"
        ],
        "defaultValue": "RouteBased",
        "metadata": {
          "description": "Virtual network gateway vpn type"
        },
        "type": "string"
      },
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Location for all resources."
        }
      }
    },
    "resources": [
      {
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2020-10-01",
        "name": "pid-738e3eec-68d4-4667-8377-c05c77c21f1b",
        "properties": {
          "mode": "Incremental",
          "template": {
            "contentVersion": "1.0.0.0",
            "resources": [],
            "\uff04schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#"
          }
        }
      },
      {
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2020-10-01",
        "name": "dbTemplate",
        "properties": {
          "mode": "Incremental",
          "parameters": {
            "moodleCommon": {
              "value": {
                "baseTemplateUrl": "[uri(parameters('_artifactsLocation'), concat('nested/'))]",
                "scriptLocation": "[uri(parameters('_artifactsLocation'), concat('scripts/'))]",
                "applyScriptsSwitch": true,
                "autoscaleVmCount": 10,
                "autoscaleVmSku": "Standard_D2s_v3",
                "azureBackupSwitch": true,
                "artifactsSasToken": "",
                "commonFunctionsScriptUri": "[uri(parameters('_artifactsLocation'), concat('scripts/helper_functions.sh',parameters('_artifactsLocationSasToken')))]",
                "controllerVmSku": "Standard_D2s_v3",
                "dbLogin": "dbadmin",
                "dbLoginPassword": "[concat(substring(uniqueString(resourceGroup().id, deployment().name), 2, 11), '*7', toUpper('pfiwb'))]",
                "dbServerType": "mysql",
                "dbUsername": "dbadmin@mysql-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "elasticVmSku": "Standard_D2s_v3",
                "elasticAvailabilitySetName": "elastic-avset-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "elasticClusterName": "es-cluster-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "elasticNicName1": "elastic-vm-nic-01-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "elasticNicName2": "elastic-vm-nic-02-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "elasticNicName3": "elastic-vm-nic-03-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "elasticScriptFilename": "install_elastic.sh",
                "elasticVm1IP": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),4)), '.20')]",
                "elasticVm2IP": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),4)), '.21')]",
                "elasticVm3IP": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),4)), '.22')]",
                "elasticVmName": "elastic-vm-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "elasticVmName1": "elastic-vm-01-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "elasticVmName2": "elastic-vm-02-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "elasticVmName3": "elastic-vm-03-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "extBeName": "lb-backend-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "extFeName": "lb-frontend-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "extNatPool": "lb-natpool-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "extProbe": "lb-probe-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "fileServerDiskCount": 4,
                "fileServerDiskSize": 127,
                "fileServerType": "gluster",
                "firewallRuleName": "open-to-the-world",
                "gatewayName": "vnet-gateway-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "gatewayPublicIPName": "vnet-gw-ip-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "gatewaySubnet": "GatewaySubnet",
                "gatewaySubnetPrefix": "[concat(variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),2)))]",
                "gatewaySubnetRange": "[concat(variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),2)), '.0/24')]",
                "gatewayType": "Vpn",
                "gfsNameRoot": "gluster-vm-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "gfxAvailabilitySetName": "gluster-avset-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "glusterScriptFilename": "install_gluster.sh",
                "glusterVmCount": 2,
                "glusterVmSku": "Standard_D2s_v3",
                "installO365pluginsSwitch": false,
                "installElasticSearchSwitch": false,
                "jboxNicName": "jumpbox-vm-nic-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "jboxNsgName": "jumpbox-nsg-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "jboxPipName": "jumpbox-pubip-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "jboxVmName": "jumpbox-vm-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "lbDns": "lb-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)].[resourceGroup().location].cloudapp.azure.com",
                "lbName": "lb-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "lbPipName": "lb-pubip-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "moodleAdminPass": "[concat(toUpper('xl'), substring(uniqueString(resourceGroup().id, deployment().name), 6, 7),',1*8')]",
                "moodleDbName": "moodle",
                "moodleDbPass": "[concat('9#36^', substring(uniqueString(resourceGroup().id, deployment().name), 5, 8), toUpper('ercq'))]",
                "moodleDbUser": "moodle",
                "moodleDbUserAzure": "moodle@mysql-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "moodleInstallScriptFilename": "install_moodle.sh",
                "moodleVersion": "MOODLE_34_STABLE",
                "mysqlVersion": "5.7",
                "osType": {
                  "offer": "UbuntuServer",
                  "publisher": "Canonical",
                  "sku": "16.04-LTS",
                  "version": "latest"
                },
                "policyName": "policy-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "postgresVersion": "9.6",
                "redisCacheName": "redis-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "redisDns": "redis-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)].redis.cache.windows.net",
                "resourcesPrefix": "[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "serverName": "mysql-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "siteURL": "[if(or(empty(parameters('siteURL')), equals(parameters('siteURL'), 'www.example.org')), concat('lb-',variables('resourceprefix'),'.',parameters('location'),'.cloudapp.azure.com'), parameters('siteURL'))]",
                "skuCapacityDTU": 2,
                "skuFamily": "Gen5",
                "skuName": "B_Gen5_2",
                "skuSizeMB": 51200,
                "skuTier": "Basic",
                "sshPublicKey": "GEN-SSH-PUB-KEY",
                "sshUsername": "azureadmin",
                "sslEnforcement": "Disabled",
                "storageAccountName": "[tolower(concat('abs',variables('resourceprefix')))]",
                "storageAccountType": "Standard_LRS",
                "subnetElastic": "elastic-subnet-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "subnetElasticPrefix": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),4)))]",
                "subnetElasticRange": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),4)), '.0/24')]",
                "subnetRedis": "redis-subnet-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "subnetRedisPrefix": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),3)))]",
                "subnetRedisRange": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),3)), '.0/24')]",
                "subnetSan": "san-subnet-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "subnetSanPrefix": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),1)))]",
                "subnetSanRange": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),1)), '.0/24')]",
                "subnetWeb": "web-subnet-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "subnetWebPrefix": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),0)))]",
                "subnetWebRange": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),0)), '.0/24')]",
                "vNetAddressSpace": "172.31.0.0",
                "vaultName": "vault-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "vmssName": "vmss-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "vmssdStorageAccounttName": "[concat('vmss',uniqueString(resourceGroup().id))]",
                "vnetGwDeploySwitch": false,
                "vnetName": "vnet-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "vpnType": "RouteBased",
                "webServerSetupScriptFilename": "setup_webserver.sh",
                "webServerType": "apache"
              }
            },
            "location": {
              "value": "[resourceGroup().location]"
            }
          },
          "templateLink": {
            "uri": "(moodleCommon).baseTemplateUrlmysql.json parameters('_artifactsLocationSasToken')"
          }
        }
      },
      {
        "condition": true,
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2020-10-01",
        "name": "recoveryTemplate",
        "properties": {
          "mode": "Incremental",
          "parameters": {
            "moodleCommon": {
              "value": {
                "baseTemplateUrl": "[uri(parameters('_artifactsLocation'), concat('nested/'))]",
                "scriptLocation": "[uri(parameters('_artifactsLocation'), concat('scripts/'))]",
                "applyScriptsSwitch": true,
                "autoscaleVmCount": 10,
                "autoscaleVmSku": "Standard_D2s_v3",
                "azureBackupSwitch": true,
                "artifactsSasToken": "",
                "commonFunctionsScriptUri": "[uri(parameters('_artifactsLocation'), concat('scripts/helper_functions.sh',parameters('_artifactsLocationSasToken')))]",
                "controllerVmSku": "Standard_D2s_v3",
                "dbLogin": "dbadmin",
                "dbLoginPassword": "[concat(substring(uniqueString(resourceGroup().id, deployment().name), 2, 11), '*7', toUpper('pfiwb'))]",
                "dbServerType": "mysql",
                "dbUsername": "dbadmin@mysql-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "elasticVmSku": "Standard_D2s_v3",
                "elasticAvailabilitySetName": "elastic-avset-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "elasticClusterName": "es-cluster-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "elasticNicName1": "elastic-vm-nic-01-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "elasticNicName2": "elastic-vm-nic-02-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "elasticNicName3": "elastic-vm-nic-03-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "elasticScriptFilename": "install_elastic.sh",
                "elasticVm1IP": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),4)), '.20')]",
                "elasticVm2IP": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),4)), '.21')]",
                "elasticVm3IP": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),4)), '.22')]",
                "elasticVmName": "elastic-vm-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "elasticVmName1": "elastic-vm-01-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "elasticVmName2": "elastic-vm-02-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "elasticVmName3": "elastic-vm-03-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "extBeName": "lb-backend-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "extFeName": "lb-frontend-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "extNatPool": "lb-natpool-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "extProbe": "lb-probe-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "fileServerDiskCount": 4,
                "fileServerDiskSize": 127,
                "fileServerType": "gluster",
                "firewallRuleName": "open-to-the-world",
                "gatewayName": "vnet-gateway-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "gatewayPublicIPName": "vnet-gw-ip-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "gatewaySubnet": "GatewaySubnet",
                "gatewaySubnetPrefix": "[concat(variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),2)))]",
                "gatewaySubnetRange": "[concat(variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),2)), '.0/24')]",
                "gatewayType": "Vpn",
                "gfsNameRoot": "gluster-vm-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "gfxAvailabilitySetName": "gluster-avset-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "glusterScriptFilename": "install_gluster.sh",
                "glusterVmCount": 2,
                "glusterVmSku": "Standard_D2s_v3",
                "installO365pluginsSwitch": false,
                "installElasticSearchSwitch": false,
                "jboxNicName": "jumpbox-vm-nic-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "jboxNsgName": "jumpbox-nsg-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "jboxPipName": "jumpbox-pubip-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "jboxVmName": "jumpbox-vm-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "lbDns": "lb-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)].[resourceGroup().location].cloudapp.azure.com",
                "lbName": "lb-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "lbPipName": "lb-pubip-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "moodleAdminPass": "[concat(toUpper('xl'), substring(uniqueString(resourceGroup().id, deployment().name), 6, 7),',1*8')]",
                "moodleDbName": "moodle",
                "moodleDbPass": "[concat('9#36^', substring(uniqueString(resourceGroup().id, deployment().name), 5, 8), toUpper('ercq'))]",
                "moodleDbUser": "moodle",
                "moodleDbUserAzure": "moodle@mysql-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "moodleInstallScriptFilename": "install_moodle.sh",
                "moodleVersion": "MOODLE_34_STABLE",
                "mysqlVersion": "5.7",
                "osType": {
                  "offer": "UbuntuServer",
                  "publisher": "Canonical",
                  "sku": "16.04-LTS",
                  "version": "latest"
                },
                "policyName": "policy-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "postgresVersion": "9.6",
                "redisCacheName": "redis-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "redisDns": "redis-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)].redis.cache.windows.net",
                "resourcesPrefix": "[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "serverName": "mysql-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "siteURL": "[if(or(empty(parameters('siteURL')), equals(parameters('siteURL'), 'www.example.org')), concat('lb-',variables('resourceprefix'),'.',parameters('location'),'.cloudapp.azure.com'), parameters('siteURL'))]",
                "skuCapacityDTU": 2,
                "skuFamily": "Gen5",
                "skuName": "B_Gen5_2",
                "skuSizeMB": 51200,
                "skuTier": "Basic",
                "sshPublicKey": "GEN-SSH-PUB-KEY",
                "sshUsername": "azureadmin",
                "sslEnforcement": "Disabled",
                "storageAccountName": "[tolower(concat('abs',variables('resourceprefix')))]",
                "storageAccountType": "Standard_LRS",
                "subnetElastic": "elastic-subnet-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "subnetElasticPrefix": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),4)))]",
                "subnetElasticRange": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),4)), '.0/24')]",
                "subnetRedis": "redis-subnet-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "subnetRedisPrefix": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),3)))]",
                "subnetRedisRange": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),3)), '.0/24')]",
                "subnetSan": "san-subnet-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "subnetSanPrefix": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),1)))]",
                "subnetSanRange": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),1)), '.0/24')]",
                "subnetWeb": "web-subnet-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "subnetWebPrefix": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),0)))]",
                "subnetWebRange": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),0)), '.0/24')]",
                "vNetAddressSpace": "172.31.0.0",
                "vaultName": "vault-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "vmssName": "vmss-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "vmssdStorageAccounttName": "[concat('vmss',uniqueString(resourceGroup().id))]",
                "vnetGwDeploySwitch": false,
                "vnetName": "vnet-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "vpnType": "RouteBased",
                "webServerSetupScriptFilename": "setup_webserver.sh",
                "webServerType": "apache"
              }
            },
            "location": {
              "value": "[resourceGroup().location]"
            }
          },
          "templateLink": {
            "uri": "(moodleCommon).baseTemplateUrlrecoveryservices.jsonparameters('_artifactsLocationSasToken')"
          }
        }
      },
      {
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2020-10-01",
        "name": "redisTemplate",
        "dependsOn": [
          "Microsoft.Resources/deployments/networkTemplate"
        ],
        "properties": {
          "mode": "Incremental",
          "parameters": {
            "moodleCommon": {
              "value": {
                "baseTemplateUrl": "[uri(parameters('_artifactsLocation'), concat('nested/'))]",
                "scriptLocation": "[uri(parameters('_artifactsLocation'), concat('scripts/'))]",
                "applyScriptsSwitch": true,
                "autoscaleVmCount": 10,
                "autoscaleVmSku": "Standard_D2s_v3",
                "azureBackupSwitch": true,
                "artifactsSasToken": "",
                "commonFunctionsScriptUri": "[uri(parameters('_artifactsLocation'), concat('scripts/helper_functions.sh',parameters('_artifactsLocationSasToken')))]",
                "controllerVmSku": "Standard_D2s_v3",
                "dbLogin": "dbadmin",
                "dbLoginPassword": "[concat(substring(uniqueString(resourceGroup().id, deployment().name), 2, 11), '*7', toUpper('pfiwb'))]",
                "dbServerType": "mysql",
                "dbUsername": "dbadmin@mysql-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "elasticVmSku": "Standard_D2s_v3",
                "elasticAvailabilitySetName": "elastic-avset-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "elasticClusterName": "es-cluster-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "elasticNicName1": "elastic-vm-nic-01-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "elasticNicName2": "elastic-vm-nic-02-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "elasticNicName3": "elastic-vm-nic-03-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "elasticScriptFilename": "install_elastic.sh",
                "elasticVm1IP": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),4)), '.20')]",
                "elasticVm2IP": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),4)), '.21')]",
                "elasticVm3IP": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),4)), '.22')]",
                "elasticVmName": "elastic-vm-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "elasticVmName1": "elastic-vm-01-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "elasticVmName2": "elastic-vm-02-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "elasticVmName3": "elastic-vm-03-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "extBeName": "lb-backend-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "extFeName": "lb-frontend-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "extNatPool": "lb-natpool-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "extProbe": "lb-probe-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "fileServerDiskCount": 4,
                "fileServerDiskSize": 127,
                "fileServerType": "gluster",
                "firewallRuleName": "open-to-the-world",
                "gatewayName": "vnet-gateway-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "gatewayPublicIPName": "vnet-gw-ip-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "gatewaySubnet": "GatewaySubnet",
                "gatewaySubnetPrefix": "[concat(variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),2)))]",
                "gatewaySubnetRange": "[concat(variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),2)), '.0/24')]",
                "gatewayType": "Vpn",
                "gfsNameRoot": "gluster-vm-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "gfxAvailabilitySetName": "gluster-avset-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "glusterScriptFilename": "install_gluster.sh",
                "glusterVmCount": 2,
                "glusterVmSku": "Standard_D2s_v3",
                "installO365pluginsSwitch": false,
                "installElasticSearchSwitch": false,
                "jboxNicName": "jumpbox-vm-nic-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "jboxNsgName": "jumpbox-nsg-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "jboxPipName": "jumpbox-pubip-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "jboxVmName": "jumpbox-vm-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "lbDns": "lb-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)].[resourceGroup().location].cloudapp.azure.com",
                "lbName": "lb-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "lbPipName": "lb-pubip-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "moodleAdminPass": "[concat(toUpper('xl'), substring(uniqueString(resourceGroup().id, deployment().name), 6, 7),',1*8')]",
                "moodleDbName": "moodle",
                "moodleDbPass": "[concat('9#36^', substring(uniqueString(resourceGroup().id, deployment().name), 5, 8), toUpper('ercq'))]",
                "moodleDbUser": "moodle",
                "moodleDbUserAzure": "moodle@mysql-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "moodleInstallScriptFilename": "install_moodle.sh",
                "moodleVersion": "MOODLE_34_STABLE",
                "mysqlVersion": "5.7",
                "osType": {
                  "offer": "UbuntuServer",
                  "publisher": "Canonical",
                  "sku": "16.04-LTS",
                  "version": "latest"
                },
                "policyName": "policy-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "postgresVersion": "9.6",
                "redisCacheName": "redis-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "redisDns": "redis-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)].redis.cache.windows.net",
                "resourcesPrefix": "[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "serverName": "mysql-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "siteURL": "[if(or(empty(parameters('siteURL')), equals(parameters('siteURL'), 'www.example.org')), concat('lb-',variables('resourceprefix'),'.',parameters('location'),'.cloudapp.azure.com'), parameters('siteURL'))]",
                "skuCapacityDTU": 2,
                "skuFamily": "Gen5",
                "skuName": "B_Gen5_2",
                "skuSizeMB": 51200,
                "skuTier": "Basic",
                "sshPublicKey": "GEN-SSH-PUB-KEY",
                "sshUsername": "azureadmin",
                "sslEnforcement": "Disabled",
                "storageAccountName": "[tolower(concat('abs',variables('resourceprefix')))]",
                "storageAccountType": "Standard_LRS",
                "subnetElastic": "elastic-subnet-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "subnetElasticPrefix": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),4)))]",
                "subnetElasticRange": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),4)), '.0/24')]",
                "subnetRedis": "redis-subnet-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "subnetRedisPrefix": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),3)))]",
                "subnetRedisRange": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),3)), '.0/24')]",
                "subnetSan": "san-subnet-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "subnetSanPrefix": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),1)))]",
                "subnetSanRange": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),1)), '.0/24')]",
                "subnetWeb": "web-subnet-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "subnetWebPrefix": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),0)))]",
                "subnetWebRange": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),0)), '.0/24')]",
                "vNetAddressSpace": "172.31.0.0",
                "vaultName": "vault-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "vmssName": "vmss-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "vmssdStorageAccounttName": "[concat('vmss',uniqueString(resourceGroup().id))]",
                "vnetGwDeploySwitch": false,
                "vnetName": "vnet-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "vpnType": "RouteBased",
                "webServerSetupScriptFilename": "setup_webserver.sh",
                "webServerType": "apache"
              }
            },
            "location": {
              "value": "[resourceGroup().location]"
            }
          },
          "templateLink": {
            "uri": "(moodleCommon).baseTemplateUrlredis.jsonparameters('_artifactsLocationSasToken')"
          }
        }
      },
      {
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2020-10-01",
        "name": "networkTemplate",
        "properties": {
          "mode": "Incremental",
          "parameters": {
            "moodleCommon": {
              "value": {
                "baseTemplateUrl": "[uri(parameters('_artifactsLocation'), concat('nested/'))]",
                "scriptLocation": "[uri(parameters('_artifactsLocation'), concat('scripts/'))]",
                "applyScriptsSwitch": true,
                "autoscaleVmCount": 10,
                "autoscaleVmSku": "Standard_D2s_v3",
                "azureBackupSwitch": true,
                "artifactsSasToken": "",
                "commonFunctionsScriptUri": "[uri(parameters('_artifactsLocation'), concat('scripts/helper_functions.sh',parameters('_artifactsLocationSasToken')))]",
                "controllerVmSku": "Standard_D2s_v3",
                "dbLogin": "dbadmin",
                "dbLoginPassword": "[concat(substring(uniqueString(resourceGroup().id, deployment().name), 2, 11), '*7', toUpper('pfiwb'))]",
                "dbServerType": "mysql",
                "dbUsername": "dbadmin@mysql-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "elasticVmSku": "Standard_D2s_v3",
                "elasticAvailabilitySetName": "elastic-avset-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "elasticClusterName": "es-cluster-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "elasticNicName1": "elastic-vm-nic-01-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "elasticNicName2": "elastic-vm-nic-02-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "elasticNicName3": "elastic-vm-nic-03-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "elasticScriptFilename": "install_elastic.sh",
                "elasticVm1IP": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),4)), '.20')]",
                "elasticVm2IP": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),4)), '.21')]",
                "elasticVm3IP": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),4)), '.22')]",
                "elasticVmName": "elastic-vm-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "elasticVmName1": "elastic-vm-01-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "elasticVmName2": "elastic-vm-02-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "elasticVmName3": "elastic-vm-03-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "extBeName": "lb-backend-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "extFeName": "lb-frontend-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "extNatPool": "lb-natpool-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "extProbe": "lb-probe-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "fileServerDiskCount": 4,
                "fileServerDiskSize": 127,
                "fileServerType": "gluster",
                "firewallRuleName": "open-to-the-world",
                "gatewayName": "vnet-gateway-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "gatewayPublicIPName": "vnet-gw-ip-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "gatewaySubnet": "GatewaySubnet",
                "gatewaySubnetPrefix": "[concat(variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),2)))]",
                "gatewaySubnetRange": "[concat(variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),2)), '.0/24')]",
                "gatewayType": "Vpn",
                "gfsNameRoot": "gluster-vm-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "gfxAvailabilitySetName": "gluster-avset-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "glusterScriptFilename": "install_gluster.sh",
                "glusterVmCount": 2,
                "glusterVmSku": "Standard_D2s_v3",
                "installO365pluginsSwitch": false,
                "installElasticSearchSwitch": false,
                "jboxNicName": "jumpbox-vm-nic-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "jboxNsgName": "jumpbox-nsg-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "jboxPipName": "jumpbox-pubip-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "jboxVmName": "jumpbox-vm-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "lbDns": "lb-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)].[resourceGroup().location].cloudapp.azure.com",
                "lbName": "lb-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "lbPipName": "lb-pubip-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "moodleAdminPass": "[concat(toUpper('xl'), substring(uniqueString(resourceGroup().id, deployment().name), 6, 7),',1*8')]",
                "moodleDbName": "moodle",
                "moodleDbPass": "[concat('9#36^', substring(uniqueString(resourceGroup().id, deployment().name), 5, 8), toUpper('ercq'))]",
                "moodleDbUser": "moodle",
                "moodleDbUserAzure": "moodle@mysql-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "moodleInstallScriptFilename": "install_moodle.sh",
                "moodleVersion": "MOODLE_34_STABLE",
                "mysqlVersion": "5.7",
                "osType": {
                  "offer": "UbuntuServer",
                  "publisher": "Canonical",
                  "sku": "16.04-LTS",
                  "version": "latest"
                },
                "policyName": "policy-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "postgresVersion": "9.6",
                "redisCacheName": "redis-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "redisDns": "redis-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)].redis.cache.windows.net",
                "resourcesPrefix": "[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "serverName": "mysql-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "siteURL": "[if(or(empty(parameters('siteURL')), equals(parameters('siteURL'), 'www.example.org')), concat('lb-',variables('resourceprefix'),'.',parameters('location'),'.cloudapp.azure.com'), parameters('siteURL'))]",
                "skuCapacityDTU": 2,
                "skuFamily": "Gen5",
                "skuName": "B_Gen5_2",
                "skuSizeMB": 51200,
                "skuTier": "Basic",
                "sshPublicKey": "GEN-SSH-PUB-KEY",
                "sshUsername": "azureadmin",
                "sslEnforcement": "Disabled",
                "storageAccountName": "[tolower(concat('abs',variables('resourceprefix')))]",
                "storageAccountType": "Standard_LRS",
                "subnetElastic": "elastic-subnet-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "subnetElasticPrefix": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),4)))]",
                "subnetElasticRange": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),4)), '.0/24')]",
                "subnetRedis": "redis-subnet-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "subnetRedisPrefix": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),3)))]",
                "subnetRedisRange": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),3)), '.0/24')]",
                "subnetSan": "san-subnet-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "subnetSanPrefix": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),1)))]",
                "subnetSanRange": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),1)), '.0/24')]",
                "subnetWeb": "web-subnet-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "subnetWebPrefix": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),0)))]",
                "subnetWebRange": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),0)), '.0/24')]",
                "vNetAddressSpace": "172.31.0.0",
                "vaultName": "vault-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "vmssName": "vmss-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "vmssdStorageAccounttName": "[concat('vmss',uniqueString(resourceGroup().id))]",
                "vnetGwDeploySwitch": false,
                "vnetName": "vnet-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "vpnType": "RouteBased",
                "webServerSetupScriptFilename": "setup_webserver.sh",
                "webServerType": "apache"
              }
            },
            "location": {
              "value": "[resourceGroup().location]"
            }
          },
          "templateLink": {
            "uri": "(moodleCommon).baseTemplateUrlnetwork.jsonparameters('_artifactsLocationSasToken')"
          }
        }
      },
      {
        "condition": false,
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2020-10-01",
        "dependsOn": [
          "Microsoft.Resources/deployments/networkTemplate",
          "Microsoft.Resources/deployments/recoveryTemplate"
        ],
        "name": "elasticTemplate",
        "properties": {
          "mode": "Incremental",
          "parameters": {
            "moodleCommon": {
              "value": {
                "baseTemplateUrl": "[uri(parameters('_artifactsLocation'), concat('nested/'))]",
                "scriptLocation": "[uri(parameters('_artifactsLocation'), concat('scripts/'))]",
                "applyScriptsSwitch": true,
                "autoscaleVmCount": 10,
                "autoscaleVmSku": "Standard_D2s_v3",
                "azureBackupSwitch": true,
                "artifactsSasToken": "",
                "commonFunctionsScriptUri": "[uri(parameters('_artifactsLocation'), concat('scripts/helper_functions.sh',parameters('_artifactsLocationSasToken')))]",
                "controllerVmSku": "Standard_D2s_v3",
                "dbLogin": "dbadmin",
                "dbLoginPassword": "[concat(substring(uniqueString(resourceGroup().id, deployment().name), 2, 11), '*7', toUpper('pfiwb'))]",
                "dbServerType": "mysql",
                "dbUsername": "dbadmin@mysql-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "elasticVmSku": "Standard_D2s_v3",
                "elasticAvailabilitySetName": "elastic-avset-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "elasticClusterName": "es-cluster-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "elasticNicName1": "elastic-vm-nic-01-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "elasticNicName2": "elastic-vm-nic-02-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "elasticNicName3": "elastic-vm-nic-03-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "elasticScriptFilename": "install_elastic.sh",
                "elasticVm1IP": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),4)), '.20')]",
                "elasticVm2IP": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),4)), '.21')]",
                "elasticVm3IP": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),4)), '.22')]",
                "elasticVmName": "elastic-vm-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "elasticVmName1": "elastic-vm-01-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "elasticVmName2": "elastic-vm-02-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "elasticVmName3": "elastic-vm-03-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "extBeName": "lb-backend-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "extFeName": "lb-frontend-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "extNatPool": "lb-natpool-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "extProbe": "lb-probe-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "fileServerDiskCount": 4,
                "fileServerDiskSize": 127,
                "fileServerType": "gluster",
                "firewallRuleName": "open-to-the-world",
                "gatewayName": "vnet-gateway-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "gatewayPublicIPName": "vnet-gw-ip-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "gatewaySubnet": "GatewaySubnet",
                "gatewaySubnetPrefix": "[concat(variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),2)))]",
                "gatewaySubnetRange": "[concat(variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),2)), '.0/24')]",
                "gatewayType": "Vpn",
                "gfsNameRoot": "gluster-vm-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "gfxAvailabilitySetName": "gluster-avset-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "glusterScriptFilename": "install_gluster.sh",
                "glusterVmCount": 2,
                "glusterVmSku": "Standard_D2s_v3",
                "installO365pluginsSwitch": false,
                "installElasticSearchSwitch": false,
                "jboxNicName": "jumpbox-vm-nic-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "jboxNsgName": "jumpbox-nsg-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "jboxPipName": "jumpbox-pubip-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "jboxVmName": "jumpbox-vm-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "lbDns": "lb-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)].[resourceGroup().location].cloudapp.azure.com",
                "lbName": "lb-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "lbPipName": "lb-pubip-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "moodleAdminPass": "[concat(toUpper('xl'), substring(uniqueString(resourceGroup().id, deployment().name), 6, 7),',1*8')]",
                "moodleDbName": "moodle",
                "moodleDbPass": "[concat('9#36^', substring(uniqueString(resourceGroup().id, deployment().name), 5, 8), toUpper('ercq'))]",
                "moodleDbUser": "moodle",
                "moodleDbUserAzure": "moodle@mysql-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "moodleInstallScriptFilename": "install_moodle.sh",
                "moodleVersion": "MOODLE_34_STABLE",
                "mysqlVersion": "5.7",
                "osType": {
                  "offer": "UbuntuServer",
                  "publisher": "Canonical",
                  "sku": "16.04-LTS",
                  "version": "latest"
                },
                "policyName": "policy-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "postgresVersion": "9.6",
                "redisCacheName": "redis-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "redisDns": "redis-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)].redis.cache.windows.net",
                "resourcesPrefix": "[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "serverName": "mysql-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "siteURL": "[if(or(empty(parameters('siteURL')), equals(parameters('siteURL'), 'www.example.org')), concat('lb-',variables('resourceprefix'),'.',parameters('location'),'.cloudapp.azure.com'), parameters('siteURL'))]",
                "skuCapacityDTU": 2,
                "skuFamily": "Gen5",
                "skuName": "B_Gen5_2",
                "skuSizeMB": 51200,
                "skuTier": "Basic",
                "sshPublicKey": "GEN-SSH-PUB-KEY",
                "sshUsername": "azureadmin",
                "sslEnforcement": "Disabled",
                "storageAccountName": "[tolower(concat('abs',variables('resourceprefix')))]",
                "storageAccountType": "Standard_LRS",
                "subnetElastic": "elastic-subnet-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "subnetElasticPrefix": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),4)))]",
                "subnetElasticRange": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),4)), '.0/24')]",
                "subnetRedis": "redis-subnet-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "subnetRedisPrefix": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),3)))]",
                "subnetRedisRange": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),3)), '.0/24')]",
                "subnetSan": "san-subnet-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "subnetSanPrefix": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),1)))]",
                "subnetSanRange": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),1)), '.0/24')]",
                "subnetWeb": "web-subnet-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "subnetWebPrefix": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),0)))]",
                "subnetWebRange": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),0)), '.0/24')]",
                "vNetAddressSpace": "172.31.0.0",
                "vaultName": "vault-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "vmssName": "vmss-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "vmssdStorageAccounttName": "[concat('vmss',uniqueString(resourceGroup().id))]",
                "vnetGwDeploySwitch": false,
                "vnetName": "vnet-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "vpnType": "RouteBased",
                "webServerSetupScriptFilename": "setup_webserver.sh",
                "webServerType": "apache"
              }
            },
            "location": {
              "value": "[resourceGroup().location]"
            }
          },
          "templateLink": {
            "uri": "(moodleCommon).baseTemplateUrlelastic.jsonparameters('_artifactsLocationSasToken')"
          }
        }
      },
      {
        "condition": false,
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2020-10-01",
        "dependsOn": [
          "Microsoft.Resources/deployments/networkTemplate",
          "Microsoft.Resources/deployments/recoveryTemplate"
        ],
        "name": "glusterTemplate",
        "properties": {
          "mode": "Incremental",
          "parameters": {
            "moodleCommon": {
              "value": {
                "baseTemplateUrl": "[uri(parameters('_artifactsLocation'), concat('nested/'))]",
                "scriptLocation": "[uri(parameters('_artifactsLocation'), concat('scripts/'))]",
                "applyScriptsSwitch": true,
                "autoscaleVmCount": 10,
                "autoscaleVmSku": "Standard_D2s_v3",
                "azureBackupSwitch": true,
                "artifactsSasToken": "",
                "commonFunctionsScriptUri": "[uri(parameters('_artifactsLocation'), concat('scripts/helper_functions.sh',parameters('_artifactsLocationSasToken')))]",
                "controllerVmSku": "Standard_D2s_v3",
                "dbLogin": "dbadmin",
                "dbLoginPassword": "[concat(substring(uniqueString(resourceGroup().id, deployment().name), 2, 11), '*7', toUpper('pfiwb'))]",
                "dbServerType": "mysql",
                "dbUsername": "dbadmin@mysql-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "elasticVmSku": "Standard_D2s_v3",
                "elasticAvailabilitySetName": "elastic-avset-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "elasticClusterName": "es-cluster-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "elasticNicName1": "elastic-vm-nic-01-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "elasticNicName2": "elastic-vm-nic-02-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "elasticNicName3": "elastic-vm-nic-03-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "elasticScriptFilename": "install_elastic.sh",
                "elasticVm1IP": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),4)), '.20')]",
                "elasticVm2IP": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),4)), '.21')]",
                "elasticVm3IP": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),4)), '.22')]",
                "elasticVmName": "elastic-vm-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "elasticVmName1": "elastic-vm-01-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "elasticVmName2": "elastic-vm-02-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "elasticVmName3": "elastic-vm-03-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "extBeName": "lb-backend-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "extFeName": "lb-frontend-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "extNatPool": "lb-natpool-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "extProbe": "lb-probe-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "fileServerDiskCount": 4,
                "fileServerDiskSize": 127,
                "fileServerType": "gluster",
                "firewallRuleName": "open-to-the-world",
                "gatewayName": "vnet-gateway-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "gatewayPublicIPName": "vnet-gw-ip-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "gatewaySubnet": "GatewaySubnet",
                "gatewaySubnetPrefix": "[concat(variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),2)))]",
                "gatewaySubnetRange": "[concat(variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),2)), '.0/24')]",
                "gatewayType": "Vpn",
                "gfsNameRoot": "gluster-vm-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "gfxAvailabilitySetName": "gluster-avset-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "glusterScriptFilename": "install_gluster.sh",
                "glusterVmCount": 2,
                "glusterVmSku": "Standard_D2s_v3",
                "installO365pluginsSwitch": false,
                "installElasticSearchSwitch": false,
                "jboxNicName": "jumpbox-vm-nic-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "jboxNsgName": "jumpbox-nsg-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "jboxPipName": "jumpbox-pubip-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "jboxVmName": "jumpbox-vm-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "lbDns": "lb-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)].[resourceGroup().location].cloudapp.azure.com",
                "lbName": "lb-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "lbPipName": "lb-pubip-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "moodleAdminPass": "[concat(toUpper('xl'), substring(uniqueString(resourceGroup().id, deployment().name), 6, 7),',1*8')]",
                "moodleDbName": "moodle",
                "moodleDbPass": "[concat('9#36^', substring(uniqueString(resourceGroup().id, deployment().name), 5, 8), toUpper('ercq'))]",
                "moodleDbUser": "moodle",
                "moodleDbUserAzure": "moodle@mysql-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "moodleInstallScriptFilename": "install_moodle.sh",
                "moodleVersion": "MOODLE_34_STABLE",
                "mysqlVersion": "5.7",
                "osType": {
                  "offer": "UbuntuServer",
                  "publisher": "Canonical",
                  "sku": "16.04-LTS",
                  "version": "latest"
                },
                "policyName": "policy-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "postgresVersion": "9.6",
                "redisCacheName": "redis-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "redisDns": "redis-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)].redis.cache.windows.net",
                "resourcesPrefix": "[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "serverName": "mysql-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "siteURL": "[if(or(empty(parameters('siteURL')), equals(parameters('siteURL'), 'www.example.org')), concat('lb-',variables('resourceprefix'),'.',parameters('location'),'.cloudapp.azure.com'), parameters('siteURL'))]",
                "skuCapacityDTU": 2,
                "skuFamily": "Gen5",
                "skuName": "B_Gen5_2",
                "skuSizeMB": 51200,
                "skuTier": "Basic",
                "sshPublicKey": "GEN-SSH-PUB-KEY",
                "sshUsername": "azureadmin",
                "sslEnforcement": "Disabled",
                "storageAccountName": "[tolower(concat('abs',variables('resourceprefix')))]",
                "storageAccountType": "Standard_LRS",
                "subnetElastic": "elastic-subnet-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "subnetElasticPrefix": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),4)))]",
                "subnetElasticRange": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),4)), '.0/24')]",
                "subnetRedis": "redis-subnet-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "subnetRedisPrefix": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),3)))]",
                "subnetRedisRange": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),3)), '.0/24')]",
                "subnetSan": "san-subnet-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "subnetSanPrefix": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),1)))]",
                "subnetSanRange": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),1)), '.0/24')]",
                "subnetWeb": "web-subnet-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "subnetWebPrefix": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),0)))]",
                "subnetWebRange": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),0)), '.0/24')]",
                "vNetAddressSpace": "172.31.0.0",
                "vaultName": "vault-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "vmssName": "vmss-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "vmssdStorageAccounttName": "[concat('vmss',uniqueString(resourceGroup().id))]",
                "vnetGwDeploySwitch": false,
                "vnetName": "vnet-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "vpnType": "RouteBased",
                "webServerSetupScriptFilename": "setup_webserver.sh",
                "webServerType": "apache"
              }
            },
            "location": {
              "value": "[resourceGroup().location]"
            }
          },
          "templateLink": {
            "uri": "(moodleCommon).baseTemplateUrlgluster.jsonparameters('_artifactsLocationSasToken')"
          }
        }
      },
      {
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2020-10-01",
        "dependsOn": [
          "Microsoft.Resources/deployments/elasticTemplate",
          "Microsoft.Resources/deployments/glusterTemplate",
          "Microsoft.Resources/deployments/recoveryTemplate",
          "Microsoft.Resources/deployments/redisTemplate",
          "Microsoft.Resources/deployments/storageAccountTemplate"
        ],
        "name": "controllerTemplate",
        "properties": {
          "mode": "Incremental",
          "parameters": {
            "moodleCommon": {
              "value": {
                "baseTemplateUrl": "[uri(parameters('_artifactsLocation'), concat('nested/'))]",
                "scriptLocation": "[uri(parameters('_artifactsLocation'), concat('scripts/'))]",
                "applyScriptsSwitch": true,
                "autoscaleVmCount": 10,
                "autoscaleVmSku": "Standard_D2s_v3",
                "azureBackupSwitch": true,
                "artifactsSasToken": "",
                "commonFunctionsScriptUri": "[uri(parameters('_artifactsLocation'), concat('scripts/helper_functions.sh',parameters('_artifactsLocationSasToken')))]",
                "controllerVmSku": "Standard_D2s_v3",
                "dbLogin": "dbadmin",
                "dbLoginPassword": "[concat(substring(uniqueString(resourceGroup().id, deployment().name), 2, 11), '*7', toUpper('pfiwb'))]",
                "dbServerType": "mysql",
                "dbUsername": "dbadmin@mysql-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "elasticVmSku": "Standard_D2s_v3",
                "elasticAvailabilitySetName": "elastic-avset-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "elasticClusterName": "es-cluster-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "elasticNicName1": "elastic-vm-nic-01-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "elasticNicName2": "elastic-vm-nic-02-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "elasticNicName3": "elastic-vm-nic-03-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "elasticScriptFilename": "install_elastic.sh",
                "elasticVm1IP": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),4)), '.20')]",
                "elasticVm2IP": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),4)), '.21')]",
                "elasticVm3IP": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),4)), '.22')]",
                "elasticVmName": "elastic-vm-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "elasticVmName1": "elastic-vm-01-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "elasticVmName2": "elastic-vm-02-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "elasticVmName3": "elastic-vm-03-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "extBeName": "lb-backend-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "extFeName": "lb-frontend-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "extNatPool": "lb-natpool-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "extProbe": "lb-probe-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "fileServerDiskCount": 4,
                "fileServerDiskSize": 127,
                "fileServerType": "gluster",
                "firewallRuleName": "open-to-the-world",
                "gatewayName": "vnet-gateway-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "gatewayPublicIPName": "vnet-gw-ip-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "gatewaySubnet": "GatewaySubnet",
                "gatewaySubnetPrefix": "[concat(variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),2)))]",
                "gatewaySubnetRange": "[concat(variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),2)), '.0/24')]",
                "gatewayType": "Vpn",
                "gfsNameRoot": "gluster-vm-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "gfxAvailabilitySetName": "gluster-avset-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "glusterScriptFilename": "install_gluster.sh",
                "glusterVmCount": 2,
                "glusterVmSku": "Standard_D2s_v3",
                "installO365pluginsSwitch": false,
                "installElasticSearchSwitch": false,
                "jboxNicName": "jumpbox-vm-nic-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "jboxNsgName": "jumpbox-nsg-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "jboxPipName": "jumpbox-pubip-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "jboxVmName": "jumpbox-vm-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "lbDns": "lb-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)].[resourceGroup().location].cloudapp.azure.com",
                "lbName": "lb-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "lbPipName": "lb-pubip-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "moodleAdminPass": "[concat(toUpper('xl'), substring(uniqueString(resourceGroup().id, deployment().name), 6, 7),',1*8')]",
                "moodleDbName": "moodle",
                "moodleDbPass": "[concat('9#36^', substring(uniqueString(resourceGroup().id, deployment().name), 5, 8), toUpper('ercq'))]",
                "moodleDbUser": "moodle",
                "moodleDbUserAzure": "moodle@mysql-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "moodleInstallScriptFilename": "install_moodle.sh",
                "moodleVersion": "MOODLE_34_STABLE",
                "mysqlVersion": "5.7",
                "osType": {
                  "offer": "UbuntuServer",
                  "publisher": "Canonical",
                  "sku": "16.04-LTS",
                  "version": "latest"
                },
                "policyName": "policy-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "postgresVersion": "9.6",
                "redisCacheName": "redis-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "redisDns": "redis-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)].redis.cache.windows.net",
                "resourcesPrefix": "[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "serverName": "mysql-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "siteURL": "[if(or(empty(parameters('siteURL')), equals(parameters('siteURL'), 'www.example.org')), concat('lb-',variables('resourceprefix'),'.',parameters('location'),'.cloudapp.azure.com'), parameters('siteURL'))]",
                "skuCapacityDTU": 2,
                "skuFamily": "Gen5",
                "skuName": "B_Gen5_2",
                "skuSizeMB": 51200,
                "skuTier": "Basic",
                "sshPublicKey": "GEN-SSH-PUB-KEY",
                "sshUsername": "azureadmin",
                "sslEnforcement": "Disabled",
                "storageAccountName": "[tolower(concat('abs',variables('resourceprefix')))]",
                "storageAccountType": "Standard_LRS",
                "subnetElastic": "elastic-subnet-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "subnetElasticPrefix": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),4)))]",
                "subnetElasticRange": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),4)), '.0/24')]",
                "subnetRedis": "redis-subnet-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "subnetRedisPrefix": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),3)))]",
                "subnetRedisRange": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),3)), '.0/24')]",
                "subnetSan": "san-subnet-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "subnetSanPrefix": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),1)))]",
                "subnetSanRange": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),1)), '.0/24')]",
                "subnetWeb": "web-subnet-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "subnetWebPrefix": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),0)))]",
                "subnetWebRange": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),0)), '.0/24')]",
                "vNetAddressSpace": "172.31.0.0",
                "vaultName": "vault-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "vmssName": "vmss-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "vmssdStorageAccounttName": "[concat('vmss',uniqueString(resourceGroup().id))]",
                "vnetGwDeploySwitch": false,
                "vnetName": "vnet-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "vpnType": "RouteBased",
                "webServerSetupScriptFilename": "setup_webserver.sh",
                "webServerType": "apache"
              }
            },
            "location": {
              "value": "[resourceGroup().location]"
            }
          },
          "templateLink": {
            "uri": "(moodleCommon).baseTemplateUrlcontroller.jsonparameters('_artifactsLocationSasToken')"
          }
        }
      },
      {
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2020-10-01",
        "dependsOn": [
          "Microsoft.Resources/deployments/controllerTemplate",
          "Microsoft.Resources/deployments/redisTemplate",
          "Microsoft.Resources/deployments/dbTemplate"
        ],
        "name": "scaleSetTemplate",
        "properties": {
          "mode": "Incremental",
          "parameters": {
            "moodleCommon": {
              "value": {
                "baseTemplateUrl": "[uri(parameters('_artifactsLocation'), concat('nested/'))]",
                "scriptLocation": "[uri(parameters('_artifactsLocation'), concat('scripts/'))]",
                "applyScriptsSwitch": true,
                "autoscaleVmCount": 10,
                "autoscaleVmSku": "Standard_D2s_v3",
                "azureBackupSwitch": true,
                "artifactsSasToken": "",
                "commonFunctionsScriptUri": "[uri(parameters('_artifactsLocation'), concat('scripts/helper_functions.sh',parameters('_artifactsLocationSasToken')))]",
                "controllerVmSku": "Standard_D2s_v3",
                "dbLogin": "dbadmin",
                "dbLoginPassword": "[concat(substring(uniqueString(resourceGroup().id, deployment().name), 2, 11), '*7', toUpper('pfiwb'))]",
                "dbServerType": "mysql",
                "dbUsername": "dbadmin@mysql-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "elasticVmSku": "Standard_D2s_v3",
                "elasticAvailabilitySetName": "elastic-avset-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "elasticClusterName": "es-cluster-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "elasticNicName1": "elastic-vm-nic-01-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "elasticNicName2": "elastic-vm-nic-02-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "elasticNicName3": "elastic-vm-nic-03-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "elasticScriptFilename": "install_elastic.sh",
                "elasticVm1IP": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),4)), '.20')]",
                "elasticVm2IP": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),4)), '.21')]",
                "elasticVm3IP": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),4)), '.22')]",
                "elasticVmName": "elastic-vm-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "elasticVmName1": "elastic-vm-01-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "elasticVmName2": "elastic-vm-02-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "elasticVmName3": "elastic-vm-03-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "extBeName": "lb-backend-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "extFeName": "lb-frontend-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "extNatPool": "lb-natpool-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "extProbe": "lb-probe-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "fileServerDiskCount": 4,
                "fileServerDiskSize": 127,
                "fileServerType": "gluster",
                "firewallRuleName": "open-to-the-world",
                "gatewayName": "vnet-gateway-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "gatewayPublicIPName": "vnet-gw-ip-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "gatewaySubnet": "GatewaySubnet",
                "gatewaySubnetPrefix": "[concat(variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),2)))]",
                "gatewaySubnetRange": "[concat(variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),2)), '.0/24')]",
                "gatewayType": "Vpn",
                "gfsNameRoot": "gluster-vm-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "gfxAvailabilitySetName": "gluster-avset-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "glusterScriptFilename": "install_gluster.sh",
                "glusterVmCount": 2,
                "glusterVmSku": "Standard_D2s_v3",
                "installO365pluginsSwitch": false,
                "installElasticSearchSwitch": false,
                "jboxNicName": "jumpbox-vm-nic-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "jboxNsgName": "jumpbox-nsg-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "jboxPipName": "jumpbox-pubip-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "jboxVmName": "jumpbox-vm-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "lbDns": "lb-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)].[resourceGroup().location].cloudapp.azure.com",
                "lbName": "lb-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "lbPipName": "lb-pubip-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "moodleAdminPass": "[concat(toUpper('xl'), substring(uniqueString(resourceGroup().id, deployment().name), 6, 7),',1*8')]",
                "moodleDbName": "moodle",
                "moodleDbPass": "[concat('9#36^', substring(uniqueString(resourceGroup().id, deployment().name), 5, 8), toUpper('ercq'))]",
                "moodleDbUser": "moodle",
                "moodleDbUserAzure": "moodle@mysql-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "moodleInstallScriptFilename": "install_moodle.sh",
                "moodleVersion": "MOODLE_34_STABLE",
                "mysqlVersion": "5.7",
                "osType": {
                  "offer": "UbuntuServer",
                  "publisher": "Canonical",
                  "sku": "16.04-LTS",
                  "version": "latest"
                },
                "policyName": "policy-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "postgresVersion": "9.6",
                "redisCacheName": "redis-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "redisDns": "redis-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)].redis.cache.windows.net",
                "resourcesPrefix": "[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "serverName": "mysql-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "siteURL": "[if(or(empty(parameters('siteURL')), equals(parameters('siteURL'), 'www.example.org')), concat('lb-',variables('resourceprefix'),'.',parameters('location'),'.cloudapp.azure.com'), parameters('siteURL'))]",
                "skuCapacityDTU": 2,
                "skuFamily": "Gen5",
                "skuName": "B_Gen5_2",
                "skuSizeMB": 51200,
                "skuTier": "Basic",
                "sshPublicKey": "GEN-SSH-PUB-KEY",
                "sshUsername": "azureadmin",
                "sslEnforcement": "Disabled",
                "storageAccountName": "[tolower(concat('abs',variables('resourceprefix')))]",
                "storageAccountType": "Standard_LRS",
                "subnetElastic": "elastic-subnet-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "subnetElasticPrefix": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),4)))]",
                "subnetElasticRange": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),4)), '.0/24')]",
                "subnetRedis": "redis-subnet-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "subnetRedisPrefix": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),3)))]",
                "subnetRedisRange": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),3)), '.0/24')]",
                "subnetSan": "san-subnet-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "subnetSanPrefix": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),1)))]",
                "subnetSanRange": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),1)), '.0/24')]",
                "subnetWeb": "web-subnet-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "subnetWebPrefix": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),0)))]",
                "subnetWebRange": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),0)), '.0/24')]",
                "vNetAddressSpace": "172.31.0.0",
                "vaultName": "vault-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "vmssName": "vmss-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "vmssdStorageAccounttName": "[concat('vmss',uniqueString(resourceGroup().id))]",
                "vnetGwDeploySwitch": false,
                "vnetName": "vnet-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "vpnType": "RouteBased",
                "webServerSetupScriptFilename": "setup_webserver.sh",
                "webServerType": "apache"
              }
            },
            "location": {
              "value": "[resourceGroup().location]"
            }
          },
          "templateLink": {
            "uri": "(moodleCommon).baseTemplateUrlwebvmss.jsonparameters('_artifactsLocationSasToken')"
          }
        }
      },
      {
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2020-10-01",
        "name": "storageAccountTemplate",
        "properties": {
          "mode": "Incremental",
          "parameters": {
            "moodleCommon": {
              "value": {
                "baseTemplateUrl": "[uri(parameters('_artifactsLocation'), concat('nested/'))]",
                "scriptLocation": "[uri(parameters('_artifactsLocation'), concat('scripts/'))]",
                "applyScriptsSwitch": true,
                "autoscaleVmCount": 10,
                "autoscaleVmSku": "Standard_D2s_v3",
                "azureBackupSwitch": true,
                "artifactsSasToken": "",
                "commonFunctionsScriptUri": "[uri(parameters('_artifactsLocation'), concat('scripts/helper_functions.sh',parameters('_artifactsLocationSasToken')))]",
                "controllerVmSku": "Standard_D2s_v3",
                "dbLogin": "dbadmin",
                "dbLoginPassword": "[concat(substring(uniqueString(resourceGroup().id, deployment().name), 2, 11), '*7', toUpper('pfiwb'))]",
                "dbServerType": "mysql",
                "dbUsername": "dbadmin@mysql-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "elasticVmSku": "Standard_D2s_v3",
                "elasticAvailabilitySetName": "elastic-avset-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "elasticClusterName": "es-cluster-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "elasticNicName1": "elastic-vm-nic-01-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "elasticNicName2": "elastic-vm-nic-02-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "elasticNicName3": "elastic-vm-nic-03-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "elasticScriptFilename": "install_elastic.sh",
                "elasticVm1IP": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),4)), '.20')]",
                "elasticVm2IP": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),4)), '.21')]",
                "elasticVm3IP": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),4)), '.22')]",
                "elasticVmName": "elastic-vm-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "elasticVmName1": "elastic-vm-01-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "elasticVmName2": "elastic-vm-02-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "elasticVmName3": "elastic-vm-03-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "extBeName": "lb-backend-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "extFeName": "lb-frontend-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "extNatPool": "lb-natpool-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "extProbe": "lb-probe-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "fileServerDiskCount": 4,
                "fileServerDiskSize": 127,
                "fileServerType": "gluster",
                "firewallRuleName": "open-to-the-world",
                "gatewayName": "vnet-gateway-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "gatewayPublicIPName": "vnet-gw-ip-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "gatewaySubnet": "GatewaySubnet",
                "gatewaySubnetPrefix": "[concat(variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),2)))]",
                "gatewaySubnetRange": "[concat(variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),2)), '.0/24')]",
                "gatewayType": "Vpn",
                "gfsNameRoot": "gluster-vm-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "gfxAvailabilitySetName": "gluster-avset-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "glusterScriptFilename": "install_gluster.sh",
                "glusterVmCount": 2,
                "glusterVmSku": "Standard_D2s_v3",
                "installO365pluginsSwitch": false,
                "installElasticSearchSwitch": false,
                "jboxNicName": "jumpbox-vm-nic-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "jboxNsgName": "jumpbox-nsg-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "jboxPipName": "jumpbox-pubip-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "jboxVmName": "jumpbox-vm-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "lbDns": "lb-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)].[resourceGroup().location].cloudapp.azure.com",
                "lbName": "lb-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "lbPipName": "lb-pubip-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "moodleAdminPass": "[concat(toUpper('xl'), substring(uniqueString(resourceGroup().id, deployment().name), 6, 7),',1*8')]",
                "moodleDbName": "moodle",
                "moodleDbPass": "[concat('9#36^', substring(uniqueString(resourceGroup().id, deployment().name), 5, 8), toUpper('ercq'))]",
                "moodleDbUser": "moodle",
                "moodleDbUserAzure": "moodle@mysql-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "moodleInstallScriptFilename": "install_moodle.sh",
                "moodleVersion": "MOODLE_34_STABLE",
                "mysqlVersion": "5.7",
                "osType": {
                  "offer": "UbuntuServer",
                  "publisher": "Canonical",
                  "sku": "16.04-LTS",
                  "version": "latest"
                },
                "policyName": "policy-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "postgresVersion": "9.6",
                "redisCacheName": "redis-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "redisDns": "redis-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)].redis.cache.windows.net",
                "resourcesPrefix": "[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "serverName": "mysql-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "siteURL": "[if(or(empty(parameters('siteURL')), equals(parameters('siteURL'), 'www.example.org')), concat('lb-',variables('resourceprefix'),'.',parameters('location'),'.cloudapp.azure.com'), parameters('siteURL'))]",
                "skuCapacityDTU": 2,
                "skuFamily": "Gen5",
                "skuName": "B_Gen5_2",
                "skuSizeMB": 51200,
                "skuTier": "Basic",
                "sshPublicKey": "GEN-SSH-PUB-KEY",
                "sshUsername": "azureadmin",
                "sslEnforcement": "Disabled",
                "storageAccountName": "[tolower(concat('abs',variables('resourceprefix')))]",
                "storageAccountType": "Standard_LRS",
                "subnetElastic": "elastic-subnet-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "subnetElasticPrefix": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),4)))]",
                "subnetElasticRange": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),4)), '.0/24')]",
                "subnetRedis": "redis-subnet-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "subnetRedisPrefix": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),3)))]",
                "subnetRedisRange": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),3)), '.0/24')]",
                "subnetSan": "san-subnet-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "subnetSanPrefix": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),1)))]",
                "subnetSanRange": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),1)), '.0/24')]",
                "subnetWeb": "web-subnet-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "subnetWebPrefix": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),0)))]",
                "subnetWebRange": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),0)), '.0/24')]",
                "vNetAddressSpace": "172.31.0.0",
                "vaultName": "vault-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "vmssName": "vmss-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "vmssdStorageAccounttName": "[concat('vmss',uniqueString(resourceGroup().id))]",
                "vnetGwDeploySwitch": false,
                "vnetName": "vnet-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
                "vpnType": "RouteBased",
                "webServerSetupScriptFilename": "setup_webserver.sh",
                "webServerType": "apache"
              }
            },
            "location": {
              "value": "[resourceGroup().location]"
            }
          },
          "templateLink": {
            "uri": "(moodleCommon).baseTemplateUrlstorageAccount.jsonparameters('_artifactsLocationSasToken')"
          }
        }
      }
    ],
    "outputs": {
      "siteURL": {
        "type": "string",
        "value": "[variables('moodleCommon').siteURL]"
      },
      "controllerInstanceIP": {
        "type": "string",
        "value": "[reference('controllerTemplate').outputs.controllerIP.value]"
      },
      "databaseDNS": {
        "type": "string",
        "value": "[concat(variables('moodleCommon').dbServerType, '-', variables('moodleCommon').resourcesPrefix, '.', variables('moodleCommon').dbServerType, '.database.azure.com')]"
      },
      "databaseAdminUsername": {
        "type": "string",
        "value": "[variables('moodleCommon').dbUsername]"
      },
      "firstFrontendVmIP": {
        "type": "string",
        "value": "[reference('scaleSetTemplate').outputs.webvm1IP.value]"
      },
      "moodleDbUsername": {
        "type": "string",
        "value": "[variables('moodleCommon').moodleDbUserAzure]"
      },
      "loadBalancerDNS": {
        "type": "string",
        "value": "[variables('moodleCommon').lbDns]"
      }
    },
    "variables": {
      "moodleCommon": {
        "baseTemplateUrl": "[uri(parameters('_artifactsLocation'), concat('nested/'))]",
        "scriptLocation": "[uri(parameters('_artifactsLocation'), concat('scripts/'))]",
        "applyScriptsSwitch": true,
        "autoscaleVmCount": 10,
        "autoscaleVmSku": "Standard_D2s_v3",
        "azureBackupSwitch": true,
        "artifactsSasToken": "",
        "commonFunctionsScriptUri": "[uri(parameters('_artifactsLocation'), concat('scripts/helper_functions.sh',parameters('_artifactsLocationSasToken')))]",
        "controllerVmSku": "Standard_D2s_v3",
        "dbLogin": "dbadmin",
        "dbLoginPassword": "[concat(substring(uniqueString(resourceGroup().id, deployment().name), 2, 11), '*7', toUpper('pfiwb'))]",
        "dbServerType": "mysql",
        "dbUsername": "dbadmin@mysql-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
        "elasticVmSku": "Standard_D2s_v3",
        "elasticAvailabilitySetName": "elastic-avset-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
        "elasticClusterName": "es-cluster-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
        "elasticNicName1": "elastic-vm-nic-01-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
        "elasticNicName2": "elastic-vm-nic-02-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
        "elasticNicName3": "elastic-vm-nic-03-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
        "elasticScriptFilename": "install_elastic.sh",
        "elasticVm1IP": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),4)), '.20')]",
        "elasticVm2IP": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),4)), '.21')]",
        "elasticVm3IP": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),4)), '.22')]",
        "elasticVmName": "elastic-vm-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
        "elasticVmName1": "elastic-vm-01-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
        "elasticVmName2": "elastic-vm-02-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
        "elasticVmName3": "elastic-vm-03-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
        "extBeName": "lb-backend-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
        "extFeName": "lb-frontend-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
        "extNatPool": "lb-natpool-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
        "extProbe": "lb-probe-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
        "fileServerDiskCount": 4,
        "fileServerDiskSize": 127,
        "fileServerType": "gluster",
        "firewallRuleName": "open-to-the-world",
        "gatewayName": "vnet-gateway-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
        "gatewayPublicIPName": "vnet-gw-ip-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
        "gatewaySubnet": "GatewaySubnet",
        "gatewaySubnetPrefix": "[concat(variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),2)))]",
        "gatewaySubnetRange": "[concat(variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),2)), '.0/24')]",
        "gatewayType": "Vpn",
        "gfsNameRoot": "gluster-vm-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
        "gfxAvailabilitySetName": "gluster-avset-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
        "glusterScriptFilename": "install_gluster.sh",
        "glusterVmCount": 2,
        "glusterVmSku": "Standard_D2s_v3",
        "installO365pluginsSwitch": false,
        "installElasticSearchSwitch": false,
        "jboxNicName": "jumpbox-vm-nic-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
        "jboxNsgName": "jumpbox-nsg-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
        "jboxPipName": "jumpbox-pubip-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
        "jboxVmName": "jumpbox-vm-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
        "lbDns": "lb-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)].[resourceGroup().location].cloudapp.azure.com",
        "lbName": "lb-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
        "lbPipName": "lb-pubip-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
        "moodleAdminPass": "[concat(toUpper('xl'), substring(uniqueString(resourceGroup().id, deployment().name), 6, 7),',1*8')]",
        "moodleDbName": "moodle",
        "moodleDbPass": "[concat('9#36^', substring(uniqueString(resourceGroup().id, deployment().name), 5, 8), toUpper('ercq'))]",
        "moodleDbUser": "moodle",
        "moodleDbUserAzure": "moodle@mysql-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
        "moodleInstallScriptFilename": "install_moodle.sh",
        "moodleVersion": "MOODLE_34_STABLE",
        "mysqlVersion": "5.7",
        "osType": {
          "offer": "UbuntuServer",
          "publisher": "Canonical",
          "sku": "16.04-LTS",
          "version": "latest"
        },
        "policyName": "policy-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
        "postgresVersion": "9.6",
        "redisCacheName": "redis-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
        "redisDns": "redis-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)].redis.cache.windows.net",
        "resourcesPrefix": "[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
        "serverName": "mysql-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
        "siteURL": "[if(or(empty(parameters('siteURL')), equals(parameters('siteURL'), 'www.example.org')), concat('lb-',variables('resourceprefix'),'.',parameters('location'),'.cloudapp.azure.com'), parameters('siteURL'))]",
        "skuCapacityDTU": 2,
        "skuFamily": "Gen5",
        "skuName": "B_Gen5_2",
        "skuSizeMB": 51200,
        "skuTier": "Basic",
        "sshPublicKey": "GEN-SSH-PUB-KEY",
        "sshUsername": "azureadmin",
        "sslEnforcement": "Disabled",
        "storageAccountName": "[tolower(concat('abs',variables('resourceprefix')))]",
        "storageAccountType": "Standard_LRS",
        "subnetElastic": "elastic-subnet-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
        "subnetElasticPrefix": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),4)))]",
        "subnetElasticRange": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),4)), '.0/24')]",
        "subnetRedis": "redis-subnet-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
        "subnetRedisPrefix": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),3)))]",
        "subnetRedisRange": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),3)), '.0/24')]",
        "subnetSan": "san-subnet-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
        "subnetSanPrefix": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),1)))]",
        "subnetSanRange": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),1)), '.0/24')]",
        "subnetWeb": "web-subnet-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
        "subnetWebPrefix": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),0)))]",
        "subnetWebRange": "[concat( variables('octets')[0], '.', variables('octets')[1], '.', string(add(int(variables('octets')[2]),0)), '.0/24')]",
        "vNetAddressSpace": "172.31.0.0",
        "vaultName": "vault-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
        "vmssName": "vmss-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
        "vmssdStorageAccounttName": "[concat('vmss',uniqueString(resourceGroup().id))]",
        "vnetGwDeploySwitch": false,
        "vnetName": "vnet-[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]",
        "vpnType": "RouteBased",
        "webServerSetupScriptFilename": "setup_webserver.sh",
        "webServerType": "apache"
      },
      "octets": "[split(parameters('vNetAddressSpace'), '.')]",
      "resourceprefix": "[substring(uniqueString(resourceGroup().id, deployment().name), 3, 6)]"
    },
    "\uff04schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#"
  }
}