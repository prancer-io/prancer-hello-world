{
  "structure": "filesystem",
  "error": null,
  "reference": "master",
  "contentType": "json",
  "source": "gitConnectorAzureQuickStart",
  "paths": [
    "/quickstarts/microsoft.network/route-server-quagga/azuredeploy.json",
    "/quickstarts/microsoft.network/route-server-quagga/azuredeploy.parameters.json"
  ],
  "timestamp": 1642962909424,
  "queryuser": null,
  "checksum": "99914b932bd37a50b983c5e7c90ae93b",
  "node": {
    "masterSnapshotId": "ARM_TEMPLATE_SNAPSHOT",
    "type": "arm",
    "collection": "armtemplate",
    "paths": [
      "/quickstarts/microsoft.network/route-server-quagga/azuredeploy.json",
      "/quickstarts/microsoft.network/route-server-quagga/azuredeploy.parameters.json"
    ],
    "snapshotId": "ARM_TEMPLATE_SNAPSHOT1587",
    "status": "active",
    "validate": true,
    "resourceTypes": [
      "microsoft.network/publicipaddresses",
      "microsoft.network/virtualnetworks",
      "microsoft.network/virtualhubs",
      "microsoft.network/networkinterfaces",
      "microsoft.compute/virtualmachines/extensions",
      "microsoft.network/virtualhubs/bgpconnections",
      "microsoft.compute/virtualmachines",
      "microsoft.network/networksecuritygroups",
      "microsoft.network/virtualhubs/ipconfigurations"
    ]
  },
  "snapshotId": "ARM_TEMPLATE_SNAPSHOT1587",
  "collection": "armtemplate",
  "json": {
    "contentVersion": "1.0.0.0",
    "parameters": {
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "azure region where is deployed the vnet1"
        }
      },
      "adminUsername": {
        "type": "string",
        "metadata": {
          "description": "VM Admin username"
        },
        "value": "GEN-UNIQUE"
      },
      "adminPassword": {
        "type": "securestring",
        "metadata": {
          "description": "VM Admin password"
        },
        "value": "GEN-PASSWORD"
      },
      "vnetName": {
        "type": "string",
        "defaultValue": "vnet1",
        "metadata": {
          "description": "Virtual Network name"
        }
      },
      "addressSpace1Prefix": {
        "type": "string",
        "defaultValue": "10.1.0.0/16",
        "metadata": {
          "description": "Virtual Network address space"
        }
      },
      "subnet1Name": {
        "type": "string",
        "defaultValue": "RouteServerSubnet",
        "metadata": {
          "description": "subnet for hosting the Route Server. RouteServerSubnet is fixed name and it can't be changed."
        }
      },
      "subnet1Prefix": {
        "type": "string",
        "defaultValue": "10.1.1.0/24",
        "metadata": {
          "description": "address prefix assigned to the subnet1"
        }
      },
      "subnet2Name": {
        "type": "string",
        "defaultValue": "subnet2",
        "metadata": {
          "description": "name of the subnet2"
        }
      },
      "subnet2Prefix": {
        "type": "string",
        "defaultValue": "10.1.2.0/24",
        "metadata": {
          "description": "address prefix assigned to the subnet2"
        }
      },
      "subnet3Name": {
        "type": "string",
        "defaultValue": "subnet3",
        "metadata": {
          "description": "name of the subnet3"
        }
      },
      "subnet3Prefix": {
        "type": "string",
        "defaultValue": "10.1.3.0/24",
        "metadata": {
          "description": "address prefix assigned to the subnet3"
        }
      },
      "subnet4Name": {
        "type": "string",
        "defaultValue": "subnet4",
        "metadata": {
          "description": "name of the subnet4"
        }
      },
      "subnet4Prefix": {
        "type": "string",
        "defaultValue": "10.1.4.0/24",
        "metadata": {
          "description": "address prefix assigned to the subnet4"
        }
      },
      "gatewaysubnetPrefix": {
        "type": "string",
        "defaultValue": "10.1.5.0/24",
        "metadata": {
          "description": "address prefix assigned to the GatewaySubnet"
        }
      },
      "routeServerName": {
        "type": "string",
        "defaultValue": "routesrv1",
        "metadata": {
          "description": "Route Server name"
        }
      },
      "peering1IP": {
        "type": "string",
        "defaultValue": "10.1.4.10",
        "metadata": {
          "description": "private IP address of the VM running Quagga. it is the BGP remote peer of Route Server. The value is referenced in the quaggadeploy.sh script"
        }
      },
      "peering1ASN": {
        "type": "int",
        "defaultValue": 65001,
        "metadata": {
          "description": "ASN assigned to Quagga. The value is referenced in the script quaggadeploy.sh"
        }
      },
      "rsBGPconnectionName": {
        "type": "string",
        "defaultValue": "bgp-conn1",
        "metadata": {
          "description": "Route Server BGP connection name to establish the peer with Quagga"
        }
      },
      "vHubIPconfigName": {
        "type": "string",
        "defaultValue": "ipconfig1",
        "metadata": {
          "description": "Route Server configuration name"
        }
      },
      "vmName": {
        "type": "string",
        "defaultValue": "vm1",
        "metadata": {
          "description": "Virtual Machine name"
        }
      },
      "vmPrivIP": {
        "type": "string",
        "defaultValue": "10.1.4.10",
        "metadata": {
          "description": "private IP of the VM. This IP has to match with the IP specified in the quaggadeploy.sh bash script"
        }
      },
      "vmSize": {
        "type": "string",
        "defaultValue": "Standard_B2s",
        "metadata": {
          "description": "VM Size"
        }
      },
      "nsgName": {
        "type": "string",
        "defaultValue": "nsg1",
        "metadata": {
          "description": "name of the network security group applied to the subnets"
        }
      },
      "_artifactsLocation": {
        "type": "string",
        "metadata": {
          "description": "The base URI where artifacts required by this template are located. For example, if stored on a public GitHub repo, you'd use the following URI: https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/quickstarts/microsoft.network/route-server-quagga/"
        },
        "defaultValue": "[deployment().properties.templateLink.uri]"
      },
      "_artifactsLocationSasToken": {
        "type": "securestring",
        "metadata": {
          "description": "The sasToken required to access _artifactsLocation.  If your artifacts are stored on a public repo or public storage account you can leave this blank."
        },
        "defaultValue": ""
      }
    },
    "variables": {
      "location": "[resourceGroup().location]",
      "vnetName": "vnet1",
      "addressSpace1Prefix": "10.1.0.0/16",
      "subnet1Name": "RouteServerSubnet",
      "subnet1Prefix": "10.1.1.0/24",
      "subnet2Name": "subnet2",
      "subnet2Prefix": "10.1.2.0/24",
      "subnet3Name": "subnet3",
      "subnet3Prefix": "10.1.3.0/24",
      "subnet4Name": "subnet4",
      "subnet4Prefix": "10.1.4.0/24",
      "gatewaysubnetPrefix": "10.1.5.0/24",
      "rsName": "routesrv1",
      "peering1IP": "10.1.4.10",
      "peering1ASN": 65001,
      "rsBGPconnectionName": "bgp-conn1",
      "subnet_rs1_Id": "Microsoft.Network/virtualNetworks/subnets/vnet1/RouteServerSubnet",
      "vHubIPconfigName": "ipconfig1",
      "bgpConnectionName": "routesrv1/bgp-conn1",
      "rsPubIPName": "routesrv1-pubIP",
      "vmName": "vm1",
      "nicName": "vm1-nic",
      "vmPubIPName": "vm1-pubIP",
      "vmPrivIP": "10.1.4.10",
      "imageReference": {
        "publisher": "canonical",
        "offer": "0001-com-ubuntu-server-focal",
        "sku": "20_04-lts",
        "version": "latest"
      },
      "vmSize": "Standard_B2s",
      "nsgName": "nsg1",
      "scriptFolder": "scripts",
      "customScriptFilePath": "[uri(parameters('_artifactsLocation'), concat(variables('scriptFolder'), '/', 'quaggadeploy.sh', parameters('_artifactsLocationSasToken')))]"
    },
    "resources": [
      {
        "comments": "network security group",
        "type": "Microsoft.Network/networkSecurityGroups",
        "apiVersion": "2021-03-01",
        "name": "nsg1",
        "location": "[resourceGroup().location]",
        "properties": {
          "securityRules": [
            {
              "name": "SSH-rule",
              "properties": {
                "description": "allow SSH",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "22",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "VirtualNetwork",
                "access": "Allow",
                "priority": 100,
                "direction": "Inbound"
              }
            }
          ]
        }
      },
      {
        "comments": "Create VNet1. subnet1 is assigned to RouteServerSubnet. subnet4 is used for the Ubuntu VM",
        "type": "Microsoft.Network/virtualNetworks",
        "apiVersion": "2021-03-01",
        "name": "vnet1",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "Microsoft.Network/networkSecurityGroups/nsg1"
        ],
        "properties": {
          "addressSpace": {
            "addressPrefixes": [
              "10.1.0.0/16"
            ]
          },
          "subnets": [
            {
              "name": "RouteServerSubnet",
              "properties": {
                "addressPrefix": "10.1.1.0/24"
              }
            },
            {
              "name": "subnet2",
              "properties": {
                "addressPrefix": "10.1.2.0/24",
                "networkSecurityGroup": {
                  "id": "Microsoft.Network/networkSecurityGroups/nsg1"
                }
              }
            },
            {
              "name": "subnet3",
              "properties": {
                "addressPrefix": "10.1.3.0/24",
                "networkSecurityGroup": {
                  "id": "Microsoft.Network/networkSecurityGroups/nsg1"
                }
              }
            },
            {
              "name": "subnet4",
              "properties": {
                "addressPrefix": "10.1.4.0/24",
                "networkSecurityGroup": {
                  "id": "Microsoft.Network/networkSecurityGroups/nsg1"
                }
              }
            },
            {
              "name": "GatewaySubnet",
              "properties": {
                "addressPrefix": "10.1.5.0/24"
              }
            }
          ]
        }
      },
      {
        "comments": "create a virtual hub object",
        "type": "Microsoft.Network/virtualHubs",
        "apiVersion": "2021-03-01",
        "name": "routesrv1",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "Microsoft.Network/virtualNetworks/vnet1"
        ],
        "properties": {
          "sku": "Standard",
          "allowBranchToBranchTraffic": true
        },
        "resources": []
      },
      {
        "comments": "public IP of the route server",
        "type": "Microsoft.Network/publicIPAddresses",
        "name": "routesrv1-pubIP",
        "apiVersion": "2021-03-01",
        "location": "[resourceGroup().location]",
        "sku": {
          "name": "Standard"
        },
        "properties": {
          "publicIPAllocationMethod": "Static"
        }
      },
      {
        "comments": "create the Route Server and attach it to the RouteServerSubnet subnet",
        "type": "Microsoft.Network/virtualHubs/ipConfigurations",
        "apiVersion": "2021-03-01",
        "name": "routesrv1/ipconfig1",
        "dependsOn": [
          "Microsoft.Network/virtualHubs/routesrv1",
          "Microsoft.Network/publicIPAddresses/routesrv1-pubIP"
        ],
        "properties": {
          "privateIPAllocationMethod": "Dynamic",
          "subnet": {
            "id": "Microsoft.Network/virtualNetworks/subnets/vnet1/RouteServerSubnet"
          },
          "publicIPAddress": {
            "id": "Microsoft.Network/publicIPAddresses/routesrv1-pubIP"
          }
        }
      },
      {
        "comments": "name of the BGP connection configured on the Route Server. The BGP connection can be created when the Microsoft.Network/virtualHubs/ipConfigurations deployment complete.",
        "type": "Microsoft.Network/virtualHubs/bgpConnections",
        "apiVersion": "2021-03-01",
        "name": "routesrv1/bgp-conn1",
        "dependsOn": [
          "Microsoft.Network/virtualHubs/ipConfigurations/routesrv1/ipconfig1"
        ],
        "properties": {
          "peerIp": "10.1.4.10",
          "peerAsn": 65001
        }
      },
      {
        "comments": "public IP of the VM",
        "type": "Microsoft.Network/publicIPAddresses",
        "name": "vm1-pubIP",
        "apiVersion": "2021-03-01",
        "location": "[resourceGroup().location]",
        "sku": {
          "name": "Basic"
        },
        "properties": {
          "publicIPAllocationMethod": "Dynamic"
        }
      },
      {
        "comments": "Network interface of the VM attached to the subnet4",
        "type": "Microsoft.Network/networkInterfaces",
        "apiVersion": "2021-03-01",
        "name": "vm1-nic",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "Microsoft.Network/virtualNetworks/vnet1",
          "Microsoft.Network/publicIPAddresses/vm1-pubIP"
        ],
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipconf-nic0",
              "properties": {
                "privateIPAllocationMethod": "Static",
                "privateIPAddress": "10.1.4.10",
                "publicIPAddress": {
                  "id": "Microsoft.Network/publicIPAddresses/vm1-pubIP"
                },
                "subnet": {
                  "id": "Microsoft.Network/virtualNetworks/subnets/vnet1/subnet4"
                }
              }
            }
          ],
          "enableIPForwarding": true
        }
      },
      {
        "comments": "spin up the Azure VM",
        "type": "Microsoft.Compute/virtualMachines",
        "name": "(vmName)",
        "apiVersion": "2021-07-01",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "Microsoft.Network/networkInterfaces/vm1-nic"
        ],
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_B2s"
          },
          "osProfile": {
            "computerName": "vm1",
            "adminUsername": "GEN-UNIQUE",
            "adminPassword": "GEN-PASSWORD"
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "(imageReference).publisher",
              "offer": "(imageReference).offer",
              "sku": "(imageReference).sku",
              "version": "(imageReference).version"
            },
            "osDisk": {
              "name": "vm1-OSdisk",
              "caching": "ReadWrite",
              "createOption": "FromImage"
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "properties": {
                  "primary": true
                },
                "id": "Microsoft.Network/networkInterfaces/vm1-nic"
              }
            ]
          }
        }
      },
      {
        "comments": "customer script extension to install and set up Quagga",
        "type": "Microsoft.Compute/virtualMachines/extensions",
        "apiVersion": "2021-07-01",
        "name": "vm1/installQuagga",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "Microsoft.Compute/virtualMachines//vm1"
        ],
        "properties": {
          "publisher": "Microsoft.Azure.Extensions",
          "type": "CustomScript",
          "typeHandlerVersion": "2.0",
          "autoUpgradeMinorVersion": true,
          "settings": {
            "fileUris": [
              "[uri(parameters('_artifactsLocation'), concat(variables('scriptFolder'), '/', 'quaggadeploy.sh', parameters('_artifactsLocationSasToken')))]"
            ],
            "commandToExecute": "sh quaggadeploy.sh"
          }
        }
      }
    ],
    "\uff04schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#"
  }
}