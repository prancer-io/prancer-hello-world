{
  "structure": "filesystem",
  "error": null,
  "reference": "master",
  "contentType": "json",
  "source": "gitConnectorAzureQuickStart",
  "paths": [
    "/quickstarts/microsoft.network/azurefirewall-create-with-firewallpolicy-apprule-netrule-ipgroups/azuredeploy.json",
    "/quickstarts/microsoft.network/azurefirewall-create-with-firewallpolicy-apprule-netrule-ipgroups/azuredeploy.parameters.json"
  ],
  "timestamp": 1642962908530,
  "queryuser": null,
  "checksum": "99914b932bd37a50b983c5e7c90ae93b",
  "node": {
    "masterSnapshotId": "ARM_TEMPLATE_SNAPSHOT",
    "type": "arm",
    "collection": "armtemplate",
    "paths": [
      "/quickstarts/microsoft.network/azurefirewall-create-with-firewallpolicy-apprule-netrule-ipgroups/azuredeploy.json",
      "/quickstarts/microsoft.network/azurefirewall-create-with-firewallpolicy-apprule-netrule-ipgroups/azuredeploy.parameters.json"
    ],
    "snapshotId": "ARM_TEMPLATE_SNAPSHOT1504",
    "status": "active",
    "validate": true,
    "resourceTypes": [
      "microsoft.network/publicipaddresses",
      "microsoft.network/virtualnetworks",
      "microsoft.network/azurefirewalls",
      "microsoft.network/firewallpolicies/rulecollectiongroups",
      "microsoft.network/firewallpolicies",
      "microsoft.network/ipgroups"
    ]
  },
  "snapshotId": "ARM_TEMPLATE_SNAPSHOT1504",
  "collection": "armtemplate",
  "json": {
    "contentVersion": "1.0.0.0",
    "parameters": {
      "virtualNetworkName": {
        "type": "string",
        "defaultValue": "[concat('vnet', uniqueString(resourceGroup().id))]",
        "metadata": {
          "description": "Virtual network name"
        },
        "value": "GEN-VNET-TEST-01"
      },
      "firewallName": {
        "type": "string",
        "defaultValue": "",
        "metadata": {
          "description": "Azure Firewall name"
        },
        "value": "GEN-FIREWALL-TEST-01"
      },
      "numberOfPublicIPAddresses": {
        "type": "int",
        "defaultValue": 2,
        "minValue": 1,
        "maxValue": 100,
        "metadata": {
          "description": "Number of public IP addresses for the Azure Firewall"
        }
      },
      "availabilityZones": {
        "type": "array",
        "defaultValue": [],
        "metadata": {
          "description": "Zone numbers e.g. 1,2,3."
        }
      },
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Location for all resources."
        }
      },
      "infraipgroup": {
        "defaultValue": "[concat(parameters('location'),'-infra-ipgroup','-',uniqueString(resourceGroup().id))]",
        "type": "String"
      },
      "workloadipgroup": {
        "defaultValue": "[concat(parameters('location'),'-workload-ipgroup','-',uniqueString(resourceGroup().id))]",
        "type": "String"
      },
      "firewallPolicyName": {
        "defaultValue": "[concat(parameters('firewallName'),'-','firewallPolicy')]",
        "type": "String"
      }
    },
    "variables": {
      "vnetAddressPrefix": "10.10.0.0/24",
      "azureFirewallSubnetPrefix": "10.10.0.0/25",
      "publicIPNamePrefix": "publicIP",
      "azurepublicIpname": "publicIP",
      "azureFirewallSubnetName": "AzureFirewallSubnet",
      "azureFirewallSubnetId": "Microsoft.Network/virtualNetworks/subnets/GEN-VNET-TEST-01/AzureFirewallSubnet",
      "azureFirewallPublicIpId": "Microsoft.Network/publicIPAddresses/publicIP",
      "azureFirewallSubnetJSON": "[json(format('{{\"id\": \"{0}\"}}', variables('azureFirewallSubnetId')))]",
      "copy": [
        {
          "name": "azureFirewallIpConfigurations",
          "count": 2,
          "input": {
            "name": "[concat('IpConf', copyIndex('azureFirewallIpConfigurations'))]",
            "properties": {
              "subnet": "[if(equals(copyIndex('azureFirewallIpConfigurations'), 0), variables('azureFirewallSubnetJSON'), json('null'))]",
              "publicIPAddress": {
                "id": "[concat(variables('azureFirewallPublicIpId'), add(copyIndex('azureFirewallIpConfigurations'), 1))]"
              }
            }
          }
        }
      ]
    },
    "resources": [
      {
        "type": "Microsoft.Network/ipGroups",
        "apiVersion": "2019-12-01",
        "name": "[concat(parameters('location'),'-workload-ipgroup','-',uniqueString(resourceGroup().id))]",
        "location": "[resourceGroup().location]",
        "properties": {
          "ipAddresses": [
            "10.20.0.0/24",
            "10.30.0.0/24"
          ]
        }
      },
      {
        "type": "Microsoft.Network/ipGroups",
        "apiVersion": "2019-12-01",
        "name": "[concat(parameters('location'),'-infra-ipgroup','-',uniqueString(resourceGroup().id))]",
        "location": "[resourceGroup().location]",
        "properties": {
          "ipAddresses": [
            "10.40.0.0/24",
            "10.50.0.0/24"
          ]
        }
      },
      {
        "name": "GEN-VNET-TEST-01",
        "apiVersion": "2019-04-01",
        "type": "Microsoft.Network/virtualNetworks",
        "location": "[resourceGroup().location]",
        "tags": {
          "displayName": "GEN-VNET-TEST-01"
        },
        "properties": {
          "addressSpace": {
            "addressPrefixes": [
              "10.10.0.0/24"
            ]
          },
          "subnets": [
            {
              "name": "AzureFirewallSubnet",
              "properties": {
                "addressPrefix": "10.10.0.0/25"
              }
            }
          ],
          "enableDdosProtection": false
        }
      },
      {
        "name": "[concat(variables('azurepublicIpname'), add(copyIndex(), 1))]",
        "type": "Microsoft.Network/publicIPAddresses",
        "apiVersion": "2019-04-01",
        "location": "[resourceGroup().location]",
        "sku": {
          "name": "Standard"
        },
        "properties": {
          "publicIPAllocationMethod": "Static",
          "publicIPAddressVersion": "IPv4"
        },
        "copy": {
          "name": "publicIpCopy",
          "count": 2
        }
      },
      {
        "apiVersion": "2020-05-01",
        "type": "Microsoft.Network/firewallPolicies",
        "name": "[concat(parameters('firewallName'),'-','firewallPolicy')]",
        "location": "[resourceGroup().location]",
        "properties": {
          "threatIntelMode": "Alert"
        }
      },
      {
        "type": "Microsoft.Network/firewallPolicies/ruleCollectionGroups",
        "apiVersion": "2020-05-01",
        "name": "[concat(parameters('firewallName'),'-','firewallPolicy')]/DefaultNetworkRuleCollectionGroup",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "Microsoft.Network/ipGroups/[concat(parameters('location'),'-workload-ipgroup','-',uniqueString(resourceGroup().id))]",
          "Microsoft.Network/ipGroups/[concat(parameters('location'),'-infra-ipgroup','-',uniqueString(resourceGroup().id))]",
          "Microsoft.Network/firewallPolicies/[concat(parameters('firewallName'),'-','firewallPolicy')]"
        ],
        "properties": {
          "priority": 200,
          "ruleCollections": [
            {
              "ruleCollectionType": "FirewallPolicyFilterRuleCollection",
              "action": {
                "type": "Allow"
              },
              "name": "azure-global-services-nrc",
              "priority": 1250,
              "rules": [
                {
                  "ruleType": "NetworkRule",
                  "name": "time-windows",
                  "ipProtocols": [
                    "UDP"
                  ],
                  "destinationAddresses": [
                    "13.86.101.172"
                  ],
                  "sourceIpGroups": [
                    "Microsoft.Network/ipGroups/[concat(parameters('location'),'-workload-ipgroup','-',uniqueString(resourceGroup().id))]",
                    "Microsoft.Network/ipGroups/[concat(parameters('location'),'-infra-ipgroup','-',uniqueString(resourceGroup().id))]"
                  ],
                  "destinationPorts": [
                    "123"
                  ]
                }
              ]
            }
          ]
        }
      },
      {
        "apiVersion": "2020-05-01",
        "type": "Microsoft.Network/firewallPolicies/ruleCollectionGroups",
        "name": "[concat(parameters('firewallName'),'-','firewallPolicy')]/DefaultApplicationRuleCollectionGroup",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "Microsoft.Network/ipGroups/[concat(parameters('location'),'-workload-ipgroup','-',uniqueString(resourceGroup().id))]",
          "Microsoft.Network/ipGroups/[concat(parameters('location'),'-infra-ipgroup','-',uniqueString(resourceGroup().id))]",
          "Microsoft.Network/firewallPolicies/ruleCollectionGroups/[concat(parameters('firewallName'),'-','firewallPolicy')]/DefaultNetworkRuleCollectionGroup"
        ],
        "properties": {
          "priority": 300,
          "ruleCollections": [
            {
              "ruleCollectionType": "FirewallPolicyFilterRuleCollection",
              "name": "global-rule-url-arc",
              "priority": 1000,
              "action": {
                "type": "Allow"
              },
              "rules": [
                {
                  "ruleType": "ApplicationRule",
                  "name": "winupdate-rule-01",
                  "protocols": [
                    {
                      "protocolType": "Https",
                      "port": 443
                    },
                    {
                      "protocolType": "Http",
                      "port": 80
                    }
                  ],
                  "fqdnTags": [
                    "WindowsUpdate"
                  ],
                  "terminateTLS": false,
                  "sourceIpGroups": [
                    "Microsoft.Network/ipGroups/[concat(parameters('location'),'-workload-ipgroup','-',uniqueString(resourceGroup().id))]",
                    "Microsoft.Network/ipGroups/[concat(parameters('location'),'-infra-ipgroup','-',uniqueString(resourceGroup().id))]"
                  ]
                }
              ]
            },
            {
              "ruleCollectionType": "FirewallPolicyFilterRuleCollection",
              "action": {
                "type": "Allow"
              },
              "name": "Global-rules-arc",
              "priority": 1202,
              "rules": [
                {
                  "ruleType": "ApplicationRule",
                  "name": "global-rule-01",
                  "protocols": [
                    {
                      "protocolType": "Https",
                      "port": 443
                    }
                  ],
                  "targetFqdns": [
                    "www.microsoft.com"
                  ],
                  "terminateTLS": false,
                  "sourceIpGroups": [
                    "Microsoft.Network/ipGroups/[concat(parameters('location'),'-workload-ipgroup','-',uniqueString(resourceGroup().id))]",
                    "Microsoft.Network/ipGroups/[concat(parameters('location'),'-infra-ipgroup','-',uniqueString(resourceGroup().id))]"
                  ]
                }
              ]
            }
          ]
        }
      },
      {
        "apiVersion": "2019-04-01",
        "type": "Microsoft.Network/azureFirewalls",
        "name": "GEN-FIREWALL-TEST-01",
        "location": "[resourceGroup().location]",
        "zones": "[if(equals(length(parameters('availabilityZones')), 0), json('null'), parameters('availabilityZones'))]",
        "dependsOn": [
          "Microsoft.Network/virtualNetworks/GEN-VNET-TEST-01",
          "publicIpCopy",
          "Microsoft.Network/ipGroups/[concat(parameters('location'),'-workload-ipgroup','-',uniqueString(resourceGroup().id))]",
          "Microsoft.Network/ipGroups/[concat(parameters('location'),'-infra-ipgroup','-',uniqueString(resourceGroup().id))]",
          "Microsoft.Network/firewallPolicies/[concat(parameters('firewallName'),'-','firewallPolicy')]",
          "Microsoft.Network/firewallPolicies/ruleCollectionGroups/[concat(parameters('firewallName'),'-','firewallPolicy')]/DefaultNetworkRuleCollectionGroup",
          "Microsoft.Network/firewallPolicies/ruleCollectionGroups/[concat(parameters('firewallName'),'-','firewallPolicy')]/DefaultApplicationRuleCollectionGroup"
        ],
        "properties": {
          "ipConfigurations": "azureFirewallIpConfigurations",
          "firewallPolicy": {
            "id": "Microsoft.Network/firewallPolicies/[concat(parameters('firewallName'),'-','firewallPolicy')]"
          }
        }
      }
    ],
    "\uff04schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#"
  }
}