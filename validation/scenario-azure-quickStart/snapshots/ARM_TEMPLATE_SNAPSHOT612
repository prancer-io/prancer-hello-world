{
  "structure": "filesystem",
  "error": null,
  "reference": "master",
  "contentType": "json",
  "source": "gitConnectorAzureQuickStart",
  "paths": [
    "/demos/application-gateway-logviewer-goaccess/azuredeploy.json",
    "/demos/application-gateway-logviewer-goaccess/azuredeploy.parameters.json"
  ],
  "timestamp": 1642962898022,
  "queryuser": null,
  "checksum": "99914b932bd37a50b983c5e7c90ae93b",
  "node": {
    "masterSnapshotId": "ARM_TEMPLATE_SNAPSHOT",
    "type": "arm",
    "collection": "armtemplate",
    "paths": [
      "/demos/application-gateway-logviewer-goaccess/azuredeploy.json",
      "/demos/application-gateway-logviewer-goaccess/azuredeploy.parameters.json"
    ],
    "snapshotId": "ARM_TEMPLATE_SNAPSHOT612",
    "status": "active",
    "validate": true,
    "resourceTypes": [
      "microsoft.network/publicipaddresses",
      "microsoft.network/virtualnetworks",
      "microsoft.network/networkinterfaces",
      "microsoft.compute/virtualmachines/extensions",
      "microsoft.compute/virtualmachines",
      "microsoft.network/networksecuritygroups"
    ]
  },
  "snapshotId": "ARM_TEMPLATE_SNAPSHOT612",
  "collection": "armtemplate",
  "json": {
    "contentVersion": "1.0.0.0",
    "parameters": {
      "adminUsername": {
        "type": "string",
        "metadata": {
          "description": "Username you want to use for the VM the template creates"
        },
        "value": "GEN-UNIQUE"
      },
      "vmSize": {
        "type": "string",
        "defaultValue": "Standard_A2_v2",
        "metadata": {
          "description": "Size of the VM"
        },
        "value": "Standard_A2_v2"
      },
      "dnsNameForPublicIP": {
        "type": "string",
        "defaultValue": "[uniqueString(resourceGroup().id)]",
        "metadata": {
          "description": "The DNS name (prefix) you want to use for the VM to map against its public IP"
        }
      },
      "appGwAccessLogsBlobSasUri": {
        "type": "string",
        "metadata": {
          "description": "The SAS URL connection string for the storage account blog where your Application Gateway Access Logs are stored"
        },
        "value": "GEN-UNIQUE-24"
      },
      "filterRegexForAppGwAccessLogs": {
        "type": "string",
        "defaultValue": ".*",
        "metadata": {
          "description": "A regex to use to filter the Application Gateway Access Logs to a specific subset. For example, if you have multiple application gateways publishing logs to the same storage account blob, and you only want GoAccess to surface traffic stats for say one of the Application Gateways, you can provide a regex for this field to filter to just that instance."
        },
        "value": ".*"
      },
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Location for all resources."
        }
      },
      "_artifactsLocation": {
        "type": "string",
        "metadata": {
          "description": "The base URI where artifacts required by this template are located including a trailing '/'"
        },
        "defaultValue": "[deployment().properties.templateLink.uri]"
      },
      "_artifactsLocationSasToken": {
        "type": "securestring",
        "metadata": {
          "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated. Use the defaultValue if the staging location is not secured."
        },
        "defaultValue": ""
      },
      "authenticationType": {
        "type": "string",
        "defaultValue": "sshPublicKey",
        "allowedValues": [
          "sshPublicKey",
          "password"
        ],
        "metadata": {
          "description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."
        }
      },
      "adminPasswordOrKey": {
        "type": "securestring",
        "metadata": {
          "description": "SSH Key or password for the Virtual Machine. SSH key is recommended."
        },
        "value": "GEN-SSH-PUB-KEY"
      }
    },
    "variables": {
      "vmName": "[uniqueString(resourceGroup().id)]",
      "nicName": "[uniqueString(resourceGroup().id)]_vmnic",
      "addressPrefix": "10.0.0.0/16",
      "subnetPrefix": "10.0.0.0/24",
      "subnetName": "DefaultSubnet",
      "publicIPAddressName": "[uniqueString(resourceGroup().id)]_publicip",
      "virtualNetworkName": "[uniqueString(resourceGroup().id)]_vnet",
      "networkSecurityGroupName": "[uniqueString(resourceGroup().id)]_nsg",
      "subnetRef": "Microsoft.Network/virtualNetworks/subnets/[uniqueString(resourceGroup().id)]_vnet/DefaultSubnet",
      "scriptFileUri": "[uri(parameters('_artifactsLocation'), concat('scripts/setup_vm.sh', parameters('_artifactsLocationSasToken')))]",
      "appGatewayLogProcessorArtifactUri": "[uri(parameters('_artifactsLocation'), concat('scripts/AppGatewayLogProcessor.zip', parameters('_artifactsLocationSasToken')))]",
      "appGwAccessLogsBlobSasUriVar": "\"GEN-UNIQUE-24\"",
      "filterRegexForAppGwAccessLogsVar": "\"|.*|\"",
      "linuxConfiguration": {
        "disablePasswordAuthentication": true,
        "ssh": {
          "publicKeys": [
            {
              "path": "/home/GEN-UNIQUE/.ssh/authorized_keys",
              "keyData": "GEN-SSH-PUB-KEY"
            }
          ]
        }
      }
    },
    "resources": [
      {
        "apiVersion": "2020-11-01",
        "type": "Microsoft.Network/publicIPAddresses",
        "name": "[uniqueString(resourceGroup().id)]_publicip",
        "location": "[resourceGroup().location]",
        "properties": {
          "publicIPAllocationMethod": "Dynamic",
          "dnsSettings": {
            "domainNameLabel": "[uniqueString(resourceGroup().id)]"
          }
        }
      },
      {
        "apiVersion": "2018-08-01",
        "type": "Microsoft.Network/networkSecurityGroups",
        "name": "[uniqueString(resourceGroup().id)]_nsg",
        "location": "[resourceGroup().location]",
        "properties": {
          "securityRules": [
            {
              "name": "ssh",
              "properties": {
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "22",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 132,
                "direction": "Inbound"
              }
            },
            {
              "name": "http",
              "properties": {
                "provisioningState": "Succeeded",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "80",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 131,
                "direction": "Inbound"
              }
            },
            {
              "name": "https",
              "properties": {
                "provisioningState": "Succeeded",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "443",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 130,
                "direction": "Inbound"
              }
            },
            {
              "name": "GoAccessSocket",
              "properties": {
                "provisioningState": "Succeeded",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "8080",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 129,
                "direction": "Inbound"
              }
            }
          ]
        }
      },
      {
        "apiVersion": "2018-08-01",
        "type": "Microsoft.Network/virtualNetworks",
        "name": "[uniqueString(resourceGroup().id)]_vnet",
        "location": "[resourceGroup().location]",
        "properties": {
          "addressSpace": {
            "addressPrefixes": [
              "10.0.0.0/16"
            ]
          },
          "subnets": [
            {
              "name": "DefaultSubnet",
              "properties": {
                "addressPrefix": "10.0.0.0/24"
              }
            }
          ]
        }
      },
      {
        "apiVersion": "2018-08-01",
        "type": "Microsoft.Network/networkInterfaces",
        "name": "[uniqueString(resourceGroup().id)]_vmnic",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "Microsoft.Network/publicIPAddresses//[uniqueString(resourceGroup().id)]_publicip",
          "Microsoft.Network/virtualNetworks//[uniqueString(resourceGroup().id)]_vnet",
          "Microsoft.Network/networkSecurityGroups//[uniqueString(resourceGroup().id)]_nsg"
        ],
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipconfig1",
              "properties": {
                "privateIPAllocationMethod": "Dynamic",
                "publicIPAddress": {
                  "id": "Microsoft.Network/publicIPAddresses/[uniqueString(resourceGroup().id)]_publicip"
                },
                "subnet": {
                  "id": "Microsoft.Network/virtualNetworks/subnets/[uniqueString(resourceGroup().id)]_vnet/DefaultSubnet"
                }
              }
            }
          ],
          "networkSecurityGroup": {
            "id": "Microsoft.Network/networkSecurityGroups/[uniqueString(resourceGroup().id)]_nsg"
          }
        }
      },
      {
        "apiVersion": "2018-06-01",
        "type": "Microsoft.Compute/virtualMachines",
        "name": "[uniqueString(resourceGroup().id)]",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "Microsoft.Network/networkInterfaces//[uniqueString(resourceGroup().id)]_vmnic"
        ],
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_A2_v2"
          },
          "osProfile": {
            "computerName": "[uniqueString(resourceGroup().id)]",
            "adminUsername": "GEN-UNIQUE",
            "adminPassword": "GEN-SSH-PUB-KEY",
            "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]"
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "Canonical",
              "offer": "UbuntuServer",
              "sku": "18.04-LTS",
              "version": "latest"
            },
            "osDisk": {
              "name": "[uniqueString(resourceGroup().id)]_osdisk",
              "caching": "ReadWrite",
              "createOption": "FromImage",
              "managedDisk": {
                "storageAccountType": "StandardSSD_LRS"
              }
            },
            "dataDisks": [
              {
                "name": "[uniqueString(resourceGroup().id)]_datadisk1",
                "diskSizeGB": 1023,
                "lun": 0,
                "createOption": "Empty",
                "managedDisk": {
                  "storageAccountType": "StandardSSD_LRS"
                }
              }
            ]
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "Microsoft.Network/networkInterfaces/[uniqueString(resourceGroup().id)]_vmnic"
              }
            ]
          }
        }
      },
      {
        "type": "Microsoft.Compute/virtualMachines/extensions",
        "name": "[uniqueString(resourceGroup().id)]/newuserscript",
        "apiVersion": "2018-06-01",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "Microsoft.Compute/virtualMachines//[uniqueString(resourceGroup().id)]"
        ],
        "properties": {
          "publisher": "Microsoft.Azure.Extensions",
          "type": "CustomScript",
          "typeHandlerVersion": "2.0",
          "autoUpgradeMinorVersion": true,
          "settings": {
            "fileUris": [
              "[uri(parameters('_artifactsLocation'), concat('scripts/setup_vm.sh', parameters('_artifactsLocationSasToken')))]",
              "[uri(parameters('_artifactsLocation'), concat('scripts/AppGatewayLogProcessor.zip', parameters('_artifactsLocationSasToken')))]"
            ],
            "commandToExecute": "sh setup_vm.sh \"GEN-UNIQUE-24\" \"|.*|\""
          }
        }
      }
    ],
    "outputs": {
      "goAccessReportUrl": {
        "type": "string",
        "value": "[concat(reference(variables('publicIPAddressName')).dnsSettings.fqdn, '/report.html')]"
      },
      "sshCommand": {
        "type": "string",
        "value": "[concat('ssh ', parameters('adminUsername'), '@', reference(variables('publicIPAddressName')).dnsSettings.fqdn)]"
      }
    },
    "\uff04schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#"
  }
}