{
  "structure": "filesystem",
  "error": null,
  "reference": "master",
  "contentType": "json",
  "source": "gitConnectorAzureQuickStart",
  "paths": [
    "/quickstarts/microsoft.network/site-to-site-vpn-fqdn-bgp/azuredeploy.json",
    "/quickstarts/microsoft.network/site-to-site-vpn-fqdn-bgp/azuredeploy.parameters.json"
  ],
  "timestamp": 1642962909468,
  "queryuser": null,
  "checksum": "99914b932bd37a50b983c5e7c90ae93b",
  "node": {
    "masterSnapshotId": "ARM_TEMPLATE_SNAPSHOT",
    "type": "arm",
    "collection": "armtemplate",
    "paths": [
      "/quickstarts/microsoft.network/site-to-site-vpn-fqdn-bgp/azuredeploy.json",
      "/quickstarts/microsoft.network/site-to-site-vpn-fqdn-bgp/azuredeploy.parameters.json"
    ],
    "snapshotId": "ARM_TEMPLATE_SNAPSHOT1592",
    "status": "active",
    "validate": true,
    "resourceTypes": [
      "microsoft.network/publicipaddresses",
      "microsoft.network/virtualnetworks",
      "microsoft.network/networkinterfaces",
      "microsoft.network/virtualnetworkgateways",
      "microsoft.network/localnetworkgateways",
      "microsoft.network/connections",
      "microsoft.network/networksecuritygroups",
      "microsoft.compute/virtualmachines"
    ]
  },
  "snapshotId": "ARM_TEMPLATE_SNAPSHOT1592",
  "collection": "armtemplate",
  "json": {
    "contentVersion": "1.0.0.0",
    "parameters": {
      "prefix": {
        "type": "string",
        "defaultValue": "",
        "metadata": {
          "description": "naming prefix of the objects in the resource. it can be an empty string."
        }
      },
      "location1": {
        "type": "string",
        "allowedValues": [
          "canadacentral",
          "francecentral",
          "germanywestcentral",
          "japaneast",
          "centralus",
          "northeurope",
          "southeastasia",
          "eastus",
          "uksouth",
          "australiaeast",
          "eastus2",
          "westeurope",
          "southcentralus",
          "westus2"
        ],
        "metadata": {
          "description": "First Azure region with Availability Zone"
        },
        "value": "eastus"
      },
      "location2": {
        "type": "string",
        "allowedValues": [
          "canadacentral",
          "francecentral",
          "germanywestcentral",
          "japaneast",
          "centralus",
          "northeurope",
          "southeastasia",
          "eastus",
          "uksouth",
          "australiaeast",
          "eastus2",
          "westeurope",
          "southcentralus",
          "westus2"
        ],
        "metadata": {
          "description": "Second Azure region with Availability Zone"
        },
        "value": "eastus"
      },
      "vNet1Name": {
        "type": "string",
        "defaultValue": "[concat(parameters('prefix'),'vnet1')]",
        "metadata": {
          "description": "Arbitrary name for the Azure Virtual Network 1"
        }
      },
      "vNet2Name": {
        "type": "string",
        "defaultValue": "[concat(parameters('prefix'),'vnet2')]",
        "metadata": {
          "description": "Arbitrary name for the Azure Virtual Network 2"
        }
      },
      "vNet1AddressPrefix": {
        "type": "string",
        "defaultValue": "10.1.0.0/16",
        "metadata": {
          "description": "CIDR block representing the address space of the Azure VNet 1"
        }
      },
      "vNet2AddressPrefix": {
        "type": "string",
        "defaultValue": "10.2.0.0/16",
        "metadata": {
          "description": "CIDR block representing the address space of the Azure VNet 2"
        }
      },
      "subnet11Name": {
        "type": "string",
        "defaultValue": "subnet11",
        "metadata": {
          "description": "Arbitrary name for the Azure subnet1 in VNet1"
        }
      },
      "subnet12Name": {
        "type": "string",
        "defaultValue": "subnet12",
        "metadata": {
          "description": "Arbitrary name for the Azure subnet2 in VNet1"
        }
      },
      "subnet21Name": {
        "type": "string",
        "defaultValue": "subnet21",
        "metadata": {
          "description": "Arbitrary name for the Azure subnet1 in VNet2"
        }
      },
      "subnet22Name": {
        "type": "string",
        "defaultValue": "subnet22",
        "metadata": {
          "description": "Arbitrary name for the Azure subnet2 in VNet2"
        }
      },
      "subnet11Prefix": {
        "type": "string",
        "defaultValue": "10.1.1.0/24",
        "metadata": {
          "description": "CIDR block for subnet1 in VNet1- it is a subset of vNet1AddressPrefix address space"
        }
      },
      "subnet12Prefix": {
        "type": "string",
        "defaultValue": "10.1.2.0/24",
        "metadata": {
          "description": "CIDR block for subnet2 in VNet1- it is a subset of vNet1AddressPrefix address space"
        }
      },
      "gateway1subnetPrefix": {
        "type": "string",
        "defaultValue": "10.1.3.0/24",
        "metadata": {
          "description": "CIDR block for gateway subnet- it is a subset of vNet1AddressPrefix address space"
        }
      },
      "subnet21Prefix": {
        "type": "string",
        "defaultValue": "10.2.1.0/24",
        "metadata": {
          "description": "CIDR block for subnet1 in VNet2- it is a subset of vNet2AddressPrefix address space"
        }
      },
      "subnet22Prefix": {
        "type": "string",
        "defaultValue": "10.2.2.0/24",
        "metadata": {
          "description": "CIDR block for subnet2 in VNet2- it is a subset of vNet2AddressPrefix address space"
        }
      },
      "gateway2subnetPrefix": {
        "type": "string",
        "defaultValue": "10.2.3.0/24",
        "metadata": {
          "description": "CIDR block for gateway subnet- it is a subset of vNet2AddressPrefix address space"
        }
      },
      "gateway1Name": {
        "type": "string",
        "defaultValue": "[concat(parameters('prefix'),'gw1')]",
        "metadata": {
          "description": "Arbitrary name for the new gateway1"
        }
      },
      "gateway2Name": {
        "type": "string",
        "defaultValue": "[concat(parameters('prefix'),'gw2')]",
        "metadata": {
          "description": "Arbitrary name for the new gateway2"
        }
      },
      "gateway1PublicIP1Name": {
        "type": "string",
        "defaultValue": "[concat(parameters('gateway1Name'),'IP1')]",
        "metadata": {
          "description": "Arbitrary name for public IP1 resource used for the new azure gateway1"
        }
      },
      "gateway1PublicIP2Name": {
        "type": "string",
        "defaultValue": "[concat(parameters('gateway1Name'),'IP2')]",
        "metadata": {
          "description": "Arbitrary name for public IP2 resource used for the new azure gateway1"
        }
      },
      "gateway2PublicIP1Name": {
        "type": "string",
        "defaultValue": "[concat(parameters('gateway2Name'),'IP1')]",
        "metadata": {
          "description": "Arbitrary name for public IP1 resource used for the new azure gateway2"
        }
      },
      "gateway2PublicIP2Name": {
        "type": "string",
        "defaultValue": "[concat(parameters('gateway2Name'),'IP2')]",
        "metadata": {
          "description": "Arbitrary name for public IP2 resource used for the new azure gateway2"
        }
      },
      "gatewaySku": {
        "type": "string",
        "defaultValue": "VpnGw2AZ",
        "allowedValues": [
          "VpnGw1AZ",
          "VpnGw2AZ",
          "VpnGw3AZ",
          "VpnGw4AZ",
          "VpnGw5AZ"
        ],
        "metadata": {
          "description": "The Sku of the Gateway"
        }
      },
      "vpnGatewayGeneration": {
        "type": "string",
        "defaultValue": "Generation2",
        "allowedValues": [
          "Generation1",
          "Generation2"
        ]
      },
      "asnGtw1": {
        "type": "int",
        "defaultValue": 65001,
        "metadata": {
          "description": "BGP Autonomous System Number of the VPN Gateway1 in VNet1"
        }
      },
      "asnGtw2": {
        "type": "int",
        "defaultValue": 65002,
        "metadata": {
          "description": "BGP Autonomous System Number of the VPN Gateway2 in VNet2"
        }
      },
      "localGatewayName11": {
        "type": "string",
        "defaultValue": "[concat(parameters('prefix'),'localGateway11')]",
        "metadata": {
          "description": "Arbitrary name for gateway resource representing VPN gateway1-public IP1"
        }
      },
      "localGatewayName12": {
        "type": "string",
        "defaultValue": "[concat(parameters('prefix'),'localGateway12')]",
        "metadata": {
          "description": "Arbitrary name for gateway resource representing VPN gateway1-publicIP2"
        }
      },
      "localGatewayName21": {
        "type": "string",
        "defaultValue": "[concat(parameters('prefix'),'localGateway21')]",
        "metadata": {
          "description": "Arbitrary name for gateway resource representing VPN gateway2-publicIP1"
        }
      },
      "localGatewayName22": {
        "type": "string",
        "defaultValue": "[concat(parameters('prefix'),'localGateway22')]",
        "metadata": {
          "description": "Arbitrary name for gateway resource representing VPN gateway2-publicIP2"
        }
      },
      "connectionName11-21": {
        "type": "string",
        "defaultValue": "[concat(parameters('gateway1Name'),'-to-', parameters('gateway2PublicIP1Name'))]",
        "metadata": {
          "description": "Arbitrary name for the new connection between VPN gateway1 and the remote VPN Gateway2-public IP1"
        }
      },
      "connectionName12-22": {
        "type": "string",
        "defaultValue": "[concat(parameters('gateway1Name'),'-to-', parameters('gateway2PublicIP2Name'))]",
        "metadata": {
          "description": "Arbitrary name for the new connection between VPN gateway1 and the remote VPN Gateway2-public IP2"
        }
      },
      "connectionName21-11": {
        "type": "string",
        "defaultValue": "[concat(parameters('gateway2Name'),'-to-', parameters('gateway1PublicIP1Name'))]",
        "metadata": {
          "description": "Arbitrary name for the new connection between VPN gateway2 and the remote VPN Gateway1-public IP1"
        }
      },
      "connectionName22-12": {
        "type": "string",
        "defaultValue": "[concat(parameters('gateway2Name'),'-to-', parameters('gateway1PublicIP2Name'))]",
        "metadata": {
          "description": "Arbitrary name for the new connection between VPN gateway2 and the remote VPN Gateway1-public IP2"
        }
      },
      "sharedKey": {
        "type": "string",
        "defaultValue": "_your_Pre-Shared-Secret",
        "metadata": {
          "description": "Shared key (PSK) for IPSec tunnels"
        },
        "value": "GEN-PASSWORD"
      },
      "vm1Name": {
        "type": "string",
        "defaultValue": "[concat(parameters('prefix'),'vm1')]",
        "metadata": {
          "description": "name of the VM in subnet1 in VNet1"
        }
      },
      "vm2Name": {
        "type": "string",
        "defaultValue": "[concat(parameters('prefix'),'vm2')]",
        "metadata": {
          "description": "name of the VM in subnet1 in VNet2"
        }
      },
      "vmSize": {
        "type": "string",
        "defaultValue": "Standard_B1s",
        "allowedValues": [
          "Standard_B1ls",
          "Standard_B1s",
          "Standard_D2s_v3",
          "Standard_D16s_v3"
        ],
        "metadata": {
          "description": "Size of the Virtual Machine"
        }
      },
      "adminUsername": {
        "type": "string",
        "metadata": {
          "description": "administrator username of the VMs"
        },
        "value": "GEN-UNIQUE"
      },
      "adminPassword": {
        "type": "securestring",
        "metadata": {
          "description": "administrator password of the VMs"
        },
        "value": "GEN-PASSWORD"
      },
      "dnsLabelgtw1PubIP1": {
        "type": "string",
        "defaultValue": "[toLower( concat( 'gtw1-ip1-', uniqueString(resourceGroup().id) ))]",
        "metadata": {
          "description": "dns name of public IP1 of the VPN Gateway1. Must be lowercase. It should match with the regex: ^[a-z][a-z0-9-]{1,61}[a-z0-9]$."
        }
      },
      "dnsLabelgtw1PubIP2": {
        "type": "string",
        "defaultValue": "[toLower( concat( 'gtw1-ip2-', uniqueString(resourceGroup().id) ))]",
        "metadata": {
          "description": "dns name of public IP2 of the VPN Gateway1. Must be lowercase. It should match with the regex: ^[a-z][a-z0-9-]{1,61}[a-z0-9]$."
        }
      },
      "dnsLabelgtw2PubIP1": {
        "type": "string",
        "defaultValue": "[toLower( concat( 'gtw2-ip1-', uniqueString(resourceGroup().id) ))]",
        "metadata": {
          "description": "dns name of public IP1 of the VPN Gateway2. Must be lowercase. It should match with the regex: ^[a-z][a-z0-9-]{1,61}[a-z0-9]$."
        }
      },
      "dnsLabelgtw2PubIP2": {
        "type": "string",
        "defaultValue": "[toLower( concat( 'gtw2-ip2-', uniqueString(resourceGroup().id) ))]",
        "metadata": {
          "description": "dns name of public IP2 of the VPN Gateway2. Must be lowercase. It should match with the regex: ^[a-z][a-z0-9-]{1,61}[a-z0-9]$."
        }
      }
    },
    "variables": {
      "location1": "eastus",
      "location2": "eastus",
      "vNet1Name": "parameters('prefix')vnet1",
      "vNet2Name": "parameters('prefix')vnet2",
      "subnet11Name": "subnet11",
      "subnet12Name": "subnet12",
      "subnet21Name": "subnet21",
      "subnet22Name": "subnet22",
      "vNet1AddressPrefix": "10.1.0.0/16",
      "vNet2AddressPrefix": "10.2.0.0/16",
      "subnet11Prefix": "10.1.1.0/24",
      "subnet12Prefix": "10.1.2.0/24",
      "subnet21Prefix": "10.2.1.0/24",
      "subnet22Prefix": "10.2.2.0/24",
      "gateway1SubnetPrefix": "gateway1SubnetPrefix",
      "gateway2SubnetPrefix": "gateway2SubnetPrefix",
      "gateway1subnetRef": "(Microsoft.Network/virtualNetworks/subnets,variables(vNet1Name),GatewaySubnet)",
      "gateway2subnetRef": "(Microsoft.Network/virtualNetworks/subnets,variables(vNet2Name),GatewaySubnet)",
      "subnet11Ref": "Microsoft.Network/virtualNetworks/subnets/[concat(parameters('prefix'),'vnet1')]/subnet11",
      "subnet21Ref": "Microsoft.Network/virtualNetworks/subnets/[concat(parameters('prefix'),'vnet2')]/subnet21",
      "gateway1Name": "parameters('prefix')gw1",
      "gateway2Name": "parameters('prefix')gw2",
      "gateway1PublicIP1Name": "[concat(parameters('prefix'),'gw1')]IP1",
      "gateway1PublicIP2Name": "[concat(parameters('prefix'),'gw1')]IP2",
      "gateway2PublicIP1Name": "[concat(parameters('prefix'),'gw2')]IP1",
      "gateway2PublicIP2Name": "[concat(parameters('prefix'),'gw2')]IP2",
      "gateway2PublicIP1Id": "Microsoft.Network/publicIPAddresses/[concat(parameters('gateway2Name'),'IP1')]",
      "gateway2PublicIP2Id": "Microsoft.Network/publicIPAddresses/[concat(parameters('gateway2Name'),'IP2')]",
      "gateway1PublicIP1Id": "Microsoft.Network/publicIPAddresses/[concat(parameters('gateway1Name'),'IP1')]",
      "gateway1PublicIP2Id": "Microsoft.Network/publicIPAddresses/[concat(parameters('gateway1Name'),'IP2')]",
      "dnsLabelgtw1PubIP1": "[toLower( concat( 'gtw1-ip1-', uniqueString(resourceGroup().id) ))]",
      "dnsLabelgtw1PubIP2": "[toLower( concat( 'gtw1-ip2-', uniqueString(resourceGroup().id) ))]",
      "dnsLabelgtw2PubIP1": "[toLower( concat( 'gtw2-ip1-', uniqueString(resourceGroup().id) ))]",
      "dnsLabelgtw2PubIP2": "[toLower( concat( 'gtw2-ip2-', uniqueString(resourceGroup().id) ))]",
      "asnGtw1": 65001,
      "asnGtw2": 65002,
      "localGatewayName11": "parameters('prefix')localGateway11",
      "localGatewayName12": "parameters('prefix')localGateway12",
      "localGatewayName21": "parameters('prefix')localGateway21",
      "localGatewayName22": "parameters('prefix')localGateway22",
      "connectionName11-21": "[concat(parameters('prefix'),'gw1')]-to-[concat(parameters('gateway2Name'),'IP1')]",
      "connectionName12-22": "[concat(parameters('prefix'),'gw1')]-to-[concat(parameters('gateway2Name'),'IP2')]",
      "connectionName21-11": "[concat(parameters('prefix'),'gw2')]-to-[concat(parameters('gateway1Name'),'IP1')]",
      "connectionName22-12": "[concat(parameters('prefix'),'gw2')]-to-[concat(parameters('gateway1Name'),'IP2')]",
      "vpnGatewayGeneration": "Generation2",
      "vm1Name": "parameters('prefix')vm1",
      "vm2Name": "parameters('prefix')vm2",
      "nsg1": "parameters('prefix')nsg1",
      "nsg2": "parameters('prefix')nsg2",
      "nic1Name": "parameters('prefix')vm1",
      "nic2Name": "parameters('prefix')vm2",
      "vm1PublicIPName": "parameters('prefix')vm1",
      "vm2PublicIPName": "parameters('prefix')vm2",
      "vmSize": "Standard_B1s",
      "imageReference": {
        "publisher": "Canonical",
        "offer": "0001-com-ubuntu-server-focal",
        "sku": "20_04-lts",
        "version": "latest"
      }
    },
    "resources": [
      {
        "comments": "network security group applied to the subnets in the VNet1",
        "type": "Microsoft.Network/networkSecurityGroups",
        "apiVersion": "2020-08-01",
        "location": "eastus",
        "name": "parameters('prefix')nsg1",
        "properties": {
          "securityRules": [
            {
              "name": "SSH-rule",
              "properties": {
                "description": "allow SSH",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "22",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "VirtualNetwork",
                "access": "Allow",
                "priority": 500,
                "direction": "Inbound"
              }
            },
            {
              "name": "RDP-rule",
              "properties": {
                "description": "allow RDP",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "3389",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "VirtualNetwork",
                "access": "Allow",
                "priority": 510,
                "direction": "Inbound"
              }
            }
          ]
        }
      },
      {
        "comments": "network security group applied to the subnets in the VNet2",
        "type": "Microsoft.Network/networkSecurityGroups",
        "apiVersion": "2020-08-01",
        "name": "parameters('prefix')nsg2",
        "location": "eastus",
        "properties": {
          "securityRules": [
            {
              "name": "SSH-rule",
              "properties": {
                "description": "allow SSH",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "22",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "VirtualNetwork",
                "access": "Allow",
                "priority": 500,
                "direction": "Inbound"
              }
            },
            {
              "name": "RDP-rule",
              "properties": {
                "description": "allow RDP",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "3389",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "VirtualNetwork",
                "access": "Allow",
                "priority": 510,
                "direction": "Inbound"
              }
            }
          ]
        }
      },
      {
        "comments": "Virtual Network 1",
        "type": "Microsoft.Network/virtualNetworks",
        "apiVersion": "2020-08-01",
        "name": "parameters('prefix')vnet1",
        "location": "eastus",
        "dependsOn": [
          "Microsoft.Network/networkSecurityGroups/parameters('prefix')nsg1"
        ],
        "properties": {
          "addressSpace": {
            "addressPrefixes": [
              "10.1.0.0/16"
            ]
          },
          "subnets": [
            {
              "name": "subnet11",
              "properties": {
                "addressPrefix": "10.1.1.0/24",
                "networkSecurityGroup": {
                  "id": "Microsoft.Network/networkSecurityGroups/parameters('prefix')nsg1"
                }
              }
            },
            {
              "name": "subnet12",
              "properties": {
                "addressPrefix": "10.1.2.0/24"
              }
            },
            {
              "name": "GatewaySubnet",
              "properties": {
                "addressPrefix": "gateway1subnetPrefix"
              }
            }
          ]
        }
      },
      {
        "comments": "Virtual Network 2",
        "type": "Microsoft.Network/virtualNetworks",
        "apiVersion": "2020-08-01",
        "name": "parameters('prefix')vnet2",
        "location": "eastus",
        "dependsOn": [
          "Microsoft.Network/networkSecurityGroups/parameters('prefix')nsg2"
        ],
        "properties": {
          "addressSpace": {
            "addressPrefixes": [
              "10.2.0.0/16"
            ]
          },
          "subnets": [
            {
              "name": "subnet21",
              "properties": {
                "addressPrefix": "10.2.1.0/24",
                "networkSecurityGroup": {
                  "id": "Microsoft.Network/networkSecurityGroups/parameters('prefix')nsg2"
                }
              }
            },
            {
              "name": "subnet22",
              "properties": {
                "addressPrefix": "10.2.2.0/24"
              }
            },
            {
              "name": "GatewaySubnet",
              "properties": {
                "addressPrefix": "gateway2subnetPrefix"
              }
            }
          ]
        }
      },
      {
        "comments": "static public IP of the VPN Gateway1-instance 0",
        "type": "Microsoft.Network/publicIPAddresses",
        "apiVersion": "2020-08-01",
        "name": "parameters('prefix')gw1",
        "location": "eastus",
        "sku": {
          "name": "Standard"
        },
        "properties": {
          "publicIPAllocationMethod": "Static",
          "dnsSettings": {
            "domainNameLabel": "[toLower( concat( 'gtw1-ip1-', uniqueString(resourceGroup().id) ))]"
          }
        }
      },
      {
        "comments": "static public IP of the VPN Gateway1- instance 1",
        "type": "Microsoft.Network/publicIPAddresses",
        "apiVersion": "2020-08-01",
        "name": "parameters('prefix')gw1",
        "location": "eastus",
        "sku": {
          "name": "Standard"
        },
        "properties": {
          "publicIPAllocationMethod": "Static",
          "dnsSettings": {
            "domainNameLabel": "[toLower( concat( 'gtw1-ip2-', uniqueString(resourceGroup().id) ))]"
          }
        }
      },
      {
        "comments": "static public IP of the VPN Gateway2-instance 0",
        "type": "Microsoft.Network/publicIPAddresses",
        "apiVersion": "2020-08-01",
        "name": "parameters('prefix')gw2",
        "location": "eastus",
        "sku": {
          "name": "Standard"
        },
        "properties": {
          "publicIPAllocationMethod": "Static",
          "dnsSettings": {
            "domainNameLabel": "[toLower( concat( 'gtw2-ip1-', uniqueString(resourceGroup().id) ))]"
          }
        }
      },
      {
        "comments": "static public IP of the VPN Gateway2- instance 1",
        "type": "Microsoft.Network/publicIPAddresses",
        "apiVersion": "2020-08-01",
        "name": "parameters('prefix')gw2",
        "location": "eastus",
        "sku": {
          "name": "Standard"
        },
        "properties": {
          "publicIPAllocationMethod": "Static",
          "dnsSettings": {
            "domainNameLabel": "[toLower( concat( 'gtw2-ip2-', uniqueString(resourceGroup().id) ))]"
          }
        }
      },
      {
        "comments": "VPN Gateway 1- deployed in location 1",
        "type": "Microsoft.Network/virtualNetworkGateways",
        "apiVersion": "2020-08-01",
        "name": "parameters('prefix')gw1",
        "location": "eastus",
        "dependsOn": [
          "Microsoft.Network/publicIPAddresses/parameters('prefix')gw1",
          "Microsoft.Network/publicIPAddresses/parameters('prefix')gw1",
          "Microsoft.Network/virtualNetworks/parameters('prefix')vnet1"
        ],
        "properties": {
          "ipConfigurations": [
            {
              "properties": {
                "privateIPAllocationMethod": "Dynamic",
                "subnet": {
                  "id": "gateway1SubnetRef"
                },
                "publicIPAddress": {
                  "id": "Microsoft.Network/publicIPAddresses/parameters('prefix')gw1"
                }
              },
              "name": "vnetGateway1Config1"
            },
            {
              "properties": {
                "privateIPAllocationMethod": "Dynamic",
                "subnet": {
                  "id": "gateway1SubnetRef"
                },
                "publicIPAddress": {
                  "id": "Microsoft.Network/publicIPAddresses/parameters('prefix')gw1"
                }
              },
              "name": "vnetGateway1Config2"
            }
          ],
          "sku": {
            "name": "VpnGw2AZ",
            "tier": "VpnGw2AZ"
          },
          "gatewayType": "Vpn",
          "vpnType": "RouteBased",
          "enableBgp": true,
          "activeActive": true,
          "vpnGatewayGeneration": "Generation2",
          "bgpSettings": {
            "asn": 65001
          }
        }
      },
      {
        "comments": "VPN Gateway 2- deployed in location 2",
        "type": "Microsoft.Network/virtualNetworkGateways",
        "apiVersion": "2020-08-01",
        "name": "parameters('prefix')gw2",
        "location": "eastus",
        "dependsOn": [
          "Microsoft.Network/publicIPAddresses/parameters('prefix')gw2",
          "Microsoft.Network/publicIPAddresses/parameters('prefix')gw2",
          "Microsoft.Network/virtualNetworks/parameters('prefix')vnet2"
        ],
        "properties": {
          "ipConfigurations": [
            {
              "properties": {
                "privateIPAllocationMethod": "Dynamic",
                "subnet": {
                  "id": "gateway2SubnetRef"
                },
                "publicIPAddress": {
                  "id": "Microsoft.Network/publicIPAddresses/parameters('prefix')gw2"
                }
              },
              "name": "vnetGateway2Config1"
            },
            {
              "properties": {
                "privateIPAllocationMethod": "Dynamic",
                "subnet": {
                  "id": "gateway2SubnetRef"
                },
                "publicIPAddress": {
                  "id": "Microsoft.Network/publicIPAddresses/parameters('prefix')gw2"
                }
              },
              "name": "vnetGateway2Config2"
            }
          ],
          "sku": {
            "name": "VpnGw2AZ",
            "tier": "VpnGw2AZ"
          },
          "gatewayType": "Vpn",
          "vpnType": "RouteBased",
          "enableBgp": true,
          "activeActive": true,
          "vpnGatewayGeneration": "Generation2",
          "bgpSettings": {
            "asn": 65002
          }
        }
      },
      {
        "comments": "local network gateway in Gateway1 to connect to the remote gateway1-public IP1",
        "type": "Microsoft.Network/localNetworkGateways",
        "apiVersion": "2020-08-01",
        "name": "parameters('prefix')localGateway11",
        "location": "eastus",
        "dependsOn": [
          "Microsoft.Network/virtualNetworkGateways/parameters('prefix')gw1"
        ],
        "properties": {
          "fqdn": "[reference(variables('gateway1PublicIP1Id'),'2020-06-01').dnsSettings.fqdn]",
          "bgpSettings": {
            "asn": 65001,
            "bgpPeeringAddress": "[first(split( reference(resourceId('Microsoft.Network/virtualNetworkGateways',variables('gateway1Name')),'2020-06-01').bgpSettings.bgpPeeringAddress , ','))]",
            "peerWeight": 0
          }
        }
      },
      {
        "comments": "local network gateway in Gateway1 to connect to the remote gateway1-public IP2",
        "type": "Microsoft.Network/localNetworkGateways",
        "apiVersion": "2020-08-01",
        "name": "parameters('prefix')localGateway12",
        "location": "eastus",
        "dependsOn": [
          "Microsoft.Network/virtualNetworkGateways/parameters('prefix')gw1"
        ],
        "properties": {
          "fqdn": "[reference(variables('gateway1PublicIP2Id'),'2020-06-01').dnsSettings.fqdn]",
          "bgpSettings": {
            "asn": 65001,
            "bgpPeeringAddress": "[last(split( reference(resourceId('Microsoft.Network/virtualNetworkGateways',variables('gateway1Name')),'2020-06-01').bgpSettings.bgpPeeringAddress , ','))]",
            "peerWeight": 0
          }
        }
      },
      {
        "comments": "local network gateway in Gateway1 to connect to the remote gateway2 -public IP1",
        "type": "Microsoft.Network/localNetworkGateways",
        "apiVersion": "2020-08-01",
        "name": "parameters('prefix')localGateway21",
        "location": "eastus",
        "dependsOn": [
          "Microsoft.Network/virtualNetworkGateways/parameters('prefix')gw2"
        ],
        "properties": {
          "fqdn": "[reference(variables('gateway2PublicIP1Id'),'2020-06-01').dnsSettings.fqdn]",
          "bgpSettings": {
            "asn": 65002,
            "bgpPeeringAddress": "[first(split( reference(resourceId('Microsoft.Network/virtualNetworkGateways',variables('gateway2Name')),'2020-06-01').bgpSettings.bgpPeeringAddress , ','))]",
            "peerWeight": 0
          }
        }
      },
      {
        "comments": "local network gateway in Gateway1 to connect to the remote gateway2 -public IP2",
        "type": "Microsoft.Network/localNetworkGateways",
        "apiVersion": "2020-08-01",
        "name": "parameters('prefix')localGateway22",
        "location": "eastus",
        "dependsOn": [
          "Microsoft.Network/virtualNetworkGateways/parameters('prefix')gw2"
        ],
        "properties": {
          "fqdn": "[reference(variables('gateway2PublicIP2Id'),'2020-06-01').dnsSettings.fqdn]",
          "bgpSettings": {
            "asn": 65002,
            "bgpPeeringAddress": "[last(split( reference(resourceId('Microsoft.Network/virtualNetworkGateways',variables('gateway2Name')),'2020-06-01').bgpSettings.bgpPeeringAddress , ','))]",
            "peerWeight": 0
          }
        }
      },
      {
        "comments": "VPN connection between [Gateway1] and [Gateway2-pubIP1]",
        "type": "Microsoft.Network/connections",
        "apiVersion": "2020-08-01",
        "name": "[concat(parameters('prefix'),'gw1')]-to-[concat(parameters('gateway2Name'),'IP1')]",
        "location": "eastus",
        "dependsOn": [
          "Microsoft.Network/virtualNetworkGateways/parameters('prefix')gw1",
          "Microsoft.Network/localNetworkGateways/parameters('prefix')localGateway21"
        ],
        "properties": {
          "virtualNetworkGateway1": {
            "id": "Microsoft.Network/virtualNetworkGateways/parameters('prefix')gw1"
          },
          "localNetworkGateway2": {
            "id": "Microsoft.Network/localNetworkGateways/parameters('prefix')localGateway21"
          },
          "connectionType": "IPsec",
          "routingWeight": 0,
          "sharedKey": "GEN-PASSWORD",
          "enableBGP": true
        }
      },
      {
        "comments": "VPN connection between [Gateway1] and [Gateway2-pubIP2]",
        "type": "Microsoft.Network/connections",
        "apiVersion": "2020-08-01",
        "name": "[concat(parameters('prefix'),'gw1')]-to-[concat(parameters('gateway2Name'),'IP2')]",
        "location": "eastus",
        "dependsOn": [
          "Microsoft.Network/virtualNetworkGateways/parameters('prefix')gw1",
          "Microsoft.Network/localNetworkGateways/parameters('prefix')localGateway22"
        ],
        "properties": {
          "virtualNetworkGateway1": {
            "id": "Microsoft.Network/virtualNetworkGateways/parameters('prefix')gw1"
          },
          "localNetworkGateway2": {
            "id": "Microsoft.Network/localNetworkGateways/parameters('prefix')localGateway22"
          },
          "connectionType": "IPsec",
          "routingWeight": 0,
          "sharedKey": "GEN-PASSWORD",
          "enableBGP": true
        }
      },
      {
        "comments": "VPN connection between [Gateway2] and [Gateway1-pubIP1]",
        "type": "Microsoft.Network/connections",
        "apiVersion": "2020-08-01",
        "name": "[concat(parameters('prefix'),'gw2')]-to-[concat(parameters('gateway1Name'),'IP1')]",
        "location": "eastus",
        "dependsOn": [
          "Microsoft.Network/virtualNetworkGateways/parameters('prefix')gw2",
          "Microsoft.Network/localNetworkGateways/parameters('prefix')localGateway11"
        ],
        "properties": {
          "virtualNetworkGateway1": {
            "id": "Microsoft.Network/virtualNetworkGateways/parameters('prefix')gw2"
          },
          "localNetworkGateway2": {
            "id": "Microsoft.Network/localNetworkGateways/parameters('prefix')localGateway11"
          },
          "connectionType": "IPsec",
          "routingWeight": 0,
          "sharedKey": "GEN-PASSWORD",
          "enableBGP": true
        }
      },
      {
        "comments": "VPN connection between [Gateway2] and [Gateway1-pubIP2]",
        "type": "Microsoft.Network/connections",
        "apiVersion": "2020-06-01",
        "name": "[concat(parameters('prefix'),'gw2')]-to-[concat(parameters('gateway1Name'),'IP2')]",
        "location": "eastus",
        "dependsOn": [
          "Microsoft.Network/virtualNetworkGateways/parameters('prefix')gw2",
          "Microsoft.Network/localNetworkGateways/parameters('prefix')localGateway12"
        ],
        "properties": {
          "virtualNetworkGateway1": {
            "id": "Microsoft.Network/virtualNetworkGateways/parameters('prefix')gw2"
          },
          "localNetworkGateway2": {
            "id": "Microsoft.Network/localNetworkGateways/parameters('prefix')localGateway12"
          },
          "connectionType": "IPsec",
          "routingWeight": 0,
          "sharedKey": "GEN-PASSWORD",
          "enableBGP": true
        }
      },
      {
        "comments": "public IP address of the VM1",
        "type": "Microsoft.Network/publicIPAddresses",
        "apiVersion": "2020-08-01",
        "name": "parameters('prefix')vm1",
        "location": "eastus",
        "properties": {
          "publicIPAllocationMethod": "Dynamic"
        }
      },
      {
        "comments": "public IP address of the VM2",
        "type": "Microsoft.Network/publicIPAddresses",
        "apiVersion": "2020-08-01",
        "name": "parameters('prefix')vm2",
        "location": "eastus",
        "properties": {
          "publicIPAllocationMethod": "Dynamic"
        }
      },
      {
        "comments": "NIC of the VM1",
        "type": "Microsoft.Network/networkInterfaces",
        "apiVersion": "2020-08-01",
        "name": "parameters('prefix')vm1",
        "location": "eastus",
        "dependsOn": [
          "Microsoft.Network/publicIPAddresses/parameters('prefix')vm1",
          "Microsoft.Network/virtualNetworks/parameters('prefix')vnet1"
        ],
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipconfig1",
              "properties": {
                "privateIPAllocationMethod": "Dynamic",
                "publicIPAddress": {
                  "id": "Microsoft.Network/publicIPAddresses/parameters('prefix')vm1"
                },
                "subnet": {
                  "id": "Microsoft.Network/virtualNetworks/subnets/[concat(parameters('prefix'),'vnet1')]/subnet11"
                }
              }
            }
          ]
        }
      },
      {
        "comments": "NIC of the VM2",
        "type": "Microsoft.Network/networkInterfaces",
        "apiVersion": "2020-08-01",
        "name": "parameters('prefix')vm2",
        "location": "eastus",
        "dependsOn": [
          "Microsoft.Network/publicIPAddresses/parameters('prefix')vm2",
          "Microsoft.Network/virtualNetworks/parameters('prefix')vnet2"
        ],
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipconfig2",
              "properties": {
                "privateIPAllocationMethod": "Dynamic",
                "publicIPAddress": {
                  "id": "Microsoft.Network/publicIPAddresses/parameters('prefix')vm2"
                },
                "subnet": {
                  "id": "Microsoft.Network/virtualNetworks/subnets/[concat(parameters('prefix'),'vnet2')]/subnet21"
                }
              }
            }
          ]
        }
      },
      {
        "comments": "VM1",
        "type": "Microsoft.Compute/virtualMachines",
        "apiVersion": "2020-06-01",
        "name": "parameters('prefix')vm1",
        "location": "eastus",
        "dependsOn": [
          "Microsoft.Network/networkInterfaces/parameters('prefix')vm1"
        ],
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_B1s"
          },
          "osProfile": {
            "computerName": "parameters('prefix')vm1",
            "adminUsername": "GEN-UNIQUE",
            "adminPassword": "GEN-PASSWORD"
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "(imageReference).publisher",
              "offer": "(imageReference).offer",
              "sku": "(imageReference).sku",
              "version": "(imageReference).version"
            },
            "osDisk": {
              "name": "parameters('prefix')vm1-OSdisk",
              "createOption": "FromImage",
              "caching": "ReadWrite",
              "managedDisk": {
                "storageAccountType": "StandardSSD_LRS"
              }
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "Microsoft.Network/networkInterfaces/parameters('prefix')vm1"
              }
            ]
          }
        }
      },
      {
        "comments": "VM2",
        "type": "Microsoft.Compute/virtualMachines",
        "apiVersion": "2020-06-01",
        "name": "parameters('prefix')vm2",
        "location": "eastus",
        "dependsOn": [
          "Microsoft.Network/networkInterfaces/parameters('prefix')vm2"
        ],
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_B1s"
          },
          "osProfile": {
            "computerName": "parameters('prefix')vm2",
            "adminUsername": "GEN-UNIQUE",
            "adminPassword": "GEN-PASSWORD"
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "(imageReference).publisher",
              "offer": "(imageReference).offer",
              "sku": "(imageReference).sku",
              "version": "(imageReference).version"
            },
            "osDisk": {
              "name": "parameters('prefix')vm2-OSdisk",
              "createOption": "FromImage",
              "caching": "ReadWrite",
              "managedDisk": {
                "storageAccountType": "StandardSSD_LRS"
              }
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "Microsoft.Network/networkInterfaces/parameters('prefix')vm2"
              }
            ]
          }
        }
      }
    ],
    "\uff04schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#"
  }
}