{
  "structure": "filesystem",
  "error": null,
  "reference": "master",
  "contentType": "json",
  "source": "gitConnectorAzureQuickStart",
  "paths": [
    "/quickstarts/microsoft.recoveryservices/recovery-services-create-vm-and-configure-backup/azuredeploy.json",
    "/quickstarts/microsoft.recoveryservices/recovery-services-create-vm-and-configure-backup/azuredeploy.parameters.json"
  ],
  "timestamp": 1642962909882,
  "queryuser": null,
  "checksum": "99914b932bd37a50b983c5e7c90ae93b",
  "node": {
    "masterSnapshotId": "ARM_TEMPLATE_SNAPSHOT",
    "type": "arm",
    "collection": "armtemplate",
    "paths": [
      "/quickstarts/microsoft.recoveryservices/recovery-services-create-vm-and-configure-backup/azuredeploy.json",
      "/quickstarts/microsoft.recoveryservices/recovery-services-create-vm-and-configure-backup/azuredeploy.parameters.json"
    ],
    "snapshotId": "ARM_TEMPLATE_SNAPSHOT1630",
    "status": "active",
    "validate": true,
    "resourceTypes": [
      "microsoft.network/publicipaddresses",
      "microsoft.network/virtualnetworks",
      "microsoft.recoveryservices/vaults",
      "microsoft.network/networkinterfaces",
      "microsoft.compute/virtualmachines",
      "microsoft.network/networksecuritygroups",
      "microsoft.recoveryservices/vaults/backupfabrics/protectioncontainers/protecteditems",
      "microsoft.storage/storageaccounts"
    ]
  },
  "snapshotId": "ARM_TEMPLATE_SNAPSHOT1630",
  "collection": "armtemplate",
  "json": {
    "contentVersion": "1.0.0.0",
    "metadata": {
      "_generator": {
        "name": "bicep",
        "version": "0.4.613.9944",
        "templateHash": "17779840117539428846"
      }
    },
    "parameters": {
      "projectName": {
        "type": "string",
        "maxLength": 8,
        "metadata": {
          "description": "Specifies a name for generating resource names."
        },
        "value": "GEN-UNIQUE-8"
      },
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Specifies the location for all resources."
        }
      },
      "adminUsername": {
        "type": "string",
        "metadata": {
          "description": "Specifies the administrator username for the Virtual Machine."
        },
        "value": "GEN-UNIQUE"
      },
      "adminPassword": {
        "type": "secureString",
        "metadata": {
          "description": "Specifies the administrator password for the Virtual Machine."
        },
        "value": "GEN-PASSWORD"
      },
      "dnsLabelPrefix": {
        "type": "string",
        "metadata": {
          "description": "Specifies the unique DNS Name for the Public IP used to access the Virtual Machine."
        },
        "value": "GEN-UNIQUE"
      },
      "vmSize": {
        "type": "string",
        "defaultValue": "Standard_A2",
        "metadata": {
          "description": "Virtual machine size."
        }
      },
      "windowsOSVersion": {
        "type": "string",
        "defaultValue": "2016-Datacenter",
        "allowedValues": [
          "2008-R2-SP1",
          "2012-Datacenter",
          "2012-R2-Datacenter",
          "2016-Nano-Server",
          "2016-Datacenter-with-Containers",
          "2016-Datacenter",
          "2019-Datacenter",
          "2019-Datacenter-Core",
          "2019-Datacenter-Core-smalldisk",
          "2019-Datacenter-Core-with-Containers",
          "2019-Datacenter-Core-with-Containers-smalldisk",
          "2019-Datacenter-smalldisk",
          "2019-Datacenter-with-Containers",
          "2019-Datacenter-with-Containers-smalldisk"
        ],
        "metadata": {
          "description": "Specifies the Windows version for the VM. This will pick a fully patched image of this given Windows version."
        }
      }
    },
    "functions": [],
    "variables": {
      "storageAccountName": "[format('{0}store', parameters('projectName'))]",
      "networkInterfaceName": "[format('{0}-nic', parameters('projectName'))]",
      "vNetAddressPrefix": "10.0.0.0/16",
      "vNetSubnetName": "default",
      "vNetSubnetAddressPrefix": "10.0.0.0/24",
      "publicIPAddressName": "[format('{0}-ip', parameters('projectName'))]",
      "vmName": "[format('{0}-vm', parameters('projectName'))]",
      "vNetName": "[format('{0}-vnet', parameters('projectName'))]",
      "vaultName": "[format('{0}-vault', parameters('projectName'))]",
      "backupFabric": "Azure",
      "backupPolicyName": "DefaultPolicy",
      "protectionContainer": "[format('iaasvmcontainer;iaasvmcontainerv2;{0};{1}', resourceGroup().name, variables('vmName'))]",
      "protectedItem": "[format('vm;iaasvmcontainerv2;{0};{1}', resourceGroup().name, variables('vmName'))]",
      "networkSecurityGroupName": "default-NSG"
    },
    "resources": [
      {
        "type": "Microsoft.Storage/storageAccounts",
        "apiVersion": "2021-06-01",
        "name": "[format('{0}store', parameters('projectName'))]",
        "location": "[resourceGroup().location]",
        "sku": {
          "name": "Standard_LRS"
        },
        "kind": "Storage",
        "properties": {}
      },
      {
        "type": "Microsoft.Network/publicIPAddresses",
        "apiVersion": "2020-06-01",
        "name": "[format('{0}-ip', parameters('projectName'))]",
        "location": "[resourceGroup().location]",
        "properties": {
          "publicIPAllocationMethod": "Dynamic",
          "dnsSettings": {
            "domainNameLabel": "GEN-UNIQUE"
          }
        }
      },
      {
        "type": "Microsoft.Network/networkSecurityGroups",
        "apiVersion": "2020-06-01",
        "name": "default-NSG",
        "location": "[resourceGroup().location]",
        "properties": {
          "securityRules": [
            {
              "name": "default-allow-3389",
              "properties": {
                "priority": 1000,
                "access": "Allow",
                "direction": "Inbound",
                "destinationPortRange": "3389",
                "protocol": "Tcp",
                "sourceAddressPrefix": "*",
                "sourcePortRange": "*",
                "destinationAddressPrefix": "*"
              }
            }
          ]
        }
      },
      {
        "type": "Microsoft.Network/virtualNetworks",
        "apiVersion": "2020-06-01",
        "name": "[format('{0}-vnet', parameters('projectName'))]",
        "location": "[resourceGroup().location]",
        "properties": {
          "addressSpace": {
            "addressPrefixes": [
              "10.0.0.0/16"
            ]
          },
          "subnets": [
            {
              "name": "default",
              "properties": {
                "addressPrefix": "10.0.0.0/24",
                "networkSecurityGroup": {
                  "id": "Microsoft.Network/networkSecurityGroups/default-NSG"
                }
              }
            }
          ]
        },
        "dependsOn": [
          "Microsoft.Network/networkSecurityGroups/default-NSG"
        ]
      },
      {
        "type": "Microsoft.Network/networkInterfaces",
        "apiVersion": "2020-06-01",
        "name": "[format('{0}-nic', parameters('projectName'))]",
        "location": "[resourceGroup().location]",
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipconfig1",
              "properties": {
                "privateIPAllocationMethod": "Dynamic",
                "publicIPAddress": {
                  "id": "Microsoft.Network/publicIPAddresses/[format('{0}-ip', parameters('projectName'))]"
                },
                "subnet": {
                  "id": "[format('{0}/subnets/{1}', resourceId('Microsoft.Network/virtualNetworks', variables('vNetName')), variables('vNetSubnetName'))]"
                }
              }
            }
          ]
        },
        "dependsOn": [
          "Microsoft.Network/publicIPAddresses/[format('{0}-ip', parameters('projectName'))]",
          "Microsoft.Network/virtualNetworks/[format('{0}-vnet', parameters('projectName'))]"
        ]
      },
      {
        "type": "Microsoft.Compute/virtualMachines",
        "apiVersion": "2020-06-01",
        "name": "[format('{0}-vm', parameters('projectName'))]",
        "location": "[resourceGroup().location]",
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_A2"
          },
          "osProfile": {
            "computerName": "[format('{0}-vm', parameters('projectName'))]",
            "adminUsername": "GEN-UNIQUE",
            "adminPassword": "GEN-PASSWORD"
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "MicrosoftWindowsServer",
              "offer": "WindowsServer",
              "sku": "2016-Datacenter",
              "version": "latest"
            },
            "osDisk": {
              "createOption": "FromImage"
            },
            "dataDisks": [
              {
                "diskSizeGB": 1023,
                "lun": 0,
                "createOption": "Empty"
              }
            ]
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "Microsoft.Network/networkInterfaces/[format('{0}-nic', parameters('projectName'))]"
              }
            ]
          },
          "diagnosticsProfile": {
            "bootDiagnostics": {
              "enabled": true,
              "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))).primaryEndpoints.blob]"
            }
          }
        },
        "dependsOn": [
          "Microsoft.Network/networkInterfaces/[format('{0}-nic', parameters('projectName'))]",
          "Microsoft.Storage/storageAccounts/[format('{0}store', parameters('projectName'))]"
        ]
      },
      {
        "type": "Microsoft.RecoveryServices/vaults",
        "apiVersion": "2020-02-02",
        "name": "[format('{0}-vault', parameters('projectName'))]",
        "location": "[resourceGroup().location]",
        "sku": {
          "name": "RS0",
          "tier": "Standard"
        },
        "properties": {}
      },
      {
        "type": "Microsoft.RecoveryServices/vaults/backupFabrics/protectionContainers/protectedItems",
        "apiVersion": "2020-02-02",
        "name": "[format('{0}/{1}/{2}/{3}', variables('vaultName'), variables('backupFabric'), variables('protectionContainer'), variables('protectedItem'))]",
        "properties": {
          "protectedItemType": "Microsoft.Compute/virtualMachines",
          "policyId": "[format('{0}/backupPolicies/{1}', resourceId('Microsoft.RecoveryServices/vaults', variables('vaultName')), variables('backupPolicyName'))]",
          "sourceResourceId": "Microsoft.Compute/virtualMachines/[format('{0}-vm', parameters('projectName'))]"
        },
        "dependsOn": [
          "Microsoft.RecoveryServices/vaults/[format('{0}-vault', parameters('projectName'))]",
          "Microsoft.Compute/virtualMachines/[format('{0}-vm', parameters('projectName'))]"
        ]
      }
    ],
    "\uff04schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#"
  }
}