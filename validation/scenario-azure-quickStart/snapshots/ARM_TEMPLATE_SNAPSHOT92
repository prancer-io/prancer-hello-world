{
  "structure": "filesystem",
  "error": null,
  "reference": "master",
  "contentType": "json",
  "source": "gitConnectorAzureQuickStart",
  "paths": [
    "/application-workloads/cloudera/cloudera-tableau/nested/master-node.json"
  ],
  "timestamp": 1642962885965,
  "queryuser": null,
  "checksum": "99914b932bd37a50b983c5e7c90ae93b",
  "node": {
    "masterSnapshotId": "ARM_TEMPLATE_SNAPSHOT",
    "type": "arm",
    "collection": "armtemplate",
    "paths": [
      "/application-workloads/cloudera/cloudera-tableau/nested/master-node.json"
    ],
    "snapshotId": "ARM_TEMPLATE_SNAPSHOT92",
    "status": "active",
    "validate": true,
    "resourceTypes": [
      "microsoft.network/publicipaddresses",
      "microsoft.network/networkinterfaces",
      "microsoft.compute/virtualmachines/extensions",
      "microsoft.compute/virtualmachines",
      "microsoft.network/networksecuritygroups",
      "microsoft.storage/storageaccounts"
    ]
  },
  "snapshotId": "ARM_TEMPLATE_SNAPSHOT92",
  "collection": "armtemplate",
  "json": {
    "contentVersion": "1.0.0.1",
    "parameters": {
      "vnetID": {
        "type": "string"
      },
      "resourceAPIVersion": {
        "type": "string"
      },
      "dnsNamePrefix": {
        "type": "string"
      },
      "scriptsUri": {
        "type": "string"
      },
      "storageAccount": {
        "type": "object"
      },
      "vmCount": {
        "type": "int"
      },
      "vmSpec": {
        "type": "secureObject"
      },
      "networkSpec": {
        "type": "object"
      },
      "clusterSpec": {
        "type": "object"
      },
      "clouderaTags": {
        "type": "object"
      },
      "tableauTags": {
        "type": "object"
      },
      "quickstartTags": {
        "type": "object"
      },
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Location for all resources."
        }
      }
    },
    "variables": {
      "masterIP": "networkSpec",
      "workerIP": "networkSpec",
      "vmName": "dnsNamePrefix-mn",
      "nicName": "dnsNamePrefix-mn-nic",
      "publicIPAddressName": "dnsNamePrefix-mn-publicIP",
      "storageAccountName": "nnstorageAccount",
      "securityGroupName": "dnsNamePrefix-mn-sg"
    },
    "resources": [
      {
        "type": "Microsoft.Network/networkSecurityGroups",
        "name": "dnsNamePrefix-mn-sg",
        "location": "[resourceGroup().location]",
        "comments": "Shared Resources Network Security Group Rules",
        "tags": {
          "quickstartName": "quickstartTags",
          "provider": "clouderaTags"
        },
        "properties": {
          "securityRules": [
            {
              "name": "SSH",
              "properties": {
                "description": "Allows SSH traffic",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "22",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 100,
                "direction": "Inbound"
              }
            },
            {
              "name": "HDFS.Web.UI",
              "properties": {
                "description": "Allows HDFS Web UI traffic",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "50070",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 101,
                "direction": "Inbound"
              }
            },
            {
              "name": "Hiveserver2",
              "properties": {
                "description": "Allows Hiveserver traffic",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "10000",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 102,
                "direction": "Inbound"
              }
            },
            {
              "name": "Hive.Metastore",
              "properties": {
                "description": "Allows Hive Metastore traffic",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "9083",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 103,
                "direction": "Inbound"
              }
            },
            {
              "name": "Hue",
              "properties": {
                "description": "Allows Hue traffic",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "8888",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 104,
                "direction": "Inbound"
              }
            },
            {
              "name": "YARN.ResourceManager",
              "properties": {
                "description": "Allows YARN Resource Manager traffic",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "8088",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 105,
                "direction": "Inbound"
              }
            },
            {
              "name": "YARN.JobHistory.Server",
              "properties": {
                "description": "Allows YARN JobHistory Server traffic",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "19888",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 106,
                "direction": "Inbound"
              }
            },
            {
              "name": "Oozie.Server",
              "properties": {
                "description": "Allows Oozie Server traffic",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "11000",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 107,
                "direction": "Inbound"
              }
            },
            {
              "name": "Management.Web.UI",
              "properties": {
                "description": "Allows Management.Web.UI traffic",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "7180",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 108,
                "direction": "Inbound"
              }
            },
            {
              "name": "Navigator",
              "properties": {
                "description": "Allows Navigator traffic",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "7187",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 109,
                "direction": "Inbound"
              }
            },
            {
              "name": "HDFS.dn.Web.UI",
              "properties": {
                "description": "Allow HDFS Web UI traffic",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "50075",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 110,
                "direction": "Inbound"
              }
            },
            {
              "name": "YARN.nm.Web.UI",
              "properties": {
                "description": "Allow YARN Web UI traffic",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "8042",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 111,
                "direction": "Inbound"
              }
            },
            {
              "name": "Impala.JDBC",
              "properties": {
                "description": "Allow Impala JDBC traffic",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "21050",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 112,
                "direction": "Inbound"
              }
            },
            {
              "name": "Impala.Shell",
              "properties": {
                "description": "Allow Impala Shell traffic",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "21000",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 113,
                "direction": "Inbound"
              }
            },
            {
              "name": "RDP",
              "properties": {
                "description": "Allow RDP Traffic",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "3389",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 114,
                "direction": "Inbound"
              }
            }
          ]
        }
      },
      {
        "type": "Microsoft.Storage/storageAccounts",
        "name": "copyIndex()nnstorageAccount",
        "location": "[resourceGroup().location]",
        "comments": "Master Node storage account configurations",
        "tags": {
          "quickstartName": "quickstartTags",
          "provider": "clouderaTags"
        },
        "copy": {
          "name": "storageAccountLoop",
          "count": "vmCount"
        },
        "properties": {
          "accountType": "storageAccount"
        }
      },
      {
        "type": "Microsoft.Network/publicIPAddresses",
        "name": "dnsNamePrefix-mn-publicIPcopyIndex()",
        "location": "[resourceGroup().location]",
        "comments": "Master Node Public IP Address configuration",
        "tags": {
          "quickstartName": "quickstartTags",
          "provider": "clouderaTags"
        },
        "copy": {
          "name": "publicIPLoop",
          "count": "vmCount"
        },
        "properties": {
          "publicIPAllocationMethod": "Dynamic",
          "dnsSettings": {
            "domainNameLabel": "dnsNamePrefix-mncopyIndex()"
          }
        }
      },
      {
        "type": "Microsoft.Network/networkInterfaces",
        "name": "dnsNamePrefix-mn-niccopyIndex()",
        "location": "[resourceGroup().location]",
        "comments": "Master Node network interface configuration",
        "tags": {
          "quickstartName": "quickstartTags",
          "provider": "clouderaTags"
        },
        "dependsOn": [
          "Microsoft.Network/publicIPAddresses/dnsNamePrefix-mn-publicIPcopyIndex()",
          "Microsoft.Network/networkSecurityGroups/dnsNamePrefix-mn-sg"
        ],
        "copy": {
          "name": "masterNodeNicLoop",
          "count": "vmCount"
        },
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipconfig1",
              "properties": {
                "privateIPAllocationMethod": "Static",
                "privateIPAddress": "[concat(parameters('networkSpec').ipOctet01, add(parameters('networkSpec').ipOctet2, div(copyIndex(parameters('networkSpec').ipOctet3), 256)), '.', mod(copyIndex(parameters('networkSpec').ipOctet3), 256))]",
                "subnet": {
                  "id": "vnetID/subnets/networkSpec"
                },
                "publicIPAddress": {
                  "id": "Microsoft.Network/publicIPAddresses/dnsNamePrefix-mn-publicIPcopyIndex()"
                }
              }
            }
          ],
          "networkSecurityGroup": {
            "id": "Microsoft.Network/networkSecurityGroups/dnsNamePrefix-mn-sg"
          }
        }
      },
      {
        "type": "Microsoft.Compute/virtualMachines",
        "name": "dnsNamePrefix-mncopyIndex()",
        "location": "[resourceGroup().location]",
        "comments": "Master Node virtual machines configurations",
        "tags": {
          "quickstartName": "quickstartTags",
          "provider": "clouderaTags"
        },
        "copy": {
          "name": "masterNodeNicLoop",
          "count": "vmCount"
        },
        "dependsOn": [
          "Microsoft.Network/networkInterfaces/dnsNamePrefix-mn-niccopyIndex()",
          "Microsoft.Storage/storageAccounts/copyIndex()nnstorageAccount"
        ],
        "properties": {
          "availabilitySet": {
            "id": "Microsoft.Compute/availabilitySets/vmSpec"
          },
          "hardwareProfile": {
            "vmSize": "vmSpec"
          },
          "osProfile": {
            "computerName": "[reference(concat(variables('publicIPAddressName'), copyIndex())).dnsSettings.fqdn]",
            "adminUsername": "vmSpec",
            "adminPassword": "vmSpec",
            "linuxConfiguration": {
              "disablePasswordAuthentication": "false"
            }
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "Redhat",
              "offer": "RHEL",
              "sku": "6.8",
              "version": "6.8.20161028"
            },
            "osDisk": {
              "name": "dnsNamePrefix-mncopyIndex()_OSDisk",
              "caching": "ReadWrite",
              "createOption": "FromImage"
            },
            "dataDisks": [
              {
                "name": "dnsNamePrefix-mncopyIndex()_DataDisk0",
                "diskSizeGB": 512,
                "lun": 0,
                "createOption": "Empty"
              },
              {
                "name": "dnsNamePrefix-mncopyIndex()_DataDisk1",
                "diskSizeGB": 512,
                "lun": 1,
                "createOption": "Empty"
              },
              {
                "name": "dnsNamePrefix-mncopyIndex()_DataDisk2",
                "diskSizeGB": 512,
                "lun": 2,
                "createOption": "Empty"
              },
              {
                "name": "dnsNamePrefix-mncopyIndex()_DataDisk3",
                "diskSizeGB": 512,
                "lun": 3,
                "createOption": "Empty"
              }
            ]
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "Microsoft.Network/networkInterfaces/dnsNamePrefix-mn-niccopyIndex()"
              }
            ]
          }
        }
      },
      {
        "type": "Microsoft.Compute/virtualMachines/extensions",
        "name": "dnsNamePrefix-mncopyIndex()/prepareDisks",
        "location": "[resourceGroup().location]",
        "comments": "Master Node VM Extensions and scripts to configure the Cloudera cluster",
        "tags": {
          "quickstartName": "quickstartTags",
          "provider": "clouderaTags"
        },
        "copy": {
          "name": "nameNodeNicLoop",
          "count": "vmCount"
        },
        "dependsOn": [
          "Microsoft.Compute/virtualMachines/dnsNamePrefix-mncopyIndex()"
        ],
        "properties": {
          "publisher": "Microsoft.Azure.Extensions",
          "type": "CustomScript",
          "typeHandlerVersion": "2.0",
          "autoUpgradeMinorVersion": true,
          "settings": {
            "fileUris": [
              "scriptsUri/scripts/prepare-masternode-disks.sh",
              "scriptsUri/scripts/initialize-node.sh"
            ],
            "commandToExecute": "[concat('sh initialize-node.sh \"', variables('masterIP'), '\" \"', variables('workerIP'), '\" \"', parameters('dnsNamePrefix'), '\" \"', reference(concat(variables('publicIPAddressName'), copyIndex())).dnsSettings.fqdn, '\" ', parameters('clusterSpec').masterNodeCount, ' ', parameters('clusterSpec').dataNodeCount, ' \"', parameters('vmSpec').adminUsername, '\" ', 'masternode', ' >> /home/$ADMINUSER/initialize-datanode.log 2>&1')]"
          }
        }
      }
    ],
    "outputs": {
      "fqdn": {
        "type": "string",
        "value": "[reference(concat(variables('publicIPAddressName'), '0')).dnsSettings.fqdn]"
      }
    },
    "\uff04schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#"
  }
}