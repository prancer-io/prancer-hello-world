{
  "structure": "filesystem",
  "error": null,
  "reference": "master",
  "contentType": "json",
  "source": "gitConnectorAzureQuickStart",
  "paths": [
    "/quickstarts/microsoft.compute/vmss-flexible-orchestration-manual-add-vm/azuredeploy.json",
    "/quickstarts/microsoft.compute/vmss-flexible-orchestration-manual-add-vm/azuredeploy.parameters.json"
  ],
  "timestamp": 1642962904847,
  "queryuser": null,
  "checksum": "99914b932bd37a50b983c5e7c90ae93b",
  "node": {
    "masterSnapshotId": "ARM_TEMPLATE_SNAPSHOT",
    "type": "arm",
    "collection": "armtemplate",
    "paths": [
      "/quickstarts/microsoft.compute/vmss-flexible-orchestration-manual-add-vm/azuredeploy.json",
      "/quickstarts/microsoft.compute/vmss-flexible-orchestration-manual-add-vm/azuredeploy.parameters.json"
    ],
    "snapshotId": "ARM_TEMPLATE_SNAPSHOT1153",
    "status": "active",
    "validate": true,
    "resourceTypes": [
      "microsoft.network/publicipaddresses",
      "microsoft.network/virtualnetworks",
      "microsoft.network/networkinterfaces",
      "microsoft.compute/virtualmachinescalesets",
      "microsoft.compute/virtualmachines",
      "microsoft.network/networksecuritygroups"
    ]
  },
  "snapshotId": "ARM_TEMPLATE_SNAPSHOT1153",
  "collection": "armtemplate",
  "json": {
    "contentVersion": "1.0.0.0",
    "parameters": {
      "virtualMachineAdminUserName": {
        "type": "string",
        "metadata": {
          "description": "Administrator Username for the local admin account"
        },
        "value": "GEN-UNIQUE"
      },
      "virtualMachineAdminPassword": {
        "type": "securestring",
        "metadata": {
          "description": "Administrator password for the local admin account"
        },
        "value": "GEN-PASSWORD"
      },
      "virtualMachineNamePrefix": {
        "defaultValue": "MyVM0",
        "type": "string",
        "maxLength": 15,
        "metadata": {
          "description": "Name of the virtual machine to be created"
        }
      },
      "virtualMachineCount": {
        "type": "int",
        "defaultValue": 3,
        "minValue": 1,
        "maxValue": 150,
        "metadata": {
          "description": "Number of  virtual machines to be created"
        }
      },
      "virtualMachineSize": {
        "type": "string",
        "defaultValue": "Standard_B1s",
        "allowedValues": [
          "Standard_B1ls",
          "Standard_B1s",
          "Standard_B1ms",
          "Standard_B2s",
          "Standard_B2ms",
          "Standard_D2s_v3",
          "Standard_D4s_v3"
        ],
        "metadata": {
          "description": "Virtual Machine Size."
        }
      },
      "operatingSystem": {
        "type": "string",
        "defaultValue": "UbuntuLTS",
        "metadata": {
          "description": "Operating System of the Server"
        },
        "allowedValues": [
          "Win2019DataCenter",
          "Win2016DataCenter",
          "UbuntuLTS"
        ]
      },
      "virtualMachineScaleSetName": {
        "defaultValue": "MyVirtualMachineScaleSet",
        "type": "string",
        "metadata": {
          "description": "Virtual Machine Scale Set Name where the VM will be placed"
        }
      },
      "virtualMachineScaleSetAvailabilityZone": {
        "type": "string",
        "defaultValue": "none",
        "metadata": {
          "description": "Specify an Availability Zone for the Virtual Machine Scale Set. All Virtual Machines added the the scale set will inherit this zone. Not all Azure regions support Availability zones. VMSS deployed into a zone must have a platformFaultDomainCount = 1. Learn more about maximum fault domain count by region: https://aka.ms/azurefdcountbyregion"
        },
        "allowedValues": [
          "none",
          "1",
          "2",
          "3"
        ]
      },
      "dnsPrefixForPublicIP": {
        "type": "string",
        "minLength": 1,
        "maxLength": 14,
        "defaultValue": "[concat('d',uniqueString(resourceGroup().id))]",
        "metadata": {
          "description": "Globally unique DNS prefix for the Public IPs used to access the Virtual Machines"
        }
      },
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Location for all resources."
        }
      }
    },
    "variables": {
      "myVNETName": "myVMSS-VNET",
      "myVNETPrefix": "10.0.0.0/16",
      "myVNETSubnet1Name": "VMSS-Subnet1",
      "myVNETSubnet1Prefix": "10.0.0.0/24",
      "operatingSystemValues": {
        "Win2019DataCenter": {
          "PublisherValue": "MicrosoftWindowsServer",
          "OfferValue": "WindowsServer",
          "SkuValue": "2019-Datacenter"
        },
        "Win2016DataCenter": {
          "PublisherValue": "MicrosoftWindowsServer",
          "OfferValue": "WindowsServer",
          "SkuValue": "2016-Datacenter"
        },
        "UbuntuLTS": {
          "PublisherValue": "Canonical",
          "OfferValue": "UbuntuServer",
          "SkuValue": "18.04-LTS"
        }
      },
      "subnetRef": "Microsoft.Network/virtualNetworks/subnets/myVMSS-VNET/VMSS-Subnet1",
      "fdCountOptions": {
        "zonal": 1,
        "nonzonal": 2
      },
      "selectedZone": "[if(equals(parameters('virtualMachineScaleSetAvailabilityZone'), 'none'), '', array(parameters('virtualMachineScaleSetAvailabilityZone')))]",
      "virtualMachineScaleSetPlatformFaultDomainCount": "[if(equals(parameters('virtualMachineScaleSetAvailabilityZone'), 'none'), variables('fdCountOptions').nonzonal, variables('fdCountOptions').zonal)]",
      "networkSecurityGroupName": "VMSS-Subnet1-nsg"
    },
    "resources": [
      {
        "comments": "Simple Network Security Group for subnet [variables('myVNETSubnet1Name')]",
        "type": "Microsoft.Network/networkSecurityGroups",
        "apiVersion": "2021-05-01",
        "name": "VMSS-Subnet1-nsg",
        "location": "[resourceGroup().location]",
        "properties": {
          "securityRules": [
            {
              "name": "default-allow-22",
              "properties": {
                "priority": 1000,
                "access": "Allow",
                "direction": "Inbound",
                "destinationPortRange": "22",
                "protocol": "Tcp",
                "sourceAddressPrefix": "*",
                "sourcePortRange": "*",
                "destinationAddressPrefix": "*"
              }
            }
          ]
        }
      },
      {
        "name": "myVMSS-VNET",
        "type": "Microsoft.Network/virtualNetworks",
        "location": "[resourceGroup().location]",
        "apiVersion": "2021-05-01",
        "dependsOn": [
          "Microsoft.Network/networkSecurityGroups/VMSS-Subnet1-nsg"
        ],
        "tags": {
          "displayName": "myVMSS-VNET"
        },
        "properties": {
          "addressSpace": {
            "addressPrefixes": [
              "10.0.0.0/16"
            ]
          },
          "subnets": [
            {
              "name": "VMSS-Subnet1",
              "properties": {
                "addressPrefix": "10.0.0.0/24",
                "networkSecurityGroup": {
                  "id": "Microsoft.Network/networkSecurityGroups/VMSS-Subnet1-nsg"
                }
              }
            }
          ]
        }
      },
      {
        "type": "Microsoft.Compute/virtualMachineScaleSets",
        "name": "MyVirtualMachineScaleSet",
        "apiVersion": "2021-07-01",
        "location": "[resourceGroup().location]",
        "properties": {
          "singlePlacementGroup": false,
          "platformFaultDomainCount": "[if(equals(parameters('virtualMachineScaleSetAvailabilityZone'), 'none'), variables('fdCountOptions').nonzonal, variables('fdCountOptions').zonal)]"
        },
        "zones": "[if(equals(parameters('virtualMachineScaleSetAvailabilityZone'), 'none'), '', array(parameters('virtualMachineScaleSetAvailabilityZone')))]"
      },
      {
        "type": "Microsoft.Compute/virtualMachines",
        "name": "[concat(parameters('virtualMachineNamePrefix'), copyIndex(1))]",
        "apiVersion": "2021-07-01",
        "location": "[resourceGroup().location]",
        "copy": {
          "name": "VMcopy",
          "count": 3
        },
        "dependsOn": [
          "[resourceId('Microsoft.Compute/virtualMachineScaleSets/', parameters('virtualMachineScaleSetName'))]",
          "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('virtualMachineNamePrefix'), copyIndex(1), '-NIC1'))]"
        ],
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_B1s"
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "(operatingSystemValues)[parameters(operatingSystem)].PublisherValue",
              "offer": "(operatingSystemValues)[parameters(operatingSystem)].OfferValue",
              "sku": "(operatingSystemValues)[parameters(operatingSystem)].SkuValue",
              "version": "latest"
            },
            "osDisk": {
              "name": "[concat(parameters('virtualMachineNamePrefix'),copyIndex(1))]",
              "createOption": "FromImage",
              "managedDisk": {
                "storageAccountType": "Premium_LRS"
              },
              "caching": "ReadWrite"
            }
          },
          "osProfile": {
            "computerName": "[concat(parameters('virtualMachineNamePrefix'),copyIndex(1))]",
            "adminUsername": "GEN-UNIQUE",
            "adminPassword": "GEN-PASSWORD"
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('virtualMachineNamePrefix'), copyIndex(1), '-NIC1'))]"
              }
            ]
          },
          "virtualMachineScaleSet": {
            "id": "Microsoft.Compute/virtualMachineScaleSets/MyVirtualMachineScaleSet"
          },
          "diagnosticsProfile": {
            "bootDiagnostics": {
              "enabled": true
            }
          }
        }
      },
      {
        "type": "Microsoft.Network/networkInterfaces",
        "name": "[concat(parameters('virtualMachineNamePrefix'), copyIndex(1), '-NIC1')]",
        "apiVersion": "2021-05-01",
        "location": "[resourceGroup().location]",
        "copy": {
          "name": "NICCopy",
          "count": 3
        },
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipconfig1",
              "properties": {
                "privateIPAllocationMethod": "Dynamic",
                "publicIPAddress": {
                  "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(parameters('virtualMachineNamePrefix'), copyIndex(1), '-PIP1'))]"
                },
                "subnet": {
                  "id": "Microsoft.Network/virtualNetworks/subnets/myVMSS-VNET/VMSS-Subnet1"
                }
              }
            }
          ],
          "enableIPForwarding": false
        },
        "dependsOn": [
          "[resourceId('Microsoft.Network/publicIPAddresses', concat(parameters('virtualMachineNamePrefix'), copyIndex(1), '-PIP1'))]",
          "[resourceId('Microsoft.Network/virtualNetworks/', variables('myVNETName'))]"
        ]
      },
      {
        "apiVersion": "2020-08-01",
        "type": "Microsoft.Network/publicIPAddresses",
        "name": "[concat(parameters('virtualMachineNamePrefix'), copyIndex(1), '-PIP1')]",
        "location": "[resourceGroup().location]",
        "zones": "[if(equals(parameters('virtualMachineScaleSetAvailabilityZone'), 'none'), '', array(parameters('virtualMachineScaleSetAvailabilityZone')))]",
        "copy": {
          "name": "PIPCopy",
          "count": 3
        },
        "tags": {
          "displayName": "[concat(parameters('virtualMachineNamePrefix'), copyIndex(1), '-PIP1')]"
        },
        "sku": {
          "name": "Standard"
        },
        "properties": {
          "publicIPAllocationMethod": "Static",
          "dnsSettings": {
            "domainNameLabel": "[concat(parameters('dnsPrefixForPublicIP'), copyIndex(1))]"
          }
        }
      }
    ],
    "outputs": {},
    "\uff04schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#"
  }
}