{
  "structure": "filesystem",
  "error": null,
  "reference": "master",
  "contentType": "json",
  "source": "gitConnectorAzureQuickStart",
  "paths": [
    "/quickstarts/microsoft.containerinstance/aci-linuxcontainer-public-ip/azuredeploy.json",
    "/quickstarts/microsoft.containerinstance/aci-linuxcontainer-public-ip/azuredeploy.parameters.json"
  ],
  "timestamp": 1642962905314,
  "queryuser": null,
  "checksum": "99914b932bd37a50b983c5e7c90ae93b",
  "node": {
    "masterSnapshotId": "ARM_TEMPLATE_SNAPSHOT",
    "type": "arm",
    "collection": "armtemplate",
    "paths": [
      "/quickstarts/microsoft.containerinstance/aci-linuxcontainer-public-ip/azuredeploy.json",
      "/quickstarts/microsoft.containerinstance/aci-linuxcontainer-public-ip/azuredeploy.parameters.json"
    ],
    "snapshotId": "ARM_TEMPLATE_SNAPSHOT1182",
    "status": "active",
    "validate": true,
    "resourceTypes": [
      "microsoft.containerinstance/containergroups"
    ]
  },
  "snapshotId": "ARM_TEMPLATE_SNAPSHOT1182",
  "collection": "armtemplate",
  "json": {
    "contentVersion": "1.0.0.0",
    "metadata": {
      "_generator": {
        "name": "bicep",
        "version": "0.4.1.14562",
        "templateHash": "12367894147709986470"
      }
    },
    "parameters": {
      "name": {
        "type": "string",
        "defaultValue": "acilinuxpublicipcontainergroup",
        "metadata": {
          "description": "Name for the container group"
        },
        "value": "acilinuxpublicipcontainergroup"
      },
      "image": {
        "type": "string",
        "defaultValue": "mcr.microsoft.com/azuredocs/aci-helloworld",
        "metadata": {
          "description": "Container image to deploy. Should be of the form repoName/imagename:tag for images stored in public Docker Hub, or a fully qualified URI for other registries. Images from private registries require additional registry credentials."
        },
        "value": "mcr.microsoft.com/azuredocs/aci-helloworld"
      },
      "port": {
        "type": "int",
        "defaultValue": 80,
        "metadata": {
          "description": "Port to open on the container and the public IP address."
        }
      },
      "cpuCores": {
        "type": "int",
        "defaultValue": 1,
        "metadata": {
          "description": "The number of CPU cores to allocate to the container."
        }
      },
      "memoryInGb": {
        "type": "int",
        "defaultValue": 2,
        "metadata": {
          "description": "The amount of memory to allocate to the container in gigabytes."
        }
      },
      "restartPolicy": {
        "type": "string",
        "defaultValue": "Always",
        "allowedValues": [
          "Always",
          "Never",
          "OnFailure"
        ],
        "metadata": {
          "description": "The behavior of Azure runtime if container has stopped."
        }
      },
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Location for all resources."
        }
      }
    },
    "functions": [],
    "resources": [
      {
        "type": "Microsoft.ContainerInstance/containerGroups",
        "apiVersion": "2019-12-01",
        "name": "acilinuxpublicipcontainergroup",
        "location": "[resourceGroup().location]",
        "properties": {
          "containers": [
            {
              "name": "acilinuxpublicipcontainergroup",
              "properties": {
                "image": "mcr.microsoft.com/azuredocs/aci-helloworld",
                "ports": [
                  {
                    "port": 80,
                    "protocol": "TCP"
                  }
                ],
                "resources": {
                  "requests": {
                    "cpu": 1,
                    "memoryInGB": 2
                  }
                }
              }
            }
          ],
          "osType": "Linux",
          "restartPolicy": "Always",
          "ipAddress": {
            "type": "Public",
            "ports": [
              {
                "port": 80,
                "protocol": "TCP"
              }
            ]
          }
        }
      }
    ],
    "outputs": {
      "containerIPv4Address": {
        "type": "string",
        "value": "[reference(resourceId('Microsoft.ContainerInstance/containerGroups', parameters('name'))).ipAddress.ip]"
      }
    },
    "\uff04schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#"
  }
}