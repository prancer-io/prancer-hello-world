{
  "structure": "filesystem",
  "error": null,
  "reference": "master",
  "contentType": "json",
  "source": "gitConnectorAzureQuickStart",
  "paths": [
    "/application-workloads/opensis/opensis-cluster-ubuntu/azuredeploy.json",
    "/application-workloads/opensis/opensis-cluster-ubuntu/azuredeploy.parameters.json"
  ],
  "timestamp": 1642962892961,
  "queryuser": null,
  "checksum": "99914b932bd37a50b983c5e7c90ae93b",
  "node": {
    "masterSnapshotId": "ARM_TEMPLATE_SNAPSHOT",
    "type": "arm",
    "collection": "armtemplate",
    "paths": [
      "/application-workloads/opensis/opensis-cluster-ubuntu/azuredeploy.json",
      "/application-workloads/opensis/opensis-cluster-ubuntu/azuredeploy.parameters.json"
    ],
    "snapshotId": "ARM_TEMPLATE_SNAPSHOT347",
    "status": "active",
    "validate": true,
    "resourceTypes": [
      "microsoft.network/publicipaddresses",
      "microsoft.network/virtualnetworks",
      "microsoft.network/loadbalancers",
      "microsoft.network/networkinterfaces",
      "microsoft.compute/virtualmachines/extensions",
      "microsoft.compute/virtualmachines",
      "microsoft.storage/storageaccounts",
      "microsoft.compute/availabilitysets"
    ]
  },
  "snapshotId": "ARM_TEMPLATE_SNAPSHOT347",
  "collection": "armtemplate",
  "json": {
    "contentVersion": "1.0.0.0",
    "parameters": {
      "adminUsername": {
        "type": "string",
        "metadata": {
          "description": "User name for the Virtual Machine."
        },
        "value": "GEN-UNIQUE"
      },
      "mySqlPassword": {
        "type": "securestring",
        "metadata": {
          "description": "Password for the MySQL admin user."
        },
        "value": "GEN-PASSWORD"
      },
      "namePrefix": {
        "type": "string",
        "metadata": {
          "description": "Unique name that will be used to generate various other names including the name of the Public IP used to access the Virtual Machine."
        },
        "value": "GEN-UNIQUE"
      },
      "webVMCount": {
        "type": "int",
        "defaultValue": 2,
        "allowedValues": [
          1,
          2,
          3,
          4,
          5
        ],
        "metadata": {
          "description": "Number of web front end VMs to create."
        }
      },
      "vmSize": {
        "type": "string",
        "defaultValue": "Standard_A0",
        "allowedValues": [
          "Standard_A0",
          "Standard_A1",
          "Standard_A2",
          "Standard_A3",
          "Standard_A4",
          "Standard_A5",
          "Standard_A6",
          "Standard_A7",
          "Standard_A8",
          "Standard_A9",
          "Standard_A10",
          "Standard_A11",
          "Standard_D2_v3",
          "Standard_D2_v3",
          "Standard_D4_v3",
          "Standard_D8_v3",
          "Standard_D4_v3",
          "Standard_D4_v3",
          "Standard_D8_v3",
          "Standard_D16_v3"
        ],
        "metadata": {
          "description": "The size of each web front end VM."
        }
      },
      "vmSizeDB": {
        "type": "string",
        "defaultValue": "Standard_A0",
        "allowedValues": [
          "Standard_A0",
          "Standard_A1",
          "Standard_A2",
          "Standard_A3",
          "Standard_A4",
          "Standard_A5",
          "Standard_A6",
          "Standard_A7",
          "Standard_A8",
          "Standard_A9",
          "Standard_A10",
          "Standard_A11",
          "Standard_D2_v3",
          "Standard_D2_v3",
          "Standard_D4_v3",
          "Standard_D8_v3",
          "Standard_D4_v3",
          "Standard_D4_v3",
          "Standard_D8_v3",
          "Standard_D16_v3"
        ],
        "metadata": {
          "description": "The size of the database backend VM."
        }
      },
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Location for all resources."
        }
      },
      "authenticationType": {
        "type": "string",
        "defaultValue": "sshPublicKey",
        "allowedValues": [
          "sshPublicKey",
          "password"
        ],
        "metadata": {
          "description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."
        }
      },
      "adminPasswordOrKey": {
        "type": "securestring",
        "metadata": {
          "description": "SSH Key or password for the Virtual Machine. SSH key is recommended."
        },
        "value": "GEN-SSH-PUB-KEY"
      },
      "_artifactsLocation": {
        "type": "string",
        "metadata": {
          "description": "The base URI where artifacts required by this template are located including a trailing '/'"
        },
        "defaultValue": "[deployment().properties.templateLink.uri]"
      },
      "_artifactsLocationSasToken": {
        "type": "securestring",
        "metadata": {
          "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated. Use the defaultValue if the staging location is not secured."
        },
        "defaultValue": ""
      }
    },
    "variables": {
      "storageAccountName": "[concat(uniquestring(resourceGroup().id),'storage')]",
      "imagePublisher": "Canonical",
      "imageOffer": "UbuntuServer",
      "ubuntuOSVersion": "14.04.5-LTS",
      "nicName": "GEN-UNIQUENic",
      "addressPrefix": "10.0.0.0/16",
      "subnetName": "Subnet",
      "subnetPrefix": "10.0.0.0/24",
      "subnetNameDB": "SubnetDB",
      "subnetPrefixDB": "10.0.1.0/24",
      "storageAccountType": "Standard_LRS",
      "publicIPAddressName": "GEN-UNIQUEIP",
      "publicDBIPAddressName": "GEN-UNIQUEDBIP",
      "publicIPAddressType": "Dynamic",
      "vmName": "GEN-UNIQUEVM",
      "virtualNetworkName": "GEN-UNIQUEVNet",
      "availabilitySetName": "GEN-UNIQUEAvSet",
      "lbName": "GEN-UNIQUELB",
      "installFrontendScriptName": "install_frontend.sh",
      "installFrontendCommand": "sh install_frontend.sh GEN-PASSWORD",
      "installBackendScriptName": "install_backend.sh",
      "installBackendCommand": "sh install_backend.sh GEN-PASSWORD",
      "linuxConfiguration": {
        "disablePasswordAuthentication": true,
        "ssh": {
          "publicKeys": [
            {
              "path": "/home/GEN-UNIQUE/.ssh/authorized_keys",
              "keyData": "GEN-SSH-PUB-KEY"
            }
          ]
        }
      }
    },
    "resources": [
      {
        "apiVersion": "2021-01-01",
        "type": "Microsoft.Storage/storageAccounts",
        "name": "[variables('storageAccountName')]",
        "location": "[resourceGroup().location]",
        "sku": {
          "name": "Standard_LRS"
        }
      },
      {
        "type": "Microsoft.Compute/availabilitySets",
        "name": "GEN-UNIQUEAvSet",
        "apiVersion": "2017-12-01",
        "location": "[resourceGroup().location]",
        "sku": {
          "name": "Aligned"
        },
        "properties": {
          "platformFaultDomainCount": 2,
          "platformUpdateDomainCount": 5
        }
      },
      {
        "apiVersion": "2015-06-15",
        "type": "Microsoft.Network/publicIPAddresses",
        "name": "GEN-UNIQUEIP",
        "location": "[resourceGroup().location]",
        "properties": {
          "publicIPAllocationMethod": "Dynamic",
          "dnsSettings": {
            "domainNameLabel": "GEN-UNIQUE"
          }
        }
      },
      {
        "apiVersion": "2015-06-15",
        "type": "Microsoft.Network/virtualNetworks",
        "name": "GEN-UNIQUEVNet",
        "location": "[resourceGroup().location]",
        "properties": {
          "addressSpace": {
            "addressPrefixes": [
              "10.0.0.0/16"
            ]
          },
          "subnets": [
            {
              "name": "Subnet",
              "properties": {
                "addressPrefix": "10.0.0.0/24"
              }
            },
            {
              "name": "SubnetDB",
              "properties": {
                "addressPrefix": "10.0.1.0/24"
              }
            }
          ]
        }
      },
      {
        "apiVersion": "2015-06-15",
        "type": "Microsoft.Network/networkInterfaces",
        "name": "GEN-UNIQUENiccopyIndex()",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "Microsoft.Network/virtualNetworks//GEN-UNIQUEVNet",
          "Microsoft.Network/loadBalancers//GEN-UNIQUELB"
        ],
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipconfig1",
              "properties": {
                "privateIPAllocationMethod": "Dynamic",
                "subnet": {
                  "id": "Microsoft.Network/virtualNetworks/subnets/GEN-UNIQUEVNet/Subnet"
                },
                "loadBalancerBackendAddressPools": [
                  {
                    "id": "Microsoft.Network/loadBalancers/backendAddressPools/GEN-UNIQUELB/LoadBalancerBackend"
                  }
                ],
                "loadBalancerInboundNatRules": [
                  {
                    "id": "Microsoft.Network/loadBalancers/inboundNatRules/GEN-UNIQUELB/Web-VMcopyindex()"
                  },
                  {
                    "id": "Microsoft.Network/loadBalancers/inboundNatRules/GEN-UNIQUELB/SSH-VMcopyindex()"
                  }
                ]
              }
            }
          ]
        },
        "copy": {
          "name": "networkInterfacesCopy",
          "count": 2
        }
      },
      {
        "apiVersion": "2015-06-15",
        "name": "GEN-UNIQUELB",
        "type": "Microsoft.Network/loadBalancers",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "Microsoft.Network/publicIPAddresses//GEN-UNIQUEIP"
        ],
        "properties": {
          "frontendIPConfigurations": [
            {
              "name": "LoadBalancerFrontend",
              "properties": {
                "publicIPAddress": {
                  "id": "Microsoft.Network/publicIPAddresses/GEN-UNIQUEIP"
                }
              }
            }
          ],
          "backendAddressPools": [
            {
              "name": "LoadBalancerBackend"
            }
          ],
          "inboundNatRules": [
            {
              "name": "Web-VM0",
              "properties": {
                "frontendIPConfiguration": {
                  "id": "Microsoft.Network/loadBalancers/frontendIPConfigurations/GEN-UNIQUELB/loadBalancerFrontend"
                },
                "protocol": "Tcp",
                "frontendPort": 8080,
                "backendPort": 8080,
                "enableFloatingIP": false
              }
            },
            {
              "name": "SSH-VM0",
              "properties": {
                "frontendIPConfiguration": {
                  "id": "Microsoft.Network/loadBalancers/frontendIPConfigurations/GEN-UNIQUELB/loadBalancerFrontend"
                },
                "protocol": "Tcp",
                "frontendPort": 2200,
                "backendPort": 22,
                "enableFloatingIP": false
              }
            },
            {
              "name": "Web-VM1",
              "properties": {
                "frontendIPConfiguration": {
                  "id": "Microsoft.Network/loadBalancers/frontendIPConfigurations/GEN-UNIQUELB/loadBalancerFrontend"
                },
                "protocol": "Tcp",
                "frontendPort": 8081,
                "backendPort": 8080,
                "enableFloatingIP": false
              }
            },
            {
              "name": "SSH-VM1",
              "properties": {
                "frontendIPConfiguration": {
                  "id": "Microsoft.Network/loadBalancers/frontendIPConfigurations/GEN-UNIQUELB/loadBalancerFrontend"
                },
                "protocol": "Tcp",
                "frontendPort": 2201,
                "backendPort": 22,
                "enableFloatingIP": false
              }
            },
            {
              "name": "Web-VM2",
              "properties": {
                "frontendIPConfiguration": {
                  "id": "Microsoft.Network/loadBalancers/frontendIPConfigurations/GEN-UNIQUELB/loadBalancerFrontend"
                },
                "protocol": "Tcp",
                "frontendPort": 8082,
                "backendPort": 8080,
                "enableFloatingIP": false
              }
            },
            {
              "name": "SSH-VM2",
              "properties": {
                "frontendIPConfiguration": {
                  "id": "Microsoft.Network/loadBalancers/frontendIPConfigurations/GEN-UNIQUELB/loadBalancerFrontend"
                },
                "protocol": "Tcp",
                "frontendPort": 2202,
                "backendPort": 22,
                "enableFloatingIP": false
              }
            },
            {
              "name": "Web-VM3",
              "properties": {
                "frontendIPConfiguration": {
                  "id": "Microsoft.Network/loadBalancers/frontendIPConfigurations/GEN-UNIQUELB/loadBalancerFrontend"
                },
                "protocol": "Tcp",
                "frontendPort": 8083,
                "backendPort": 8080,
                "enableFloatingIP": false
              }
            },
            {
              "name": "SSH-VM3",
              "properties": {
                "frontendIPConfiguration": {
                  "id": "Microsoft.Network/loadBalancers/frontendIPConfigurations/GEN-UNIQUELB/loadBalancerFrontend"
                },
                "protocol": "Tcp",
                "frontendPort": 2203,
                "backendPort": 22,
                "enableFloatingIP": false
              }
            },
            {
              "name": "Web-VM4",
              "properties": {
                "frontendIPConfiguration": {
                  "id": "Microsoft.Network/loadBalancers/frontendIPConfigurations/GEN-UNIQUELB/loadBalancerFrontend"
                },
                "protocol": "Tcp",
                "frontendPort": 8084,
                "backendPort": 8080,
                "enableFloatingIP": false
              }
            },
            {
              "name": "SSH-VM4",
              "properties": {
                "frontendIPConfiguration": {
                  "id": "Microsoft.Network/loadBalancers/frontendIPConfigurations/GEN-UNIQUELB/loadBalancerFrontend"
                },
                "protocol": "Tcp",
                "frontendPort": 2204,
                "backendPort": 22,
                "enableFloatingIP": false
              }
            }
          ],
          "loadBalancingRules": [
            {
              "name": "LBRule",
              "properties": {
                "frontendIPConfiguration": {
                  "id": "Microsoft.Network/loadBalancers/frontendIPConfigurations/GEN-UNIQUELB/loadBalancerFrontend"
                },
                "backendAddressPool": {
                  "id": "Microsoft.Network/loadBalancers/backendAddressPools/GEN-UNIQUELB/LoadBalancerBackend"
                },
                "protocol": "Tcp",
                "frontendPort": 80,
                "backendPort": 80,
                "enableFloatingIP": false,
                "idleTimeoutInMinutes": 5,
                "loadDistribution": "SourceIP",
                "probe": {
                  "id": "Microsoft.Network/loadBalancers/probes/GEN-UNIQUELB/tcpProbe"
                }
              }
            }
          ],
          "probes": [
            {
              "name": "tcpProbe",
              "properties": {
                "protocol": "Tcp",
                "port": 80,
                "intervalInSeconds": "5",
                "numberOfProbes": "2"
              }
            }
          ]
        }
      },
      {
        "apiVersion": "2017-03-30",
        "type": "Microsoft.Compute/virtualMachines",
        "name": "GEN-UNIQUEVMcopyIndex()",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "[resourceId('Microsoft.Storage/storageAccounts/',variables('storageAccountName'))]",
          "[resourceId('Microsoft.Network/networkInterfaces/',concat(variables('nicName'),copyIndex()))]",
          "[resourceId('Microsoft.Compute/availabilitySets/',variables('availabilitySetName'))]"
        ],
        "properties": {
          "availabilitySet": {
            "id": "Microsoft.Compute/availabilitySets/GEN-UNIQUEAvSet"
          },
          "hardwareProfile": {
            "vmSize": "Standard_A0"
          },
          "osProfile": {
            "computerName": "GEN-UNIQUEVMcopyIndex()",
            "adminUsername": "GEN-UNIQUE",
            "adminPassword": "GEN-SSH-PUB-KEY",
            "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]"
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "Canonical",
              "offer": "UbuntuServer",
              "sku": "14.04.5-LTS",
              "version": "latest"
            },
            "osDisk": {
              "name": "GEN-UNIQUEVMcopyIndex()_OSDisk",
              "caching": "ReadWrite",
              "createOption": "FromImage"
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "Microsoft.Network/networkInterfaces/GEN-UNIQUENiccopyIndex()"
              }
            ]
          }
        },
        "copy": {
          "name": "virtualMachinesCopy",
          "count": 2
        }
      },
      {
        "type": "Microsoft.Compute/virtualMachines/extensions",
        "name": "GEN-UNIQUEVMcopyIndex()/newuserscript",
        "apiVersion": "2015-06-15",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "Microsoft.Compute/virtualMachines//GEN-UNIQUEVMcopyIndex()"
        ],
        "properties": {
          "publisher": "Microsoft.Azure.Extensions",
          "type": "CustomScript",
          "typeHandlerVersion": "2.0",
          "autoUpgradeMinorVersion": true,
          "settings": {
            "fileUris": [
              "[uri(parameters('_artifactsLocation'), concat(variables('installFrontendScriptName'), parameters('_artifactsLocationSasToken')))]"
            ]
          },
          "protectedSettings": {
            "commandToExecute": "sh install_frontend.sh GEN-PASSWORD"
          }
        },
        "copy": {
          "name": "extensionsCopy",
          "count": 2
        }
      },
      {
        "type": "Microsoft.Compute/availabilitySets",
        "name": "GEN-UNIQUEAvSetdb",
        "apiVersion": "2017-12-01",
        "location": "[resourceGroup().location]",
        "sku": {
          "name": "Aligned"
        },
        "properties": {
          "platformFaultDomainCount": 2,
          "platformUpdateDomainCount": 5
        }
      },
      {
        "apiVersion": "2015-06-15",
        "type": "Microsoft.Network/publicIPAddresses",
        "name": "GEN-UNIQUEDBIP",
        "location": "[resourceGroup().location]",
        "properties": {
          "publicIPAllocationMethod": "Dynamic",
          "dnsSettings": {
            "domainNameLabel": "GEN-UNIQUEdb"
          }
        }
      },
      {
        "apiVersion": "2015-06-15",
        "type": "Microsoft.Network/networkInterfaces",
        "name": "GEN-UNIQUENicdb",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "Microsoft.Network/publicIPAddresses//GEN-UNIQUEDBIP",
          "Microsoft.Network/virtualNetworks//GEN-UNIQUEVNet"
        ],
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipconfigdb",
              "properties": {
                "privateIPAllocationMethod": "Dynamic",
                "publicIPAddress": {
                  "id": "Microsoft.Network/publicIPAddresses/GEN-UNIQUEDBIP"
                },
                "subnet": {
                  "id": "Microsoft.Network/virtualNetworks/subnets/GEN-UNIQUEVNet/SubnetDB"
                }
              }
            }
          ]
        }
      },
      {
        "apiVersion": "2017-03-30",
        "type": "Microsoft.Compute/virtualMachines",
        "name": "GEN-UNIQUEVMdb",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "[resourceId('Microsoft.Storage/storageAccounts/',variables('storageAccountName'))]",
          "[resourceId('Microsoft.Network/networkInterfaces/',concat(variables('nicName'),'db'))]",
          "[resourceId('Microsoft.Compute/availabilitySets/',concat(variables('availabilitySetName'),'db'))]"
        ],
        "properties": {
          "availabilitySet": {
            "id": "Microsoft.Compute/availabilitySets/GEN-UNIQUEAvSetdb"
          },
          "hardwareProfile": {
            "vmSize": "Standard_A0"
          },
          "osProfile": {
            "computerName": "GEN-UNIQUEVMdb",
            "adminUsername": "GEN-UNIQUE",
            "adminPassword": "GEN-SSH-PUB-KEY",
            "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]"
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "Canonical",
              "offer": "UbuntuServer",
              "sku": "14.04.5-LTS",
              "version": "latest"
            },
            "osDisk": {
              "name": "GEN-UNIQUEVMdb_OSDisk",
              "caching": "ReadWrite",
              "createOption": "FromImage"
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "Microsoft.Network/networkInterfaces/GEN-UNIQUENicdb"
              }
            ]
          }
        }
      },
      {
        "type": "Microsoft.Compute/virtualMachines/extensions",
        "name": "GEN-UNIQUEVMdb/newuserscript",
        "apiVersion": "2015-06-15",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "Microsoft.Compute/virtualMachines//GEN-UNIQUEVMdb"
        ],
        "properties": {
          "publisher": "Microsoft.Azure.Extensions",
          "type": "CustomScript",
          "typeHandlerVersion": "2.0",
          "autoUpgradeMinorVersion": true,
          "settings": {
            "fileUris": [
              "[uri(parameters('_artifactsLocation'), concat(variables('installBackendScriptName'), parameters('_artifactsLocationSasToken')))]"
            ]
          },
          "protectedSettings": {
            "commandToExecute": "sh install_backend.sh GEN-PASSWORD"
          }
        }
      }
    ],
    "\uff04schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#"
  }
}