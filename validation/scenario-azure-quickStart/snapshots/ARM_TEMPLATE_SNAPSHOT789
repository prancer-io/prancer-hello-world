{
  "structure": "filesystem",
  "error": null,
  "reference": "master",
  "contentType": "json",
  "source": "gitConnectorAzureQuickStart",
  "paths": [
    "/demos/rds-deployment-full-ha/azuredeploy.json",
    "/demos/rds-deployment-full-ha/azuredeploy.parameters.json"
  ],
  "timestamp": 1642962901400,
  "queryuser": null,
  "checksum": "99914b932bd37a50b983c5e7c90ae93b",
  "node": {
    "masterSnapshotId": "ARM_TEMPLATE_SNAPSHOT",
    "type": "arm",
    "collection": "armtemplate",
    "paths": [
      "/demos/rds-deployment-full-ha/azuredeploy.json",
      "/demos/rds-deployment-full-ha/azuredeploy.parameters.json"
    ],
    "snapshotId": "ARM_TEMPLATE_SNAPSHOT789",
    "status": "active",
    "validate": true,
    "resourceTypes": [
      "microsoft.network/publicipaddresses",
      "microsoft.network/virtualnetworks",
      "microsoft.network/loadbalancers",
      "microsoft.sql/servers/databases",
      "microsoft.resources/deployments",
      "microsoft.sql/servers",
      "microsoft.network/networksecuritygroups",
      "microsoft.storage/storageaccounts"
    ]
  },
  "snapshotId": "ARM_TEMPLATE_SNAPSHOT789",
  "collection": "armtemplate",
  "json": {
    "contentVersion": "1.0.0.0",
    "parameters": {
      "projectName": {
        "type": "string",
        "minLength": 1,
        "maxLength": 5,
        "metadata": {
          "description": "Define the project name or prefix for all objects."
        },
        "value": "GEN-UNIQUE-5"
      },
      "adminUser": {
        "type": "string",
        "metadata": {
          "description": "What is the username for the admin on VMs and SQL Server?"
        },
        "value": "GEN-UNIQUE-5"
      },
      "adminPasswd": {
        "type": "securestring",
        "metadata": {
          "description": "What is the password for the admin on VMs and SQL Server?"
        },
        "value": "GEN-PASSWORD"
      },
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "The location for resources on template. By default, the same as resource group location"
        }
      },
      "timeZoneID": {
        "type": "string",
        "defaultValue": "UTC",
        "metadata": {
          "description": "TimeZone ID to be used on VMs. Get available timezones with powershell Get-TimeZone command."
        }
      },
      "externalDnsZone": {
        "type": "string",
        "defaultValue": "contosocorp.com",
        "metadata": {
          "description": "External public DNS domain zone. NOT AD domain. This the external domain your certs will point to."
        }
      },
      "deployHA": {
        "type": "bool",
        "defaultValue": false,
        "metadata": {
          "description": "This will trigger certificate request and HA deployment. If set to false, will not create HA deployment nor request certificates."
        }
      },
      "dcCount": {
        "type": "int",
        "defaultValue": 1,
        "metadata": {
          "description": "How many Domain Controllers would you like to deploy?"
        }
      },
      "rdcbCount": {
        "type": "int",
        "defaultValue": 1,
        "metadata": {
          "description": "How many RD Connection Brokers would you like to deploy?"
        }
      },
      "rdwgCount": {
        "type": "int",
        "defaultValue": 1,
        "metadata": {
          "description": "How many RD Web Access/Gateways would you like to deploy?"
        }
      },
      "rdshCount": {
        "type": "int",
        "defaultValue": 1,
        "metadata": {
          "description": "How many RD Session Hosts would you like to deploy?"
        }
      },
      "lsfsCount": {
        "type": "int",
        "defaultValue": 1,
        "metadata": {
          "description": "How many License/File Servers would you like to deploy?"
        }
      },
      "vmSize": {
        "type": "string",
        "defaultValue": "Standard_A2_v2",
        "allowedValues": [
          "Standard_A2_v2",
          "Standard_A4_v2",
          "Standard_A8_v2",
          "Standard_D2_v3",
          "Standard_D2_v3",
          "Standard_D4_v3",
          "Standard_D2_v3",
          "Standard_D4_v3",
          "Standard_D2s_v3",
          "Standard_D2s_v3"
        ],
        "metadata": {
          "description": "What is the VM size for all VMs?"
        }
      },
      "vmSpot": {
        "type": "bool",
        "defaultValue": true,
        "metadata": {
          "description": "Create Azure Spot VMs?"
        }
      },
      "vmStorageSkuType": {
        "type": "string",
        "defaultValue": "Standard_LRS",
        "allowedValues": [
          "StandardSSD_LRS",
          "Standard_LRS"
        ],
        "metadata": {
          "description": "What is the SKU for the storage to VM managed disks?"
        }
      },
      "adDomainName": {
        "type": "string",
        "defaultValue": "contoso.com",
        "metadata": {
          "description": "What is the new forest/root Active Directory domain name?"
        }
      },
      "vNetPrefix": {
        "type": "string",
        "defaultValue": "10.100",
        "metadata": {
          "description": "What is the prefix for the vnet and first subnet?"
        }
      },
      "vNetAddressSpace": {
        "type": "string",
        "defaultValue": "[concat(parameters('vNetPrefix'),'.0.0/16')]",
        "metadata": {
          "description": "What is the vnet address space?"
        }
      },
      "vNetSubnetAddress": {
        "type": "string",
        "defaultValue": "[concat(parameters('vNetPrefix'),'.0.0/24')]",
        "metadata": {
          "description": "What is the subnet address prefix?"
        }
      },
      "_artifactsLocation": {
        "type": "string",
        "defaultValue": "[deployment().properties.templatelink.uri]",
        "metadata": {
          "description": "Location of all scripts and DSC resources for RDS deployment."
        }
      },
      "_artifactsLocationSasToken": {
        "type": "securestring",
        "defaultValue": "",
        "metadata": {
          "description": "SAS storage token to access _artifactsLocation. No need to change unless you copy or fork this template."
        }
      }
    },
    "variables": {
      "uniqueName": "[substring(uniqueString(resourceGroup().id,deployment().name),0,5)]",
      "dnsEntry": "remoteapps",
      "brokerName": "broker",
      "externalFqdn": "[concat(variables('dnsEntry'),'.',toLower(parameters('externalDnsZone')))]",
      "brokerFqdn": "[concat(variables('brokerName'),'.',toLower(parameters('externalDnsZone')))]",
      "vmNames": [
        "[concat(toLower(parameters('projectName')),variables('uniqueName'),'dc')]",
        "[concat(toLower(parameters('projectName')),variables('uniqueName'),'wg')]",
        "[concat(toLower(parameters('projectName')),variables('uniqueName'),'cb')]",
        "[concat(toLower(parameters('projectName')),variables('uniqueName'),'sh')]",
        "[concat(toLower(parameters('projectName')),variables('uniqueName'),'lf')]"
      ],
      "vmProperties": [
        {
          "name": "(vmNames)[0]",
          "count": 1,
          "intLbBackEndPool": "",
          "pubLbBackEndPool": "",
          "dscFunction": "DeployRDSLab.ps1\\CreateRootDomain"
        },
        {
          "name": "(vmNames)[1]",
          "count": 1,
          "intLbBackEndPool": "rds-webgateways-int-pool",
          "pubLbBackEndPool": "rds-webgateways-pub-pool",
          "dscFunction": "DeployRDSLab.ps1\\RDWebGateway"
        },
        {
          "name": "(vmNames)[2]",
          "count": 1,
          "intLbBackEndPool": "rds-brokers-int-pool",
          "pubLbBackEndPool": "",
          "dscFunction": "DeployRDSLab.ps1\\RDSDeployment"
        },
        {
          "name": "(vmNames)[3]",
          "count": 1,
          "intLbBackEndPool": "",
          "pubLbBackEndPool": "",
          "dscFunction": "DeployRDSLab.ps1\\RDSessionHost"
        },
        {
          "name": "(vmNames)[4]",
          "count": 1,
          "intLbBackEndPool": "",
          "pubLbBackEndPool": "",
          "dscFunction": "DeployRDSLab.ps1\\RDLicenseServer"
        }
      ],
      "diagStorageName": "[concat(toLower(parameters('projectName')),variables('uniqueName'),'diag')]",
      "publicLbIpName": "[concat(toLower(parameters('projectName')),'lbpip')]",
      "diagStorageSkuType": "Standard_LRS",
      "vNetName": "GEN-UNIQUE-5vnet",
      "firstDcIP": "10.100.0.99",
      "nsgRef": "Microsoft.Network/networkSecurityGroups/GEN-UNIQUE-5nsg",
      "subNetRef": "Microsoft.Network/virtualNetworks/subnets/GEN-UNIQUE-5vnet/GEN-UNIQUE-5main",
      "sqlServerName": "[concat(toLower(parameters('projectName')),variables('uniqueName'),'sql')]",
      "rdsDBName": "rdsdb",
      "dscScriptName": "deployrdslab.zip",
      "scriptName": "deploycertha.ps1"
    },
    "resources": [
      {
        "type": "Microsoft.Storage/storageAccounts",
        "apiVersion": "2021-04-01",
        "location": "[resourceGroup().location]",
        "kind": "StorageV2",
        "name": "[variables('diagStorageName')]",
        "sku": {
          "name": "Standard_LRS",
          "tier": "Standard"
        }
      },
      {
        "type": "Microsoft.Network/networkSecurityGroups",
        "apiVersion": "2020-07-01",
        "location": "[resourceGroup().location]",
        "name": "GEN-UNIQUE-5nsg",
        "properties": {
          "securityRules": [
            {
              "name": "Allow_RDP",
              "properties": {
                "access": "Allow",
                "sourceAddressPrefix": "*",
                "sourcePortRange": "*",
                "destinationAddressPrefix": "*",
                "destinationPortRange": "3389",
                "protocol": "*",
                "direction": "Inbound",
                "priority": 1000
              }
            },
            {
              "name": "Allow_HTTP",
              "properties": {
                "access": "Allow",
                "sourceAddressPrefix": "*",
                "sourcePortRange": "*",
                "destinationAddressPrefix": "*",
                "destinationPortRange": "80",
                "protocol": "Tcp",
                "direction": "Inbound",
                "priority": 1001
              }
            },
            {
              "name": "Allow_HTTPS",
              "properties": {
                "access": "Allow",
                "sourceAddressPrefix": "*",
                "sourcePortRange": "*",
                "destinationAddressPrefix": "*",
                "destinationPortRange": "443",
                "protocol": "Tcp",
                "direction": "Inbound",
                "priority": 1002
              }
            },
            {
              "name": "Allow_UDP_3391",
              "properties": {
                "access": "Allow",
                "sourceAddressPrefix": "*",
                "sourcePortRange": "*",
                "destinationAddressPrefix": "*",
                "destinationPortRange": "3391",
                "protocol": "Udp",
                "direction": "Inbound",
                "priority": 1003
              }
            }
          ]
        }
      },
      {
        "type": "Microsoft.Network/virtualNetworks",
        "apiVersion": "2020-07-01",
        "location": "[resourceGroup().location]",
        "name": "GEN-UNIQUE-5vnet",
        "dependsOn": [
          "Microsoft.Network/networkSecurityGroups/GEN-UNIQUE-5nsg"
        ],
        "properties": {
          "addressSpace": {
            "addressPrefixes": [
              "[concat(parameters('vNetPrefix'),'.0.0/16')]"
            ]
          },
          "subnets": [
            {
              "name": "GEN-UNIQUE-5main",
              "properties": {
                "addressPrefix": "[concat(parameters('vNetPrefix'),'.0.0/24')]",
                "networkSecurityGroup": {
                  "id": "Microsoft.Network/networkSecurityGroups/GEN-UNIQUE-5nsg"
                }
              }
            }
          ]
        }
      },
      {
        "type": "Microsoft.Network/loadBalancers",
        "apiVersion": "2020-07-01",
        "location": "[resourceGroup().location]",
        "name": "GEN-UNIQUE-5intlb",
        "sku": {
          "name": "Standard"
        },
        "dependsOn": [
          "Microsoft.Network/virtualNetworks/GEN-UNIQUE-5vnet"
        ],
        "properties": {
          "frontendIPConfigurations": [
            {
              "name": "rds-brokers-frontend",
              "properties": {
                "privateIPAllocationMethod": "Static",
                "privateIPAddress": "10.100.0.4",
                "privateIPAddressVersion": "IPv4",
                "subnet": {
                  "id": "Microsoft.Network/virtualNetworks/subnets/GEN-UNIQUE-5vnet/GEN-UNIQUE-5main"
                }
              }
            },
            {
              "name": "rds-webgateways-frontend",
              "properties": {
                "privateIPAllocationMethod": "Dynamic",
                "privateIPAddressVersion": "IPv4",
                "subnet": {
                  "id": "Microsoft.Network/virtualNetworks/subnets/GEN-UNIQUE-5vnet/GEN-UNIQUE-5main"
                }
              }
            }
          ],
          "backendAddressPools": [
            {
              "name": "rds-brokers-int-pool",
              "properties": {}
            },
            {
              "name": "rds-webgateways-int-pool",
              "properties": {}
            }
          ],
          "probes": [
            {
              "name": "rds-broker-probe",
              "properties": {
                "intervalInSeconds": 5,
                "numberOfProbes": 2,
                "protocol": "Tcp",
                "port": 3389
              }
            },
            {
              "name": "rds-webgateway-probe",
              "properties": {
                "intervalInSeconds": 5,
                "numberOfProbes": 2,
                "protocol": "Tcp",
                "port": 443
              }
            }
          ],
          "loadBalancingRules": [
            {
              "name": "rds-brokers-tcp-rule",
              "properties": {
                "frontendIPConfiguration": {
                  "id": "Microsoft.Network/loadBalancers/frontendIpConfigurations/GEN-UNIQUE-5intlb/rds-brokers-frontend"
                },
                "backendAddressPool": {
                  "id": "Microsoft.Network/loadBalancers/backendAddressPools/GEN-UNIQUE-5intlb/rds-brokers-int-pool"
                },
                "probe": {
                  "id": "Microsoft.Network/loadBalancers/probes/GEN-UNIQUE-5intlb/rds-broker-probe"
                },
                "protocol": "Tcp",
                "frontendPort": 3389,
                "backendPort": 3389,
                "idleTimeoutInMinutes": 4
              }
            },
            {
              "name": "rds-brokers-udp-rule",
              "properties": {
                "frontendIPConfiguration": {
                  "id": "Microsoft.Network/loadBalancers/frontendIpConfigurations/GEN-UNIQUE-5intlb/rds-brokers-frontend"
                },
                "backendAddressPool": {
                  "id": "Microsoft.Network/loadBalancers/backendAddressPools/GEN-UNIQUE-5intlb/rds-brokers-int-pool"
                },
                "probe": {
                  "id": "Microsoft.Network/loadBalancers/probes/GEN-UNIQUE-5intlb/rds-broker-probe"
                },
                "protocol": "Udp",
                "frontendPort": 3389,
                "backendPort": 3389,
                "idleTimeoutInMinutes": 4
              }
            },
            {
              "name": "rds-webgateway-http-rule",
              "properties": {
                "frontendIPConfiguration": {
                  "id": "Microsoft.Network/loadBalancers/frontendIpConfigurations/GEN-UNIQUE-5intlb/rds-webgateways-frontend"
                },
                "backendAddressPool": {
                  "id": "Microsoft.Network/loadBalancers/backendAddressPools/GEN-UNIQUE-5intlb/rds-webgateways-int-pool"
                },
                "probe": {
                  "id": "Microsoft.Network/loadBalancers/probes/GEN-UNIQUE-5intlb/rds-webgateway-probe"
                },
                "protocol": "Tcp",
                "frontendPort": 80,
                "backendPort": 80,
                "idleTimeoutInMinutes": 4
              }
            },
            {
              "name": "rds-webgateway-https-rule",
              "properties": {
                "frontendIPConfiguration": {
                  "id": "Microsoft.Network/loadBalancers/frontendIpConfigurations/GEN-UNIQUE-5intlb/rds-webgateways-frontend"
                },
                "backendAddressPool": {
                  "id": "Microsoft.Network/loadBalancers/backendAddressPools/GEN-UNIQUE-5intlb/rds-webgateways-int-pool"
                },
                "probe": {
                  "id": "Microsoft.Network/loadBalancers/probes/GEN-UNIQUE-5intlb/rds-webgateway-probe"
                },
                "protocol": "Tcp",
                "frontendPort": 443,
                "backendPort": 443,
                "idleTimeoutInMinutes": 4
              }
            },
            {
              "name": "rds-webgateway-udp-rule",
              "properties": {
                "frontendIPConfiguration": {
                  "id": "Microsoft.Network/loadBalancers/frontendIpConfigurations/GEN-UNIQUE-5intlb/rds-webgateways-frontend"
                },
                "backendAddressPool": {
                  "id": "Microsoft.Network/loadBalancers/backendAddressPools/GEN-UNIQUE-5intlb/rds-webgateways-int-pool"
                },
                "probe": {
                  "id": "Microsoft.Network/loadBalancers/probes/GEN-UNIQUE-5intlb/rds-webgateway-probe"
                },
                "protocol": "Udp",
                "frontendPort": 3391,
                "backendPort": 3391,
                "idleTimeoutInMinutes": 4
              }
            }
          ]
        }
      },
      {
        "name": "[variables('publicLbIpName')]",
        "type": "Microsoft.Network/publicIPAddresses",
        "apiVersion": "2020-07-01",
        "location": "[resourceGroup().location]",
        "sku": {
          "name": "Standard"
        },
        "properties": {
          "publicIPAllocationMethod": "Static",
          "dnsSettings": {
            "domainNameLabel": "[variables('publicLbIpName')]"
          }
        }
      },
      {
        "name": "GEN-UNIQUE-5publb",
        "type": "Microsoft.Network/loadBalancers",
        "apiVersion": "2020-07-01",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicLbIpName'))]",
          "[resourceId('Microsoft.Network/virtualNetworks',concat(parameters('projectName'),'vnet'))]"
        ],
        "sku": {
          "name": "Standard"
        },
        "properties": {
          "frontendIPConfigurations": [
            {
              "name": "rds-webgateways-frontend",
              "properties": {
                "publicIPAddress": {
                  "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicLbIpName'))]"
                }
              }
            }
          ],
          "backendAddressPools": [
            {
              "name": "rds-webgateways-pub-pool"
            }
          ],
          "probes": [
            {
              "name": "rds-webgateways-probe",
              "properties": {
                "protocol": "Tcp",
                "port": 80,
                "intervalInSeconds": 5,
                "numberOfProbes": 2
              }
            }
          ],
          "loadBalancingRules": [
            {
              "name": "rds-webgateways-http-rule",
              "properties": {
                "frontendIPConfiguration": {
                  "id": "Microsoft.Network/loadBalancers/frontendIPConfigurations/GEN-UNIQUE-5publb/rds-webgateways-frontend"
                },
                "backendAddressPool": {
                  "id": "Microsoft.Network/loadBalancers/backendAddressPools/GEN-UNIQUE-5publb/rds-webgateways-pub-pool"
                },
                "probe": {
                  "id": "Microsoft.Network/loadBalancers/probes/GEN-UNIQUE-5publb/rds-webgateways-probe"
                },
                "protocol": "Tcp",
                "frontendPort": 80,
                "backendPort": 80,
                "enableFloatingIP": false,
                "idleTimeoutInMinutes": 5
              }
            },
            {
              "name": "rds-webgateways-https-rule",
              "properties": {
                "frontendIPConfiguration": {
                  "id": "Microsoft.Network/loadBalancers/frontendIPConfigurations/GEN-UNIQUE-5publb/rds-webgateways-frontend"
                },
                "backendAddressPool": {
                  "id": "Microsoft.Network/loadBalancers/backendAddressPools/GEN-UNIQUE-5publb/rds-webgateways-pub-pool"
                },
                "probe": {
                  "id": "Microsoft.Network/loadBalancers/probes/GEN-UNIQUE-5publb/rds-webgateways-probe"
                },
                "protocol": "Tcp",
                "frontendPort": 443,
                "backendPort": 443,
                "enableFloatingIP": false,
                "idleTimeoutInMinutes": 5
              }
            },
            {
              "name": "rds-webgateways-udp-rule",
              "properties": {
                "frontendIPConfiguration": {
                  "id": "Microsoft.Network/loadBalancers/frontendIPConfigurations/GEN-UNIQUE-5publb/rds-webgateways-frontend"
                },
                "backendAddressPool": {
                  "id": "Microsoft.Network/loadBalancers/backendAddressPools/GEN-UNIQUE-5publb/rds-webgateways-pub-pool"
                },
                "probe": {
                  "id": "Microsoft.Network/loadBalancers/probes/GEN-UNIQUE-5publb/rds-webgateways-probe"
                },
                "protocol": "Udp",
                "frontendPort": 3391,
                "backendPort": 3391,
                "enableFloatingIP": false,
                "idleTimeoutInMinutes": 5
              }
            }
          ]
        }
      },
      {
        "name": "[variables('sqlServerName')]",
        "type": "Microsoft.Sql/servers",
        "apiVersion": "2020-11-01-preview",
        "location": "[resourceGroup().location]",
        "properties": {
          "administratorLogin": "GEN-UNIQUE-5",
          "administratorLoginPassword": "GEN-PASSWORD"
        },
        "resources": [
          {
            "type": "firewallRules",
            "apiVersion": "2020-11-01-preview",
            "dependsOn": [
              "[resourceId('Microsoft.Sql/servers',variables('sqlServerName'))]"
            ],
            "location": "[resourceGroup().location]",
            "name": "AllowAllWindowsAzureIps",
            "properties": {
              "startIpAddress": "0.0.0.0",
              "endIpAddress": "0.0.0.0"
            }
          }
        ]
      },
      {
        "name": "[concat(variables('sqlServerName'),'/',variables('rdsDBName'))]",
        "type": "Microsoft.Sql/servers/databases",
        "apiVersion": "2020-11-01-preview",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "[resourceId('Microsoft.Sql/servers',variables('sqlServerName'))]"
        ],
        "sku": {
          "name": "S2",
          "tier": "Standard"
        },
        "properties": {
          "collation": "SQL_Latin1_General_CP1_CI_AS",
          "maxSizeBytes": "1073741824"
        }
      },
      {
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2021-04-01",
        "name": "[concat(variables('vmProperties')[copyIndex()].name,'Deployment')]",
        "dependsOn": [
          "[resourceId('Microsoft.Network/virtualNetworks',concat(parameters('projectName'),'vnet'))]",
          "[resourceId('Microsoft.Network/loadBalancers',concat(parameters('projectName'),'intlb'))]",
          "[resourceId('Microsoft.Network/loadBalancers',concat(parameters('projectName'),'publb'))]",
          "[resourceId('Microsoft.Storage/storageAccounts',variables('diagStorageName'))]",
          "[resourceId('Microsoft.Sql/servers/databases',variables('sqlServerName'),variables('rdsDBName'))]"
        ],
        "properties": {
          "mode": "Incremental",
          "expressionEvaluationOptions": {
            "scope": "inner"
          },
          "parameters": {
            "location": {
              "value": "[resourceGroup().location]"
            },
            "timeZoneID": {
              "value": "UTC"
            },
            "loopCount": {
              "value": "(vmProperties)[copyIndex()].count"
            },
            "storageDiagUrl": {
              "value": "[reference(resourceId('Microsoft.Storage/storageAccounts',variables('diagStorageName'))).primaryEndpoints.blob]"
            },
            "vmName": {
              "value": "(vmProperties)[copyIndex()].name"
            },
            "subNetRef": {
              "value": "Microsoft.Network/virtualNetworks/subnets/GEN-UNIQUE-5vnet/GEN-UNIQUE-5main"
            },
            "vmSize": {
              "value": "Standard_A2_v2"
            },
            "vmSpot": {
              "value": true
            },
            "vmStorageSkuType": {
              "value": "Standard_LRS"
            },
            "adminUser": {
              "value": "GEN-UNIQUE-5"
            },
            "adminPasswd": {
              "value": "GEN-PASSWORD"
            },
            "intLbName": {
              "value": "GEN-UNIQUE-5intlb"
            },
            "intLbBackEndPool": {
              "value": "(vmProperties)[copyIndex()].intLbBackEndPool"
            },
            "intLbBrokerIP": {
              "value": "[reference(resourceId('Microsoft.Network/loadBalancers',concat(parameters('projectName'),'intlb'))).frontendIPConfigurations[0].properties.privateIPAddress]"
            },
            "intLbWebGWIP": {
              "value": "[reference(resourceId('Microsoft.Network/loadBalancers',concat(parameters('projectName'),'intlb'))).frontendIPConfigurations[1].properties.privateIPAddress]"
            },
            "pubLbName": {
              "value": "GEN-UNIQUE-5publb"
            },
            "pubLbBackEndPool": {
              "value": "(vmProperties)[copyIndex()].pubLbBackEndPool"
            },
            "adDomainName": {
              "value": "contoso.com"
            },
            "firstDcIP": {
              "value": "10.100.0.99"
            },
            "dcName": {
              "value": "(vmProperties)[0].name"
            },
            "MainConnectionBroker": {
              "value": "[concat(variables('vmProperties')[2].name,'1')]"
            },
            "WebAccessServerName": {
              "value": "(vmProperties)[1].name"
            },
            "WebAccessServerCount": {
              "value": "(vmProperties)[1].count"
            },
            "SessionHostName": {
              "value": "(vmProperties)[3].name"
            },
            "SessionHostCount": {
              "value": "(vmProperties)[3].count"
            },
            "LicenseServerName": {
              "value": "(vmProperties)[4].name"
            },
            "LicenseServerCount": {
              "value": "(vmProperties)[4].count"
            },
            "externalFqdn": {
              "value": "[variables('externalFqdn')]"
            },
            "brokerFqdn": {
              "value": "[variables('brokerFqdn')]"
            },
            "externalDnsZone": {
              "value": "contosocorp.com"
            },
            "dscFunction": {
              "value": "(vmProperties)[copyIndex()].dscFunction"
            },
            "dscLocation": {
              "value": "[deployment().properties.templatelink.uri]"
            },
            "dscScriptName": {
              "value": "deployrdslab.zip"
            },
            "scriptName": {
              "value": "deploycertha.ps1"
            },
            "deployHA": {
              "value": false
            },
            "rdsDBName": {
              "value": "rdsdb"
            },
            "azureSqlFqdn": {
              "value": "[reference(resourceId('Microsoft.Sql/servers',variables('sqlServerName'))).fullyQualifiedDomainName]"
            },
            "webGwName": {
              "value": "remoteapps"
            },
            "_artifactsLocationSasToken": {
              "value": ""
            }
          },
          "template": {
            "contentVersion": "1.0.0.0",
            "parameters": {
              "location": {
                "type": "string"
              },
              "timeZoneID": {
                "type": "string"
              },
              "loopCount": {
                "type": "int"
              },
              "storageDiagUrl": {
                "type": "string"
              },
              "vmName": {
                "type": "string"
              },
              "subNetRef": {
                "type": "string"
              },
              "vmSize": {
                "type": "string"
              },
              "vmSpot": {
                "type": "bool"
              },
              "vmStorageSkuType": {
                "defaultValue": "StandardSSD_LRS",
                "allowedValues": [
                  "Premium_LRS",
                  "StandardSSD_LRS",
                  "Standard_LRS"
                ],
                "type": "string"
              },
              "adminUser": {
                "type": "string"
              },
              "adminPasswd": {
                "type": "securestring"
              },
              "intLbName": {
                "type": "string"
              },
              "intLbBackEndPool": {
                "type": "string"
              },
              "intLbBrokerIP": {
                "type": "string"
              },
              "intLbWebGWIP": {
                "type": "string"
              },
              "pubLbName": {
                "type": "string"
              },
              "pubLbBackEndPool": {
                "type": "string"
              },
              "adDomainName": {
                "type": "string"
              },
              "firstDcIP": {
                "type": "string"
              },
              "dcName": {
                "type": "string"
              },
              "MainConnectionBroker": {
                "type": "string"
              },
              "WebAccessServerName": {
                "type": "string"
              },
              "WebAccessServerCount": {
                "type": "int"
              },
              "SessionHostName": {
                "type": "string"
              },
              "SessionHostCount": {
                "type": "int"
              },
              "LicenseServerName": {
                "type": "string"
              },
              "LicenseServerCount": {
                "type": "int"
              },
              "externalFqdn": {
                "type": "string"
              },
              "brokerFqdn": {
                "type": "string"
              },
              "externalDnsZone": {
                "type": "string"
              },
              "dscFunction": {
                "type": "string"
              },
              "dscLocation": {
                "type": "string"
              },
              "dscScriptName": {
                "type": "string"
              },
              "scriptName": {
                "type": "string"
              },
              "deployHA": {
                "type": "bool"
              },
              "rdsDBName": {
                "type": "string"
              },
              "azureSQLFqdn": {
                "type": "string"
              },
              "webGwName": {
                "type": "string"
              },
              "_artifactsLocationSasToken": {
                "type": "securestring"
              }
            },
            "variables": {
              "scriptPath": "[uri(parameters('dscLocation'),concat('scripts/',parameters('scriptName'),parameters('_artifactsLocationSasToken')))]",
              "intlbPool": [
                {
                  "id": "Microsoft.Network/loadBalancers/backendAddressPools/intLbName/intLbBackEndPool"
                }
              ],
              "pubIntlbPool": [
                {
                  "id": "Microsoft.Network/loadBalancers/backendAddressPools/intLbName/intLbBackEndPool"
                },
                {
                  "id": "Microsoft.Network/loadBalancers/backendAddressPools/pubLbName/pubLbBackEndPool"
                }
              ]
            },
            "resources": [
              {
                "type": "Microsoft.Network/publicIPAddresses",
                "apiVersion": "2020-07-01",
                "name": "[concat(parameters('vmName'),copyIndex(1),'pip')]",
                "location": "[resourceGroup().location]",
                "sku": {
                  "name": "Standard"
                },
                "copy": {
                  "name": "vmNamepipcopy",
                  "count": "loopCount"
                },
                "properties": {
                  "publicIPAllocationMethod": "Static",
                  "dnsSettings": {
                    "domainNameLabel": "[concat(parameters('vmName'),'pip',copyIndex(1))]"
                  }
                }
              },
              {
                "type": "Microsoft.Network/networkInterfaces",
                "apiVersion": "2020-07-01",
                "location": "[resourceGroup().location]",
                "name": "[concat(parameters('vmName'),copyIndex(1),'nic1')]",
                "copy": {
                  "name": "vmNameniccopy",
                  "count": "loopCount"
                },
                "dependsOn": [
                  "[resourceId('Microsoft.Network/publicIPAddresses',concat(parameters('vmName'),copyIndex(1),'pip'))]"
                ],
                "properties": {
                  "ipConfigurations": [
                    {
                      "name": "ipconfig",
                      "properties": {
                        "subnet": {
                          "id": "subNetRef"
                        },
                        "privateIPAllocationMethod": "[if(equals(parameters('vmName'),parameters('dcName')),if(equals(copyIndex(1),1),'static','dynamic'),'dynamic')]",
                        "privateIPAddress": "[if(equals(parameters('vmName'),parameters('dcName')),if(equals(copyIndex(1),1),parameters('firstDcIP'),json('null')),json('null'))]",
                        "publicIPAddress": {
                          "id": "[resourceId('Microsoft.Network/publicIPAddresses',concat(parameters('vmName'),copyIndex(1),'pip'))]"
                        },
                        "loadBalancerBackendAddressPools": "[if(not(empty(parameters('intLbBackEndPool'))),if(not(empty(parameters('pubLbBackEndPool'))),variables('pubIntlbPool'),variables('intlbPool')),json('null'))]"
                      }
                    }
                  ]
                }
              },
              {
                "type": "Microsoft.Compute/virtualMachines",
                "apiVersion": "2020-12-01",
                "name": "[concat(parameters('vmName'),copyIndex(1))]",
                "location": "[resourceGroup().location]",
                "copy": {
                  "name": "vmNamevmcopy",
                  "count": "loopCount"
                },
                "dependsOn": [
                  "[resourceId('Microsoft.Network/networkInterfaces',concat(parameters('vmName'),copyIndex(1),'nic1'))]"
                ],
                "properties": {
                  "licenseType": "Windows_Server",
                  "billingProfile": {
                    "maxPrice": "[if(equals(parameters('vmSpot'),bool('true')),'-1',json('null'))]"
                  },
                  "priority": "[if(equals(parameters('vmSpot'),bool('true')),'Spot',json('null'))]",
                  "evictionPolicy": "[if(equals(parameters('vmSpot'),bool('true')),'Deallocate',json('null'))]",
                  "diagnosticsProfile": {
                    "bootDiagnostics": {
                      "enabled": true,
                      "storageUri": "storageDiagUrl"
                    }
                  },
                  "networkProfile": {
                    "networkInterfaces": [
                      {
                        "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(parameters('vmName'),copyIndex(1),'nic1'))]"
                      }
                    ]
                  },
                  "osProfile": {
                    "adminUsername": "GEN-UNIQUE-5",
                    "adminPassword": "GEN-PASSWORD",
                    "computerName": "[concat(parameters('vmName'),copyIndex(1))]"
                  },
                  "hardwareProfile": {
                    "vmSize": "Standard_A2_v2"
                  },
                  "storageProfile": {
                    "osDisk": {
                      "createOption": "FromImage",
                      "managedDisk": {
                        "storageAccountType": "Standard_LRS"
                      }
                    },
                    "imageReference": {
                      "publisher": "MicrosoftWindowsServer",
                      "offer": "WindowsServer",
                      "sku": "2019-Datacenter",
                      "version": "latest"
                    }
                  }
                },
                "resources": [
                  {
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "apiVersion": "2020-12-01",
                    "name": "[concat(parameters('vmName'),copyIndex(1),'/dscext')]",
                    "location": "[resourceGroup().location]",
                    "condition": "[not(empty(parameters('dscFunction')))]",
                    "dependsOn": [
                      "[resourceId('Microsoft.Compute/virtualMachines',concat(parameters('vmName'),copyIndex(1)))]"
                    ],
                    "properties": {
                      "publisher": "Microsoft.Powershell",
                      "type": "DSC",
                      "typeHandlerVersion": "2.11",
                      "autoUpgradeMinorVersion": true,
                      "settings": {
                        "ModulesUrl": "[uri(parameters('dscLocation'),concat('dsc/',parameters('dscScriptName'),parameters('_artifactsLocationSasToken')))]",
                        "ConfigurationFunction": "dscFunction",
                        "Properties": {
                          "AdminCreds": {
                            "UserName": "GEN-UNIQUE-5",
                            "Password": "PrivateSettingsRef:AdminPassword"
                          },
                          "RDSParameters": [
                            {
                              "timeZoneID": "UTC",
                              "DomainName": "contoso.com",
                              "DNSServer": "firstDcIP",
                              "MainConnectionBroker": "MainConnectionBroker",
                              "WebAccessServer": "WebAccessServerName1",
                              "SessionHost": "SessionHostName1",
                              "LicenseServer": "LicenseServerName1",
                              "externalFqdn": "externalFqdn",
                              "externalDnsDomain": "contosocorp.com",
                              "IntBrokerLBIP": "intLbBrokerIP",
                              "IntWebGWLBIP": "intLbWebGWIP",
                              "WebGWDNS": "webGwName"
                            }
                          ]
                        }
                      },
                      "protectedSettings": {
                        "Items": {
                          "AdminPassword": "GEN-PASSWORD"
                        }
                      }
                    }
                  },
                  {
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "apiVersion": "2020-12-01",
                    "name": "[concat(parameters('vmName'),copyIndex(1),'/pwshext')]",
                    "location": "[resourceGroup().location]",
                    "condition": "[and(contains(parameters('vmName'),'cb'),parameters('deployHA'))]",
                    "dependsOn": [
                      "[resourceId('Microsoft.Compute/virtualMachines',concat(parameters('vmName'),copyIndex(1)))]",
                      "[resourceId('Microsoft.Compute/virtualMachines/extensions',concat(parameters('vmName'),copyIndex(1)),'dscext')]"
                    ],
                    "properties": {
                      "publisher": "Microsoft.Compute",
                      "type": "CustomScriptExtension",
                      "typeHandlerVersion": "1.10",
                      "autoUpgradeMinorVersion": true,
                      "settings": {
                        "fileUris": [
                          "scriptPath"
                        ]
                      },
                      "protectedSettings": {
                        "commandToExecute": "powershell -ExecutionPolicy Bypass -File ./scriptName -AdminUser GEN-UNIQUE-5 -Passwd GEN-PASSWORD -MainConnectionBroker MainConnectionBroker -BrokerFqdn brokerFqdn -WebGatewayFqdn externalFqdn -AzureSQLFQDN azureSqlFqdn -AzureSQLDBName rdsDBName -WebAccessServerName WebAccessServerName -WebAccessServerCount WebAccessServerCount -SessionHostName SessionHostName -SessionHostCount SessionHostCount -LicenseServerName LicenseServerName -LicenseServerCount LicenseServerCount"
                      }
                    }
                  }
                ]
              }
            ],
            "\uff04schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#"
          }
        }
      },
      {
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2021-04-01",
        "name": "[concat(variables('vmProperties')[copyIndex()].name,'Deployment')]",
        "dependsOn": [
          "[resourceId('Microsoft.Network/virtualNetworks',concat(parameters('projectName'),'vnet'))]",
          "[resourceId('Microsoft.Network/loadBalancers',concat(parameters('projectName'),'intlb'))]",
          "[resourceId('Microsoft.Network/loadBalancers',concat(parameters('projectName'),'publb'))]",
          "[resourceId('Microsoft.Storage/storageAccounts',variables('diagStorageName'))]",
          "[resourceId('Microsoft.Sql/servers/databases',variables('sqlServerName'),variables('rdsDBName'))]"
        ],
        "properties": {
          "mode": "Incremental",
          "expressionEvaluationOptions": {
            "scope": "inner"
          },
          "parameters": {
            "location": {
              "value": "[resourceGroup().location]"
            },
            "timeZoneID": {
              "value": "UTC"
            },
            "loopCount": {
              "value": "(vmProperties)[copyIndex()].count"
            },
            "storageDiagUrl": {
              "value": "[reference(resourceId('Microsoft.Storage/storageAccounts',variables('diagStorageName'))).primaryEndpoints.blob]"
            },
            "vmName": {
              "value": "(vmProperties)[copyIndex()].name"
            },
            "subNetRef": {
              "value": "Microsoft.Network/virtualNetworks/subnets/GEN-UNIQUE-5vnet/GEN-UNIQUE-5main"
            },
            "vmSize": {
              "value": "Standard_A2_v2"
            },
            "vmSpot": {
              "value": true
            },
            "vmStorageSkuType": {
              "value": "Standard_LRS"
            },
            "adminUser": {
              "value": "GEN-UNIQUE-5"
            },
            "adminPasswd": {
              "value": "GEN-PASSWORD"
            },
            "intLbName": {
              "value": "GEN-UNIQUE-5intlb"
            },
            "intLbBackEndPool": {
              "value": "(vmProperties)[copyIndex()].intLbBackEndPool"
            },
            "intLbBrokerIP": {
              "value": "[reference(resourceId('Microsoft.Network/loadBalancers',concat(parameters('projectName'),'intlb'))).frontendIPConfigurations[0].properties.privateIPAddress]"
            },
            "intLbWebGWIP": {
              "value": "[reference(resourceId('Microsoft.Network/loadBalancers',concat(parameters('projectName'),'intlb'))).frontendIPConfigurations[1].properties.privateIPAddress]"
            },
            "pubLbName": {
              "value": "GEN-UNIQUE-5publb"
            },
            "pubLbBackEndPool": {
              "value": "(vmProperties)[copyIndex()].pubLbBackEndPool"
            },
            "adDomainName": {
              "value": "contoso.com"
            },
            "firstDcIP": {
              "value": "10.100.0.99"
            },
            "dcName": {
              "value": "(vmProperties)[0].name"
            },
            "MainConnectionBroker": {
              "value": "[concat(variables('vmProperties')[2].name,'1')]"
            },
            "WebAccessServerName": {
              "value": "(vmProperties)[1].name"
            },
            "WebAccessServerCount": {
              "value": "(vmProperties)[1].count"
            },
            "SessionHostName": {
              "value": "(vmProperties)[3].name"
            },
            "SessionHostCount": {
              "value": "(vmProperties)[3].count"
            },
            "LicenseServerName": {
              "value": "(vmProperties)[4].name"
            },
            "LicenseServerCount": {
              "value": "(vmProperties)[4].count"
            },
            "externalFqdn": {
              "value": "[variables('externalFqdn')]"
            },
            "brokerFqdn": {
              "value": "[variables('brokerFqdn')]"
            },
            "externalDnsZone": {
              "value": "contosocorp.com"
            },
            "dscFunction": {
              "value": "(vmProperties)[copyIndex()].dscFunction"
            },
            "dscLocation": {
              "value": "[deployment().properties.templatelink.uri]"
            },
            "dscScriptName": {
              "value": "deployrdslab.zip"
            },
            "scriptName": {
              "value": "deploycertha.ps1"
            },
            "deployHA": {
              "value": false
            },
            "rdsDBName": {
              "value": "rdsdb"
            },
            "azureSqlFqdn": {
              "value": "[reference(resourceId('Microsoft.Sql/servers',variables('sqlServerName'))).fullyQualifiedDomainName]"
            },
            "webGwName": {
              "value": "remoteapps"
            },
            "_artifactsLocationSasToken": {
              "value": ""
            }
          },
          "template": {
            "contentVersion": "1.0.0.0",
            "parameters": {
              "location": {
                "type": "string"
              },
              "timeZoneID": {
                "type": "string"
              },
              "loopCount": {
                "type": "int"
              },
              "storageDiagUrl": {
                "type": "string"
              },
              "vmName": {
                "type": "string"
              },
              "subNetRef": {
                "type": "string"
              },
              "vmSize": {
                "type": "string"
              },
              "vmSpot": {
                "type": "bool"
              },
              "vmStorageSkuType": {
                "defaultValue": "StandardSSD_LRS",
                "allowedValues": [
                  "Premium_LRS",
                  "StandardSSD_LRS",
                  "Standard_LRS"
                ],
                "type": "string"
              },
              "adminUser": {
                "type": "string"
              },
              "adminPasswd": {
                "type": "securestring"
              },
              "intLbName": {
                "type": "string"
              },
              "intLbBackEndPool": {
                "type": "string"
              },
              "intLbBrokerIP": {
                "type": "string"
              },
              "intLbWebGWIP": {
                "type": "string"
              },
              "pubLbName": {
                "type": "string"
              },
              "pubLbBackEndPool": {
                "type": "string"
              },
              "adDomainName": {
                "type": "string"
              },
              "firstDcIP": {
                "type": "string"
              },
              "dcName": {
                "type": "string"
              },
              "MainConnectionBroker": {
                "type": "string"
              },
              "WebAccessServerName": {
                "type": "string"
              },
              "WebAccessServerCount": {
                "type": "int"
              },
              "SessionHostName": {
                "type": "string"
              },
              "SessionHostCount": {
                "type": "int"
              },
              "LicenseServerName": {
                "type": "string"
              },
              "LicenseServerCount": {
                "type": "int"
              },
              "externalFqdn": {
                "type": "string"
              },
              "brokerFqdn": {
                "type": "string"
              },
              "externalDnsZone": {
                "type": "string"
              },
              "dscFunction": {
                "type": "string"
              },
              "dscLocation": {
                "type": "string"
              },
              "dscScriptName": {
                "type": "string"
              },
              "scriptName": {
                "type": "string"
              },
              "deployHA": {
                "type": "bool"
              },
              "rdsDBName": {
                "type": "string"
              },
              "azureSQLFqdn": {
                "type": "string"
              },
              "webGwName": {
                "type": "string"
              },
              "_artifactsLocationSasToken": {
                "type": "securestring"
              }
            },
            "variables": {
              "scriptPath": "[uri(parameters('dscLocation'),concat('scripts/',parameters('scriptName'),parameters('_artifactsLocationSasToken')))]",
              "intlbPool": [
                {
                  "id": "Microsoft.Network/loadBalancers/backendAddressPools/intLbName/intLbBackEndPool"
                }
              ],
              "pubIntlbPool": [
                {
                  "id": "Microsoft.Network/loadBalancers/backendAddressPools/intLbName/intLbBackEndPool"
                },
                {
                  "id": "Microsoft.Network/loadBalancers/backendAddressPools/pubLbName/pubLbBackEndPool"
                }
              ]
            },
            "resources": [
              {
                "type": "Microsoft.Network/publicIPAddresses",
                "apiVersion": "2020-07-01",
                "name": "[concat(parameters('vmName'),copyIndex(1),'pip')]",
                "location": "[resourceGroup().location]",
                "sku": {
                  "name": "Standard"
                },
                "copy": {
                  "name": "vmNamepipcopy",
                  "count": "loopCount"
                },
                "properties": {
                  "publicIPAllocationMethod": "Static",
                  "dnsSettings": {
                    "domainNameLabel": "[concat(parameters('vmName'),'pip',copyIndex(1))]"
                  }
                }
              },
              {
                "type": "Microsoft.Network/networkInterfaces",
                "apiVersion": "2020-07-01",
                "location": "[resourceGroup().location]",
                "name": "[concat(parameters('vmName'),copyIndex(1),'nic1')]",
                "copy": {
                  "name": "vmNameniccopy",
                  "count": "loopCount"
                },
                "dependsOn": [
                  "[resourceId('Microsoft.Network/publicIPAddresses',concat(parameters('vmName'),copyIndex(1),'pip'))]"
                ],
                "properties": {
                  "ipConfigurations": [
                    {
                      "name": "ipconfig",
                      "properties": {
                        "subnet": {
                          "id": "subNetRef"
                        },
                        "privateIPAllocationMethod": "[if(equals(parameters('vmName'),parameters('dcName')),if(equals(copyIndex(1),1),'static','dynamic'),'dynamic')]",
                        "privateIPAddress": "[if(equals(parameters('vmName'),parameters('dcName')),if(equals(copyIndex(1),1),parameters('firstDcIP'),json('null')),json('null'))]",
                        "publicIPAddress": {
                          "id": "[resourceId('Microsoft.Network/publicIPAddresses',concat(parameters('vmName'),copyIndex(1),'pip'))]"
                        },
                        "loadBalancerBackendAddressPools": "[if(not(empty(parameters('intLbBackEndPool'))),if(not(empty(parameters('pubLbBackEndPool'))),variables('pubIntlbPool'),variables('intlbPool')),json('null'))]"
                      }
                    }
                  ]
                }
              },
              {
                "type": "Microsoft.Compute/virtualMachines",
                "apiVersion": "2020-12-01",
                "name": "[concat(parameters('vmName'),copyIndex(1))]",
                "location": "[resourceGroup().location]",
                "copy": {
                  "name": "vmNamevmcopy",
                  "count": "loopCount"
                },
                "dependsOn": [
                  "[resourceId('Microsoft.Network/networkInterfaces',concat(parameters('vmName'),copyIndex(1),'nic1'))]"
                ],
                "properties": {
                  "licenseType": "Windows_Server",
                  "billingProfile": {
                    "maxPrice": "[if(equals(parameters('vmSpot'),bool('true')),'-1',json('null'))]"
                  },
                  "priority": "[if(equals(parameters('vmSpot'),bool('true')),'Spot',json('null'))]",
                  "evictionPolicy": "[if(equals(parameters('vmSpot'),bool('true')),'Deallocate',json('null'))]",
                  "diagnosticsProfile": {
                    "bootDiagnostics": {
                      "enabled": true,
                      "storageUri": "storageDiagUrl"
                    }
                  },
                  "networkProfile": {
                    "networkInterfaces": [
                      {
                        "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(parameters('vmName'),copyIndex(1),'nic1'))]"
                      }
                    ]
                  },
                  "osProfile": {
                    "adminUsername": "GEN-UNIQUE-5",
                    "adminPassword": "GEN-PASSWORD",
                    "computerName": "[concat(parameters('vmName'),copyIndex(1))]"
                  },
                  "hardwareProfile": {
                    "vmSize": "Standard_A2_v2"
                  },
                  "storageProfile": {
                    "osDisk": {
                      "createOption": "FromImage",
                      "managedDisk": {
                        "storageAccountType": "Standard_LRS"
                      }
                    },
                    "imageReference": {
                      "publisher": "MicrosoftWindowsServer",
                      "offer": "WindowsServer",
                      "sku": "2019-Datacenter",
                      "version": "latest"
                    }
                  }
                },
                "resources": [
                  {
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "apiVersion": "2020-12-01",
                    "name": "[concat(parameters('vmName'),copyIndex(1),'/dscext')]",
                    "location": "[resourceGroup().location]",
                    "condition": "[not(empty(parameters('dscFunction')))]",
                    "dependsOn": [
                      "[resourceId('Microsoft.Compute/virtualMachines',concat(parameters('vmName'),copyIndex(1)))]"
                    ],
                    "properties": {
                      "publisher": "Microsoft.Powershell",
                      "type": "DSC",
                      "typeHandlerVersion": "2.11",
                      "autoUpgradeMinorVersion": true,
                      "settings": {
                        "ModulesUrl": "[uri(parameters('dscLocation'),concat('dsc/',parameters('dscScriptName'),parameters('_artifactsLocationSasToken')))]",
                        "ConfigurationFunction": "dscFunction",
                        "Properties": {
                          "AdminCreds": {
                            "UserName": "GEN-UNIQUE-5",
                            "Password": "PrivateSettingsRef:AdminPassword"
                          },
                          "RDSParameters": [
                            {
                              "timeZoneID": "UTC",
                              "DomainName": "contoso.com",
                              "DNSServer": "firstDcIP",
                              "MainConnectionBroker": "MainConnectionBroker",
                              "WebAccessServer": "WebAccessServerName1",
                              "SessionHost": "SessionHostName1",
                              "LicenseServer": "LicenseServerName1",
                              "externalFqdn": "externalFqdn",
                              "externalDnsDomain": "contosocorp.com",
                              "IntBrokerLBIP": "intLbBrokerIP",
                              "IntWebGWLBIP": "intLbWebGWIP",
                              "WebGWDNS": "webGwName"
                            }
                          ]
                        }
                      },
                      "protectedSettings": {
                        "Items": {
                          "AdminPassword": "GEN-PASSWORD"
                        }
                      }
                    }
                  },
                  {
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "apiVersion": "2020-12-01",
                    "name": "[concat(parameters('vmName'),copyIndex(1),'/pwshext')]",
                    "location": "[resourceGroup().location]",
                    "condition": "[and(contains(parameters('vmName'),'cb'),parameters('deployHA'))]",
                    "dependsOn": [
                      "[resourceId('Microsoft.Compute/virtualMachines',concat(parameters('vmName'),copyIndex(1)))]",
                      "[resourceId('Microsoft.Compute/virtualMachines/extensions',concat(parameters('vmName'),copyIndex(1)),'dscext')]"
                    ],
                    "properties": {
                      "publisher": "Microsoft.Compute",
                      "type": "CustomScriptExtension",
                      "typeHandlerVersion": "1.10",
                      "autoUpgradeMinorVersion": true,
                      "settings": {
                        "fileUris": [
                          "scriptPath"
                        ]
                      },
                      "protectedSettings": {
                        "commandToExecute": "powershell -ExecutionPolicy Bypass -File ./scriptName -AdminUser GEN-UNIQUE-5 -Passwd GEN-PASSWORD -MainConnectionBroker MainConnectionBroker -BrokerFqdn brokerFqdn -WebGatewayFqdn externalFqdn -AzureSQLFQDN azureSqlFqdn -AzureSQLDBName rdsDBName -WebAccessServerName WebAccessServerName -WebAccessServerCount WebAccessServerCount -SessionHostName SessionHostName -SessionHostCount SessionHostCount -LicenseServerName LicenseServerName -LicenseServerCount LicenseServerCount"
                      }
                    }
                  }
                ]
              }
            ],
            "\uff04schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#"
          }
        }
      },
      {
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2021-04-01",
        "name": "[concat(variables('vmProperties')[copyIndex()].name,'Deployment')]",
        "dependsOn": [
          "[resourceId('Microsoft.Network/virtualNetworks',concat(parameters('projectName'),'vnet'))]",
          "[resourceId('Microsoft.Network/loadBalancers',concat(parameters('projectName'),'intlb'))]",
          "[resourceId('Microsoft.Network/loadBalancers',concat(parameters('projectName'),'publb'))]",
          "[resourceId('Microsoft.Storage/storageAccounts',variables('diagStorageName'))]",
          "[resourceId('Microsoft.Sql/servers/databases',variables('sqlServerName'),variables('rdsDBName'))]"
        ],
        "properties": {
          "mode": "Incremental",
          "expressionEvaluationOptions": {
            "scope": "inner"
          },
          "parameters": {
            "location": {
              "value": "[resourceGroup().location]"
            },
            "timeZoneID": {
              "value": "UTC"
            },
            "loopCount": {
              "value": "(vmProperties)[copyIndex()].count"
            },
            "storageDiagUrl": {
              "value": "[reference(resourceId('Microsoft.Storage/storageAccounts',variables('diagStorageName'))).primaryEndpoints.blob]"
            },
            "vmName": {
              "value": "(vmProperties)[copyIndex()].name"
            },
            "subNetRef": {
              "value": "Microsoft.Network/virtualNetworks/subnets/GEN-UNIQUE-5vnet/GEN-UNIQUE-5main"
            },
            "vmSize": {
              "value": "Standard_A2_v2"
            },
            "vmSpot": {
              "value": true
            },
            "vmStorageSkuType": {
              "value": "Standard_LRS"
            },
            "adminUser": {
              "value": "GEN-UNIQUE-5"
            },
            "adminPasswd": {
              "value": "GEN-PASSWORD"
            },
            "intLbName": {
              "value": "GEN-UNIQUE-5intlb"
            },
            "intLbBackEndPool": {
              "value": "(vmProperties)[copyIndex()].intLbBackEndPool"
            },
            "intLbBrokerIP": {
              "value": "[reference(resourceId('Microsoft.Network/loadBalancers',concat(parameters('projectName'),'intlb'))).frontendIPConfigurations[0].properties.privateIPAddress]"
            },
            "intLbWebGWIP": {
              "value": "[reference(resourceId('Microsoft.Network/loadBalancers',concat(parameters('projectName'),'intlb'))).frontendIPConfigurations[1].properties.privateIPAddress]"
            },
            "pubLbName": {
              "value": "GEN-UNIQUE-5publb"
            },
            "pubLbBackEndPool": {
              "value": "(vmProperties)[copyIndex()].pubLbBackEndPool"
            },
            "adDomainName": {
              "value": "contoso.com"
            },
            "firstDcIP": {
              "value": "10.100.0.99"
            },
            "dcName": {
              "value": "(vmProperties)[0].name"
            },
            "MainConnectionBroker": {
              "value": "[concat(variables('vmProperties')[2].name,'1')]"
            },
            "WebAccessServerName": {
              "value": "(vmProperties)[1].name"
            },
            "WebAccessServerCount": {
              "value": "(vmProperties)[1].count"
            },
            "SessionHostName": {
              "value": "(vmProperties)[3].name"
            },
            "SessionHostCount": {
              "value": "(vmProperties)[3].count"
            },
            "LicenseServerName": {
              "value": "(vmProperties)[4].name"
            },
            "LicenseServerCount": {
              "value": "(vmProperties)[4].count"
            },
            "externalFqdn": {
              "value": "[variables('externalFqdn')]"
            },
            "brokerFqdn": {
              "value": "[variables('brokerFqdn')]"
            },
            "externalDnsZone": {
              "value": "contosocorp.com"
            },
            "dscFunction": {
              "value": "(vmProperties)[copyIndex()].dscFunction"
            },
            "dscLocation": {
              "value": "[deployment().properties.templatelink.uri]"
            },
            "dscScriptName": {
              "value": "deployrdslab.zip"
            },
            "scriptName": {
              "value": "deploycertha.ps1"
            },
            "deployHA": {
              "value": false
            },
            "rdsDBName": {
              "value": "rdsdb"
            },
            "azureSqlFqdn": {
              "value": "[reference(resourceId('Microsoft.Sql/servers',variables('sqlServerName'))).fullyQualifiedDomainName]"
            },
            "webGwName": {
              "value": "remoteapps"
            },
            "_artifactsLocationSasToken": {
              "value": ""
            }
          },
          "template": {
            "contentVersion": "1.0.0.0",
            "parameters": {
              "location": {
                "type": "string"
              },
              "timeZoneID": {
                "type": "string"
              },
              "loopCount": {
                "type": "int"
              },
              "storageDiagUrl": {
                "type": "string"
              },
              "vmName": {
                "type": "string"
              },
              "subNetRef": {
                "type": "string"
              },
              "vmSize": {
                "type": "string"
              },
              "vmSpot": {
                "type": "bool"
              },
              "vmStorageSkuType": {
                "defaultValue": "StandardSSD_LRS",
                "allowedValues": [
                  "Premium_LRS",
                  "StandardSSD_LRS",
                  "Standard_LRS"
                ],
                "type": "string"
              },
              "adminUser": {
                "type": "string"
              },
              "adminPasswd": {
                "type": "securestring"
              },
              "intLbName": {
                "type": "string"
              },
              "intLbBackEndPool": {
                "type": "string"
              },
              "intLbBrokerIP": {
                "type": "string"
              },
              "intLbWebGWIP": {
                "type": "string"
              },
              "pubLbName": {
                "type": "string"
              },
              "pubLbBackEndPool": {
                "type": "string"
              },
              "adDomainName": {
                "type": "string"
              },
              "firstDcIP": {
                "type": "string"
              },
              "dcName": {
                "type": "string"
              },
              "MainConnectionBroker": {
                "type": "string"
              },
              "WebAccessServerName": {
                "type": "string"
              },
              "WebAccessServerCount": {
                "type": "int"
              },
              "SessionHostName": {
                "type": "string"
              },
              "SessionHostCount": {
                "type": "int"
              },
              "LicenseServerName": {
                "type": "string"
              },
              "LicenseServerCount": {
                "type": "int"
              },
              "externalFqdn": {
                "type": "string"
              },
              "brokerFqdn": {
                "type": "string"
              },
              "externalDnsZone": {
                "type": "string"
              },
              "dscFunction": {
                "type": "string"
              },
              "dscLocation": {
                "type": "string"
              },
              "dscScriptName": {
                "type": "string"
              },
              "scriptName": {
                "type": "string"
              },
              "deployHA": {
                "type": "bool"
              },
              "rdsDBName": {
                "type": "string"
              },
              "azureSQLFqdn": {
                "type": "string"
              },
              "webGwName": {
                "type": "string"
              },
              "_artifactsLocationSasToken": {
                "type": "securestring"
              }
            },
            "variables": {
              "scriptPath": "[uri(parameters('dscLocation'),concat('scripts/',parameters('scriptName'),parameters('_artifactsLocationSasToken')))]",
              "intlbPool": [
                {
                  "id": "Microsoft.Network/loadBalancers/backendAddressPools/intLbName/intLbBackEndPool"
                }
              ],
              "pubIntlbPool": [
                {
                  "id": "Microsoft.Network/loadBalancers/backendAddressPools/intLbName/intLbBackEndPool"
                },
                {
                  "id": "Microsoft.Network/loadBalancers/backendAddressPools/pubLbName/pubLbBackEndPool"
                }
              ]
            },
            "resources": [
              {
                "type": "Microsoft.Network/publicIPAddresses",
                "apiVersion": "2020-07-01",
                "name": "[concat(parameters('vmName'),copyIndex(1),'pip')]",
                "location": "[resourceGroup().location]",
                "sku": {
                  "name": "Standard"
                },
                "copy": {
                  "name": "vmNamepipcopy",
                  "count": "loopCount"
                },
                "properties": {
                  "publicIPAllocationMethod": "Static",
                  "dnsSettings": {
                    "domainNameLabel": "[concat(parameters('vmName'),'pip',copyIndex(1))]"
                  }
                }
              },
              {
                "type": "Microsoft.Network/networkInterfaces",
                "apiVersion": "2020-07-01",
                "location": "[resourceGroup().location]",
                "name": "[concat(parameters('vmName'),copyIndex(1),'nic1')]",
                "copy": {
                  "name": "vmNameniccopy",
                  "count": "loopCount"
                },
                "dependsOn": [
                  "[resourceId('Microsoft.Network/publicIPAddresses',concat(parameters('vmName'),copyIndex(1),'pip'))]"
                ],
                "properties": {
                  "ipConfigurations": [
                    {
                      "name": "ipconfig",
                      "properties": {
                        "subnet": {
                          "id": "subNetRef"
                        },
                        "privateIPAllocationMethod": "[if(equals(parameters('vmName'),parameters('dcName')),if(equals(copyIndex(1),1),'static','dynamic'),'dynamic')]",
                        "privateIPAddress": "[if(equals(parameters('vmName'),parameters('dcName')),if(equals(copyIndex(1),1),parameters('firstDcIP'),json('null')),json('null'))]",
                        "publicIPAddress": {
                          "id": "[resourceId('Microsoft.Network/publicIPAddresses',concat(parameters('vmName'),copyIndex(1),'pip'))]"
                        },
                        "loadBalancerBackendAddressPools": "[if(not(empty(parameters('intLbBackEndPool'))),if(not(empty(parameters('pubLbBackEndPool'))),variables('pubIntlbPool'),variables('intlbPool')),json('null'))]"
                      }
                    }
                  ]
                }
              },
              {
                "type": "Microsoft.Compute/virtualMachines",
                "apiVersion": "2020-12-01",
                "name": "[concat(parameters('vmName'),copyIndex(1))]",
                "location": "[resourceGroup().location]",
                "copy": {
                  "name": "vmNamevmcopy",
                  "count": "loopCount"
                },
                "dependsOn": [
                  "[resourceId('Microsoft.Network/networkInterfaces',concat(parameters('vmName'),copyIndex(1),'nic1'))]"
                ],
                "properties": {
                  "licenseType": "Windows_Server",
                  "billingProfile": {
                    "maxPrice": "[if(equals(parameters('vmSpot'),bool('true')),'-1',json('null'))]"
                  },
                  "priority": "[if(equals(parameters('vmSpot'),bool('true')),'Spot',json('null'))]",
                  "evictionPolicy": "[if(equals(parameters('vmSpot'),bool('true')),'Deallocate',json('null'))]",
                  "diagnosticsProfile": {
                    "bootDiagnostics": {
                      "enabled": true,
                      "storageUri": "storageDiagUrl"
                    }
                  },
                  "networkProfile": {
                    "networkInterfaces": [
                      {
                        "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(parameters('vmName'),copyIndex(1),'nic1'))]"
                      }
                    ]
                  },
                  "osProfile": {
                    "adminUsername": "GEN-UNIQUE-5",
                    "adminPassword": "GEN-PASSWORD",
                    "computerName": "[concat(parameters('vmName'),copyIndex(1))]"
                  },
                  "hardwareProfile": {
                    "vmSize": "Standard_A2_v2"
                  },
                  "storageProfile": {
                    "osDisk": {
                      "createOption": "FromImage",
                      "managedDisk": {
                        "storageAccountType": "Standard_LRS"
                      }
                    },
                    "imageReference": {
                      "publisher": "MicrosoftWindowsServer",
                      "offer": "WindowsServer",
                      "sku": "2019-Datacenter",
                      "version": "latest"
                    }
                  }
                },
                "resources": [
                  {
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "apiVersion": "2020-12-01",
                    "name": "[concat(parameters('vmName'),copyIndex(1),'/dscext')]",
                    "location": "[resourceGroup().location]",
                    "condition": "[not(empty(parameters('dscFunction')))]",
                    "dependsOn": [
                      "[resourceId('Microsoft.Compute/virtualMachines',concat(parameters('vmName'),copyIndex(1)))]"
                    ],
                    "properties": {
                      "publisher": "Microsoft.Powershell",
                      "type": "DSC",
                      "typeHandlerVersion": "2.11",
                      "autoUpgradeMinorVersion": true,
                      "settings": {
                        "ModulesUrl": "[uri(parameters('dscLocation'),concat('dsc/',parameters('dscScriptName'),parameters('_artifactsLocationSasToken')))]",
                        "ConfigurationFunction": "dscFunction",
                        "Properties": {
                          "AdminCreds": {
                            "UserName": "GEN-UNIQUE-5",
                            "Password": "PrivateSettingsRef:AdminPassword"
                          },
                          "RDSParameters": [
                            {
                              "timeZoneID": "UTC",
                              "DomainName": "contoso.com",
                              "DNSServer": "firstDcIP",
                              "MainConnectionBroker": "MainConnectionBroker",
                              "WebAccessServer": "WebAccessServerName1",
                              "SessionHost": "SessionHostName1",
                              "LicenseServer": "LicenseServerName1",
                              "externalFqdn": "externalFqdn",
                              "externalDnsDomain": "contosocorp.com",
                              "IntBrokerLBIP": "intLbBrokerIP",
                              "IntWebGWLBIP": "intLbWebGWIP",
                              "WebGWDNS": "webGwName"
                            }
                          ]
                        }
                      },
                      "protectedSettings": {
                        "Items": {
                          "AdminPassword": "GEN-PASSWORD"
                        }
                      }
                    }
                  },
                  {
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "apiVersion": "2020-12-01",
                    "name": "[concat(parameters('vmName'),copyIndex(1),'/pwshext')]",
                    "location": "[resourceGroup().location]",
                    "condition": "[and(contains(parameters('vmName'),'cb'),parameters('deployHA'))]",
                    "dependsOn": [
                      "[resourceId('Microsoft.Compute/virtualMachines',concat(parameters('vmName'),copyIndex(1)))]",
                      "[resourceId('Microsoft.Compute/virtualMachines/extensions',concat(parameters('vmName'),copyIndex(1)),'dscext')]"
                    ],
                    "properties": {
                      "publisher": "Microsoft.Compute",
                      "type": "CustomScriptExtension",
                      "typeHandlerVersion": "1.10",
                      "autoUpgradeMinorVersion": true,
                      "settings": {
                        "fileUris": [
                          "scriptPath"
                        ]
                      },
                      "protectedSettings": {
                        "commandToExecute": "powershell -ExecutionPolicy Bypass -File ./scriptName -AdminUser GEN-UNIQUE-5 -Passwd GEN-PASSWORD -MainConnectionBroker MainConnectionBroker -BrokerFqdn brokerFqdn -WebGatewayFqdn externalFqdn -AzureSQLFQDN azureSqlFqdn -AzureSQLDBName rdsDBName -WebAccessServerName WebAccessServerName -WebAccessServerCount WebAccessServerCount -SessionHostName SessionHostName -SessionHostCount SessionHostCount -LicenseServerName LicenseServerName -LicenseServerCount LicenseServerCount"
                      }
                    }
                  }
                ]
              }
            ],
            "\uff04schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#"
          }
        }
      },
      {
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2021-04-01",
        "name": "[concat(variables('vmProperties')[copyIndex()].name,'Deployment')]",
        "dependsOn": [
          "[resourceId('Microsoft.Network/virtualNetworks',concat(parameters('projectName'),'vnet'))]",
          "[resourceId('Microsoft.Network/loadBalancers',concat(parameters('projectName'),'intlb'))]",
          "[resourceId('Microsoft.Network/loadBalancers',concat(parameters('projectName'),'publb'))]",
          "[resourceId('Microsoft.Storage/storageAccounts',variables('diagStorageName'))]",
          "[resourceId('Microsoft.Sql/servers/databases',variables('sqlServerName'),variables('rdsDBName'))]"
        ],
        "properties": {
          "mode": "Incremental",
          "expressionEvaluationOptions": {
            "scope": "inner"
          },
          "parameters": {
            "location": {
              "value": "[resourceGroup().location]"
            },
            "timeZoneID": {
              "value": "UTC"
            },
            "loopCount": {
              "value": "(vmProperties)[copyIndex()].count"
            },
            "storageDiagUrl": {
              "value": "[reference(resourceId('Microsoft.Storage/storageAccounts',variables('diagStorageName'))).primaryEndpoints.blob]"
            },
            "vmName": {
              "value": "(vmProperties)[copyIndex()].name"
            },
            "subNetRef": {
              "value": "Microsoft.Network/virtualNetworks/subnets/GEN-UNIQUE-5vnet/GEN-UNIQUE-5main"
            },
            "vmSize": {
              "value": "Standard_A2_v2"
            },
            "vmSpot": {
              "value": true
            },
            "vmStorageSkuType": {
              "value": "Standard_LRS"
            },
            "adminUser": {
              "value": "GEN-UNIQUE-5"
            },
            "adminPasswd": {
              "value": "GEN-PASSWORD"
            },
            "intLbName": {
              "value": "GEN-UNIQUE-5intlb"
            },
            "intLbBackEndPool": {
              "value": "(vmProperties)[copyIndex()].intLbBackEndPool"
            },
            "intLbBrokerIP": {
              "value": "[reference(resourceId('Microsoft.Network/loadBalancers',concat(parameters('projectName'),'intlb'))).frontendIPConfigurations[0].properties.privateIPAddress]"
            },
            "intLbWebGWIP": {
              "value": "[reference(resourceId('Microsoft.Network/loadBalancers',concat(parameters('projectName'),'intlb'))).frontendIPConfigurations[1].properties.privateIPAddress]"
            },
            "pubLbName": {
              "value": "GEN-UNIQUE-5publb"
            },
            "pubLbBackEndPool": {
              "value": "(vmProperties)[copyIndex()].pubLbBackEndPool"
            },
            "adDomainName": {
              "value": "contoso.com"
            },
            "firstDcIP": {
              "value": "10.100.0.99"
            },
            "dcName": {
              "value": "(vmProperties)[0].name"
            },
            "MainConnectionBroker": {
              "value": "[concat(variables('vmProperties')[2].name,'1')]"
            },
            "WebAccessServerName": {
              "value": "(vmProperties)[1].name"
            },
            "WebAccessServerCount": {
              "value": "(vmProperties)[1].count"
            },
            "SessionHostName": {
              "value": "(vmProperties)[3].name"
            },
            "SessionHostCount": {
              "value": "(vmProperties)[3].count"
            },
            "LicenseServerName": {
              "value": "(vmProperties)[4].name"
            },
            "LicenseServerCount": {
              "value": "(vmProperties)[4].count"
            },
            "externalFqdn": {
              "value": "[variables('externalFqdn')]"
            },
            "brokerFqdn": {
              "value": "[variables('brokerFqdn')]"
            },
            "externalDnsZone": {
              "value": "contosocorp.com"
            },
            "dscFunction": {
              "value": "(vmProperties)[copyIndex()].dscFunction"
            },
            "dscLocation": {
              "value": "[deployment().properties.templatelink.uri]"
            },
            "dscScriptName": {
              "value": "deployrdslab.zip"
            },
            "scriptName": {
              "value": "deploycertha.ps1"
            },
            "deployHA": {
              "value": false
            },
            "rdsDBName": {
              "value": "rdsdb"
            },
            "azureSqlFqdn": {
              "value": "[reference(resourceId('Microsoft.Sql/servers',variables('sqlServerName'))).fullyQualifiedDomainName]"
            },
            "webGwName": {
              "value": "remoteapps"
            },
            "_artifactsLocationSasToken": {
              "value": ""
            }
          },
          "template": {
            "contentVersion": "1.0.0.0",
            "parameters": {
              "location": {
                "type": "string"
              },
              "timeZoneID": {
                "type": "string"
              },
              "loopCount": {
                "type": "int"
              },
              "storageDiagUrl": {
                "type": "string"
              },
              "vmName": {
                "type": "string"
              },
              "subNetRef": {
                "type": "string"
              },
              "vmSize": {
                "type": "string"
              },
              "vmSpot": {
                "type": "bool"
              },
              "vmStorageSkuType": {
                "defaultValue": "StandardSSD_LRS",
                "allowedValues": [
                  "Premium_LRS",
                  "StandardSSD_LRS",
                  "Standard_LRS"
                ],
                "type": "string"
              },
              "adminUser": {
                "type": "string"
              },
              "adminPasswd": {
                "type": "securestring"
              },
              "intLbName": {
                "type": "string"
              },
              "intLbBackEndPool": {
                "type": "string"
              },
              "intLbBrokerIP": {
                "type": "string"
              },
              "intLbWebGWIP": {
                "type": "string"
              },
              "pubLbName": {
                "type": "string"
              },
              "pubLbBackEndPool": {
                "type": "string"
              },
              "adDomainName": {
                "type": "string"
              },
              "firstDcIP": {
                "type": "string"
              },
              "dcName": {
                "type": "string"
              },
              "MainConnectionBroker": {
                "type": "string"
              },
              "WebAccessServerName": {
                "type": "string"
              },
              "WebAccessServerCount": {
                "type": "int"
              },
              "SessionHostName": {
                "type": "string"
              },
              "SessionHostCount": {
                "type": "int"
              },
              "LicenseServerName": {
                "type": "string"
              },
              "LicenseServerCount": {
                "type": "int"
              },
              "externalFqdn": {
                "type": "string"
              },
              "brokerFqdn": {
                "type": "string"
              },
              "externalDnsZone": {
                "type": "string"
              },
              "dscFunction": {
                "type": "string"
              },
              "dscLocation": {
                "type": "string"
              },
              "dscScriptName": {
                "type": "string"
              },
              "scriptName": {
                "type": "string"
              },
              "deployHA": {
                "type": "bool"
              },
              "rdsDBName": {
                "type": "string"
              },
              "azureSQLFqdn": {
                "type": "string"
              },
              "webGwName": {
                "type": "string"
              },
              "_artifactsLocationSasToken": {
                "type": "securestring"
              }
            },
            "variables": {
              "scriptPath": "[uri(parameters('dscLocation'),concat('scripts/',parameters('scriptName'),parameters('_artifactsLocationSasToken')))]",
              "intlbPool": [
                {
                  "id": "Microsoft.Network/loadBalancers/backendAddressPools/intLbName/intLbBackEndPool"
                }
              ],
              "pubIntlbPool": [
                {
                  "id": "Microsoft.Network/loadBalancers/backendAddressPools/intLbName/intLbBackEndPool"
                },
                {
                  "id": "Microsoft.Network/loadBalancers/backendAddressPools/pubLbName/pubLbBackEndPool"
                }
              ]
            },
            "resources": [
              {
                "type": "Microsoft.Network/publicIPAddresses",
                "apiVersion": "2020-07-01",
                "name": "[concat(parameters('vmName'),copyIndex(1),'pip')]",
                "location": "[resourceGroup().location]",
                "sku": {
                  "name": "Standard"
                },
                "copy": {
                  "name": "vmNamepipcopy",
                  "count": "loopCount"
                },
                "properties": {
                  "publicIPAllocationMethod": "Static",
                  "dnsSettings": {
                    "domainNameLabel": "[concat(parameters('vmName'),'pip',copyIndex(1))]"
                  }
                }
              },
              {
                "type": "Microsoft.Network/networkInterfaces",
                "apiVersion": "2020-07-01",
                "location": "[resourceGroup().location]",
                "name": "[concat(parameters('vmName'),copyIndex(1),'nic1')]",
                "copy": {
                  "name": "vmNameniccopy",
                  "count": "loopCount"
                },
                "dependsOn": [
                  "[resourceId('Microsoft.Network/publicIPAddresses',concat(parameters('vmName'),copyIndex(1),'pip'))]"
                ],
                "properties": {
                  "ipConfigurations": [
                    {
                      "name": "ipconfig",
                      "properties": {
                        "subnet": {
                          "id": "subNetRef"
                        },
                        "privateIPAllocationMethod": "[if(equals(parameters('vmName'),parameters('dcName')),if(equals(copyIndex(1),1),'static','dynamic'),'dynamic')]",
                        "privateIPAddress": "[if(equals(parameters('vmName'),parameters('dcName')),if(equals(copyIndex(1),1),parameters('firstDcIP'),json('null')),json('null'))]",
                        "publicIPAddress": {
                          "id": "[resourceId('Microsoft.Network/publicIPAddresses',concat(parameters('vmName'),copyIndex(1),'pip'))]"
                        },
                        "loadBalancerBackendAddressPools": "[if(not(empty(parameters('intLbBackEndPool'))),if(not(empty(parameters('pubLbBackEndPool'))),variables('pubIntlbPool'),variables('intlbPool')),json('null'))]"
                      }
                    }
                  ]
                }
              },
              {
                "type": "Microsoft.Compute/virtualMachines",
                "apiVersion": "2020-12-01",
                "name": "[concat(parameters('vmName'),copyIndex(1))]",
                "location": "[resourceGroup().location]",
                "copy": {
                  "name": "vmNamevmcopy",
                  "count": "loopCount"
                },
                "dependsOn": [
                  "[resourceId('Microsoft.Network/networkInterfaces',concat(parameters('vmName'),copyIndex(1),'nic1'))]"
                ],
                "properties": {
                  "licenseType": "Windows_Server",
                  "billingProfile": {
                    "maxPrice": "[if(equals(parameters('vmSpot'),bool('true')),'-1',json('null'))]"
                  },
                  "priority": "[if(equals(parameters('vmSpot'),bool('true')),'Spot',json('null'))]",
                  "evictionPolicy": "[if(equals(parameters('vmSpot'),bool('true')),'Deallocate',json('null'))]",
                  "diagnosticsProfile": {
                    "bootDiagnostics": {
                      "enabled": true,
                      "storageUri": "storageDiagUrl"
                    }
                  },
                  "networkProfile": {
                    "networkInterfaces": [
                      {
                        "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(parameters('vmName'),copyIndex(1),'nic1'))]"
                      }
                    ]
                  },
                  "osProfile": {
                    "adminUsername": "GEN-UNIQUE-5",
                    "adminPassword": "GEN-PASSWORD",
                    "computerName": "[concat(parameters('vmName'),copyIndex(1))]"
                  },
                  "hardwareProfile": {
                    "vmSize": "Standard_A2_v2"
                  },
                  "storageProfile": {
                    "osDisk": {
                      "createOption": "FromImage",
                      "managedDisk": {
                        "storageAccountType": "Standard_LRS"
                      }
                    },
                    "imageReference": {
                      "publisher": "MicrosoftWindowsServer",
                      "offer": "WindowsServer",
                      "sku": "2019-Datacenter",
                      "version": "latest"
                    }
                  }
                },
                "resources": [
                  {
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "apiVersion": "2020-12-01",
                    "name": "[concat(parameters('vmName'),copyIndex(1),'/dscext')]",
                    "location": "[resourceGroup().location]",
                    "condition": "[not(empty(parameters('dscFunction')))]",
                    "dependsOn": [
                      "[resourceId('Microsoft.Compute/virtualMachines',concat(parameters('vmName'),copyIndex(1)))]"
                    ],
                    "properties": {
                      "publisher": "Microsoft.Powershell",
                      "type": "DSC",
                      "typeHandlerVersion": "2.11",
                      "autoUpgradeMinorVersion": true,
                      "settings": {
                        "ModulesUrl": "[uri(parameters('dscLocation'),concat('dsc/',parameters('dscScriptName'),parameters('_artifactsLocationSasToken')))]",
                        "ConfigurationFunction": "dscFunction",
                        "Properties": {
                          "AdminCreds": {
                            "UserName": "GEN-UNIQUE-5",
                            "Password": "PrivateSettingsRef:AdminPassword"
                          },
                          "RDSParameters": [
                            {
                              "timeZoneID": "UTC",
                              "DomainName": "contoso.com",
                              "DNSServer": "firstDcIP",
                              "MainConnectionBroker": "MainConnectionBroker",
                              "WebAccessServer": "WebAccessServerName1",
                              "SessionHost": "SessionHostName1",
                              "LicenseServer": "LicenseServerName1",
                              "externalFqdn": "externalFqdn",
                              "externalDnsDomain": "contosocorp.com",
                              "IntBrokerLBIP": "intLbBrokerIP",
                              "IntWebGWLBIP": "intLbWebGWIP",
                              "WebGWDNS": "webGwName"
                            }
                          ]
                        }
                      },
                      "protectedSettings": {
                        "Items": {
                          "AdminPassword": "GEN-PASSWORD"
                        }
                      }
                    }
                  },
                  {
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "apiVersion": "2020-12-01",
                    "name": "[concat(parameters('vmName'),copyIndex(1),'/pwshext')]",
                    "location": "[resourceGroup().location]",
                    "condition": "[and(contains(parameters('vmName'),'cb'),parameters('deployHA'))]",
                    "dependsOn": [
                      "[resourceId('Microsoft.Compute/virtualMachines',concat(parameters('vmName'),copyIndex(1)))]",
                      "[resourceId('Microsoft.Compute/virtualMachines/extensions',concat(parameters('vmName'),copyIndex(1)),'dscext')]"
                    ],
                    "properties": {
                      "publisher": "Microsoft.Compute",
                      "type": "CustomScriptExtension",
                      "typeHandlerVersion": "1.10",
                      "autoUpgradeMinorVersion": true,
                      "settings": {
                        "fileUris": [
                          "scriptPath"
                        ]
                      },
                      "protectedSettings": {
                        "commandToExecute": "powershell -ExecutionPolicy Bypass -File ./scriptName -AdminUser GEN-UNIQUE-5 -Passwd GEN-PASSWORD -MainConnectionBroker MainConnectionBroker -BrokerFqdn brokerFqdn -WebGatewayFqdn externalFqdn -AzureSQLFQDN azureSqlFqdn -AzureSQLDBName rdsDBName -WebAccessServerName WebAccessServerName -WebAccessServerCount WebAccessServerCount -SessionHostName SessionHostName -SessionHostCount SessionHostCount -LicenseServerName LicenseServerName -LicenseServerCount LicenseServerCount"
                      }
                    }
                  }
                ]
              }
            ],
            "\uff04schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#"
          }
        }
      },
      {
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2021-04-01",
        "name": "[concat(variables('vmProperties')[copyIndex()].name,'Deployment')]",
        "dependsOn": [
          "[resourceId('Microsoft.Network/virtualNetworks',concat(parameters('projectName'),'vnet'))]",
          "[resourceId('Microsoft.Network/loadBalancers',concat(parameters('projectName'),'intlb'))]",
          "[resourceId('Microsoft.Network/loadBalancers',concat(parameters('projectName'),'publb'))]",
          "[resourceId('Microsoft.Storage/storageAccounts',variables('diagStorageName'))]",
          "[resourceId('Microsoft.Sql/servers/databases',variables('sqlServerName'),variables('rdsDBName'))]"
        ],
        "properties": {
          "mode": "Incremental",
          "expressionEvaluationOptions": {
            "scope": "inner"
          },
          "parameters": {
            "location": {
              "value": "[resourceGroup().location]"
            },
            "timeZoneID": {
              "value": "UTC"
            },
            "loopCount": {
              "value": "(vmProperties)[copyIndex()].count"
            },
            "storageDiagUrl": {
              "value": "[reference(resourceId('Microsoft.Storage/storageAccounts',variables('diagStorageName'))).primaryEndpoints.blob]"
            },
            "vmName": {
              "value": "(vmProperties)[copyIndex()].name"
            },
            "subNetRef": {
              "value": "Microsoft.Network/virtualNetworks/subnets/GEN-UNIQUE-5vnet/GEN-UNIQUE-5main"
            },
            "vmSize": {
              "value": "Standard_A2_v2"
            },
            "vmSpot": {
              "value": true
            },
            "vmStorageSkuType": {
              "value": "Standard_LRS"
            },
            "adminUser": {
              "value": "GEN-UNIQUE-5"
            },
            "adminPasswd": {
              "value": "GEN-PASSWORD"
            },
            "intLbName": {
              "value": "GEN-UNIQUE-5intlb"
            },
            "intLbBackEndPool": {
              "value": "(vmProperties)[copyIndex()].intLbBackEndPool"
            },
            "intLbBrokerIP": {
              "value": "[reference(resourceId('Microsoft.Network/loadBalancers',concat(parameters('projectName'),'intlb'))).frontendIPConfigurations[0].properties.privateIPAddress]"
            },
            "intLbWebGWIP": {
              "value": "[reference(resourceId('Microsoft.Network/loadBalancers',concat(parameters('projectName'),'intlb'))).frontendIPConfigurations[1].properties.privateIPAddress]"
            },
            "pubLbName": {
              "value": "GEN-UNIQUE-5publb"
            },
            "pubLbBackEndPool": {
              "value": "(vmProperties)[copyIndex()].pubLbBackEndPool"
            },
            "adDomainName": {
              "value": "contoso.com"
            },
            "firstDcIP": {
              "value": "10.100.0.99"
            },
            "dcName": {
              "value": "(vmProperties)[0].name"
            },
            "MainConnectionBroker": {
              "value": "[concat(variables('vmProperties')[2].name,'1')]"
            },
            "WebAccessServerName": {
              "value": "(vmProperties)[1].name"
            },
            "WebAccessServerCount": {
              "value": "(vmProperties)[1].count"
            },
            "SessionHostName": {
              "value": "(vmProperties)[3].name"
            },
            "SessionHostCount": {
              "value": "(vmProperties)[3].count"
            },
            "LicenseServerName": {
              "value": "(vmProperties)[4].name"
            },
            "LicenseServerCount": {
              "value": "(vmProperties)[4].count"
            },
            "externalFqdn": {
              "value": "[variables('externalFqdn')]"
            },
            "brokerFqdn": {
              "value": "[variables('brokerFqdn')]"
            },
            "externalDnsZone": {
              "value": "contosocorp.com"
            },
            "dscFunction": {
              "value": "(vmProperties)[copyIndex()].dscFunction"
            },
            "dscLocation": {
              "value": "[deployment().properties.templatelink.uri]"
            },
            "dscScriptName": {
              "value": "deployrdslab.zip"
            },
            "scriptName": {
              "value": "deploycertha.ps1"
            },
            "deployHA": {
              "value": false
            },
            "rdsDBName": {
              "value": "rdsdb"
            },
            "azureSqlFqdn": {
              "value": "[reference(resourceId('Microsoft.Sql/servers',variables('sqlServerName'))).fullyQualifiedDomainName]"
            },
            "webGwName": {
              "value": "remoteapps"
            },
            "_artifactsLocationSasToken": {
              "value": ""
            }
          },
          "template": {
            "contentVersion": "1.0.0.0",
            "parameters": {
              "location": {
                "type": "string"
              },
              "timeZoneID": {
                "type": "string"
              },
              "loopCount": {
                "type": "int"
              },
              "storageDiagUrl": {
                "type": "string"
              },
              "vmName": {
                "type": "string"
              },
              "subNetRef": {
                "type": "string"
              },
              "vmSize": {
                "type": "string"
              },
              "vmSpot": {
                "type": "bool"
              },
              "vmStorageSkuType": {
                "defaultValue": "StandardSSD_LRS",
                "allowedValues": [
                  "Premium_LRS",
                  "StandardSSD_LRS",
                  "Standard_LRS"
                ],
                "type": "string"
              },
              "adminUser": {
                "type": "string"
              },
              "adminPasswd": {
                "type": "securestring"
              },
              "intLbName": {
                "type": "string"
              },
              "intLbBackEndPool": {
                "type": "string"
              },
              "intLbBrokerIP": {
                "type": "string"
              },
              "intLbWebGWIP": {
                "type": "string"
              },
              "pubLbName": {
                "type": "string"
              },
              "pubLbBackEndPool": {
                "type": "string"
              },
              "adDomainName": {
                "type": "string"
              },
              "firstDcIP": {
                "type": "string"
              },
              "dcName": {
                "type": "string"
              },
              "MainConnectionBroker": {
                "type": "string"
              },
              "WebAccessServerName": {
                "type": "string"
              },
              "WebAccessServerCount": {
                "type": "int"
              },
              "SessionHostName": {
                "type": "string"
              },
              "SessionHostCount": {
                "type": "int"
              },
              "LicenseServerName": {
                "type": "string"
              },
              "LicenseServerCount": {
                "type": "int"
              },
              "externalFqdn": {
                "type": "string"
              },
              "brokerFqdn": {
                "type": "string"
              },
              "externalDnsZone": {
                "type": "string"
              },
              "dscFunction": {
                "type": "string"
              },
              "dscLocation": {
                "type": "string"
              },
              "dscScriptName": {
                "type": "string"
              },
              "scriptName": {
                "type": "string"
              },
              "deployHA": {
                "type": "bool"
              },
              "rdsDBName": {
                "type": "string"
              },
              "azureSQLFqdn": {
                "type": "string"
              },
              "webGwName": {
                "type": "string"
              },
              "_artifactsLocationSasToken": {
                "type": "securestring"
              }
            },
            "variables": {
              "scriptPath": "[uri(parameters('dscLocation'),concat('scripts/',parameters('scriptName'),parameters('_artifactsLocationSasToken')))]",
              "intlbPool": [
                {
                  "id": "Microsoft.Network/loadBalancers/backendAddressPools/intLbName/intLbBackEndPool"
                }
              ],
              "pubIntlbPool": [
                {
                  "id": "Microsoft.Network/loadBalancers/backendAddressPools/intLbName/intLbBackEndPool"
                },
                {
                  "id": "Microsoft.Network/loadBalancers/backendAddressPools/pubLbName/pubLbBackEndPool"
                }
              ]
            },
            "resources": [
              {
                "type": "Microsoft.Network/publicIPAddresses",
                "apiVersion": "2020-07-01",
                "name": "[concat(parameters('vmName'),copyIndex(1),'pip')]",
                "location": "[resourceGroup().location]",
                "sku": {
                  "name": "Standard"
                },
                "copy": {
                  "name": "vmNamepipcopy",
                  "count": "loopCount"
                },
                "properties": {
                  "publicIPAllocationMethod": "Static",
                  "dnsSettings": {
                    "domainNameLabel": "[concat(parameters('vmName'),'pip',copyIndex(1))]"
                  }
                }
              },
              {
                "type": "Microsoft.Network/networkInterfaces",
                "apiVersion": "2020-07-01",
                "location": "[resourceGroup().location]",
                "name": "[concat(parameters('vmName'),copyIndex(1),'nic1')]",
                "copy": {
                  "name": "vmNameniccopy",
                  "count": "loopCount"
                },
                "dependsOn": [
                  "[resourceId('Microsoft.Network/publicIPAddresses',concat(parameters('vmName'),copyIndex(1),'pip'))]"
                ],
                "properties": {
                  "ipConfigurations": [
                    {
                      "name": "ipconfig",
                      "properties": {
                        "subnet": {
                          "id": "subNetRef"
                        },
                        "privateIPAllocationMethod": "[if(equals(parameters('vmName'),parameters('dcName')),if(equals(copyIndex(1),1),'static','dynamic'),'dynamic')]",
                        "privateIPAddress": "[if(equals(parameters('vmName'),parameters('dcName')),if(equals(copyIndex(1),1),parameters('firstDcIP'),json('null')),json('null'))]",
                        "publicIPAddress": {
                          "id": "[resourceId('Microsoft.Network/publicIPAddresses',concat(parameters('vmName'),copyIndex(1),'pip'))]"
                        },
                        "loadBalancerBackendAddressPools": "[if(not(empty(parameters('intLbBackEndPool'))),if(not(empty(parameters('pubLbBackEndPool'))),variables('pubIntlbPool'),variables('intlbPool')),json('null'))]"
                      }
                    }
                  ]
                }
              },
              {
                "type": "Microsoft.Compute/virtualMachines",
                "apiVersion": "2020-12-01",
                "name": "[concat(parameters('vmName'),copyIndex(1))]",
                "location": "[resourceGroup().location]",
                "copy": {
                  "name": "vmNamevmcopy",
                  "count": "loopCount"
                },
                "dependsOn": [
                  "[resourceId('Microsoft.Network/networkInterfaces',concat(parameters('vmName'),copyIndex(1),'nic1'))]"
                ],
                "properties": {
                  "licenseType": "Windows_Server",
                  "billingProfile": {
                    "maxPrice": "[if(equals(parameters('vmSpot'),bool('true')),'-1',json('null'))]"
                  },
                  "priority": "[if(equals(parameters('vmSpot'),bool('true')),'Spot',json('null'))]",
                  "evictionPolicy": "[if(equals(parameters('vmSpot'),bool('true')),'Deallocate',json('null'))]",
                  "diagnosticsProfile": {
                    "bootDiagnostics": {
                      "enabled": true,
                      "storageUri": "storageDiagUrl"
                    }
                  },
                  "networkProfile": {
                    "networkInterfaces": [
                      {
                        "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(parameters('vmName'),copyIndex(1),'nic1'))]"
                      }
                    ]
                  },
                  "osProfile": {
                    "adminUsername": "GEN-UNIQUE-5",
                    "adminPassword": "GEN-PASSWORD",
                    "computerName": "[concat(parameters('vmName'),copyIndex(1))]"
                  },
                  "hardwareProfile": {
                    "vmSize": "Standard_A2_v2"
                  },
                  "storageProfile": {
                    "osDisk": {
                      "createOption": "FromImage",
                      "managedDisk": {
                        "storageAccountType": "Standard_LRS"
                      }
                    },
                    "imageReference": {
                      "publisher": "MicrosoftWindowsServer",
                      "offer": "WindowsServer",
                      "sku": "2019-Datacenter",
                      "version": "latest"
                    }
                  }
                },
                "resources": [
                  {
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "apiVersion": "2020-12-01",
                    "name": "[concat(parameters('vmName'),copyIndex(1),'/dscext')]",
                    "location": "[resourceGroup().location]",
                    "condition": "[not(empty(parameters('dscFunction')))]",
                    "dependsOn": [
                      "[resourceId('Microsoft.Compute/virtualMachines',concat(parameters('vmName'),copyIndex(1)))]"
                    ],
                    "properties": {
                      "publisher": "Microsoft.Powershell",
                      "type": "DSC",
                      "typeHandlerVersion": "2.11",
                      "autoUpgradeMinorVersion": true,
                      "settings": {
                        "ModulesUrl": "[uri(parameters('dscLocation'),concat('dsc/',parameters('dscScriptName'),parameters('_artifactsLocationSasToken')))]",
                        "ConfigurationFunction": "dscFunction",
                        "Properties": {
                          "AdminCreds": {
                            "UserName": "GEN-UNIQUE-5",
                            "Password": "PrivateSettingsRef:AdminPassword"
                          },
                          "RDSParameters": [
                            {
                              "timeZoneID": "UTC",
                              "DomainName": "contoso.com",
                              "DNSServer": "firstDcIP",
                              "MainConnectionBroker": "MainConnectionBroker",
                              "WebAccessServer": "WebAccessServerName1",
                              "SessionHost": "SessionHostName1",
                              "LicenseServer": "LicenseServerName1",
                              "externalFqdn": "externalFqdn",
                              "externalDnsDomain": "contosocorp.com",
                              "IntBrokerLBIP": "intLbBrokerIP",
                              "IntWebGWLBIP": "intLbWebGWIP",
                              "WebGWDNS": "webGwName"
                            }
                          ]
                        }
                      },
                      "protectedSettings": {
                        "Items": {
                          "AdminPassword": "GEN-PASSWORD"
                        }
                      }
                    }
                  },
                  {
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "apiVersion": "2020-12-01",
                    "name": "[concat(parameters('vmName'),copyIndex(1),'/pwshext')]",
                    "location": "[resourceGroup().location]",
                    "condition": "[and(contains(parameters('vmName'),'cb'),parameters('deployHA'))]",
                    "dependsOn": [
                      "[resourceId('Microsoft.Compute/virtualMachines',concat(parameters('vmName'),copyIndex(1)))]",
                      "[resourceId('Microsoft.Compute/virtualMachines/extensions',concat(parameters('vmName'),copyIndex(1)),'dscext')]"
                    ],
                    "properties": {
                      "publisher": "Microsoft.Compute",
                      "type": "CustomScriptExtension",
                      "typeHandlerVersion": "1.10",
                      "autoUpgradeMinorVersion": true,
                      "settings": {
                        "fileUris": [
                          "scriptPath"
                        ]
                      },
                      "protectedSettings": {
                        "commandToExecute": "powershell -ExecutionPolicy Bypass -File ./scriptName -AdminUser GEN-UNIQUE-5 -Passwd GEN-PASSWORD -MainConnectionBroker MainConnectionBroker -BrokerFqdn brokerFqdn -WebGatewayFqdn externalFqdn -AzureSQLFQDN azureSqlFqdn -AzureSQLDBName rdsDBName -WebAccessServerName WebAccessServerName -WebAccessServerCount WebAccessServerCount -SessionHostName SessionHostName -SessionHostCount SessionHostCount -LicenseServerName LicenseServerName -LicenseServerCount LicenseServerCount"
                      }
                    }
                  }
                ]
              }
            ],
            "\uff04schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#"
          }
        }
      }
    ],
    "outputs": {
      "adminUser": {
        "type": "string",
        "value": "[parameters('adminUser')]"
      },
      "WebAccessFQDN": {
        "type": "string",
        "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicLbIpName'))).dnsSettings.fqdn]"
      },
      "ExternalFQDN": {
        "type": "string",
        "value": "[variables('externalFqdn')]",
        "condition": "[parameters('deployHA')]"
      }
    },
    "\uff04schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#"
  }
}