{
  "structure": "filesystem",
  "error": null,
  "reference": "master",
  "contentType": "json",
  "source": "gitConnectorAzureQuickStart",
  "paths": [
    "/application-workloads/intel-lustre/intel-lustre-clients-on-centos/azuredeploy.json",
    "/application-workloads/intel-lustre/intel-lustre-clients-on-centos/azuredeploy.parameters.json"
  ],
  "timestamp": 1642962890000,
  "queryuser": null,
  "checksum": "99914b932bd37a50b983c5e7c90ae93b",
  "node": {
    "masterSnapshotId": "ARM_TEMPLATE_SNAPSHOT",
    "type": "arm",
    "collection": "armtemplate",
    "paths": [
      "/application-workloads/intel-lustre/intel-lustre-clients-on-centos/azuredeploy.json",
      "/application-workloads/intel-lustre/intel-lustre-clients-on-centos/azuredeploy.parameters.json"
    ],
    "snapshotId": "ARM_TEMPLATE_SNAPSHOT185",
    "status": "active",
    "validate": true,
    "resourceTypes": [
      "microsoft.network/publicipaddresses",
      "microsoft.network/networkinterfaces",
      "microsoft.compute/virtualmachines/extensions",
      "microsoft.compute/virtualmachines",
      "microsoft.storage/storageaccounts",
      "microsoft.compute/availabilitysets"
    ]
  },
  "snapshotId": "ARM_TEMPLATE_SNAPSHOT185",
  "collection": "armtemplate",
  "json": {
    "contentVersion": "1.0.0.0",
    "parameters": {
      "imageSku": {
        "type": "string",
        "defaultValue": "8.0",
        "metadata": {
          "description": "OpenLogic CentOS version to use"
        }
      },
      "adminUsername": {
        "type": "string",
        "metadata": {
          "description": "Admin username for the virtual machines"
        },
        "value": "GEN-UNIQUE"
      },
      "adminPassword": {
        "type": "securestring",
        "metadata": {
          "description": "Admin password for the VM"
        },
        "value": "GEN-PASSWORD"
      },
      "authenticationType": {
        "type": "string",
        "defaultValue": "sshPublicKey",
        "allowedValues": [
          "password",
          "sshPublicKey"
        ],
        "metadata": {
          "description": "Authentication type for the virtual machines"
        }
      },
      "sshPublicKey": {
        "type": "string",
        "metadata": {
          "description": "SSH public key that will be included on all nodes. The OpenSSH public key can be generated with tools like ssh-keygen on Linux or OS X."
        },
        "value": "GEN-SSH-PUB-KEY"
      },
      "dnsNamePrefix": {
        "type": "string",
        "metadata": {
          "description": "Globally unique DNS name prefix name must be between 3 and 50 characters long and can contain only dashes, numbers, and lowercase letters. The domain name suffix (e.g. westus.cloudapp.zure.com) will be automatically updated based on the selected location."
        },
        "value": "GEN-UNIQUE"
      },
      "clientAvailabilitySetName": {
        "type": "string",
        "defaultValue": "availset-lustre-clients",
        "metadata": {
          "description": "Lustre clients availability set name is important for grouping clients into deployments that can communicate with each other via RDMA"
        }
      },
      "vmNamePrefix": {
        "type": "string",
        "metadata": {
          "description": "Prefix for the virtual machine names"
        },
        "value": "GEN-UNIQUE"
      },
      "clientVmSize": {
        "type": "string",
        "defaultValue": "Standard_D2_v3",
        "metadata": {
          "description": "Size of the Lustre client VM"
        }
      },
      "clientCount": {
        "type": "int",
        "defaultValue": 2,
        "metadata": {
          "description": "Number of Lustre clients"
        }
      },
      "filesystemName": {
        "type": "string",
        "defaultValue": "lustre",
        "metadata": {
          "description": "Name of the Lustre filesystem exposed by the Lustre MGS node"
        }
      },
      "mgsIpAddress": {
        "type": "string",
        "defaultValue": "10.1.0.4",
        "metadata": {
          "description": "IP address of the Lustre MGS node"
        }
      },
      "storageAccountType": {
        "type": "string",
        "defaultValue": "Standard_LRS",
        "allowedValues": [
          "Standard_LRS",
          "Premium_LRS"
        ],
        "metadata": {
          "description": "Storage account type (e.g. Premium_LRS or Standard_LRS). Make sure to select Premium_LRS only when using DS-series or GS-series Virtual Machines."
        }
      },
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Default location for the resources"
        }
      },
      "existingVnetResourceGroupName": {
        "type": "string",
        "metadata": {
          "description": "Existing Virtual Network Resource Group where Lustre servers are deployed"
        },
        "value": "GET-PREREQ-resourceGroupName"
      },
      "existingVnetName": {
        "type": "string",
        "metadata": {
          "description": "Existing Virtual Network name (e.g. vnet-lustre)"
        },
        "value": "GET-PREREQ-vnetName"
      },
      "existingSubnetClientsName": {
        "type": "string",
        "metadata": {
          "description": "Lustre clients will be deployed into this subnet within the existing Virtual Network"
        },
        "value": "GET-PREREQ-subnetName"
      },
      "_artifactsLocation": {
        "type": "string",
        "defaultValue": "[deployment().properties.templateLink.uri]",
        "metadata": {
          "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
        }
      },
      "_artifactsLocationSasToken": {
        "type": "securestring",
        "metadata": {
          "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."
        },
        "defaultValue": ""
      }
    },
    "variables": {
      "storageAccountName": "[concat(uniquestring(resourceGroup().id),'storage')]",
      "osType": {
        "publisher": "openlogic",
        "offer": "CentOS",
        "sku": "8.0",
        "version": "latest"
      },
      "clientAvailabilitySetSettings": {
        "name": "availset-lustre-clients",
        "faultDomainCount": "2",
        "updateDomainCount": "3"
      },
      "scriptUrlLustreClient": "[uri(parameters('_artifactsLocation'), concat('lustre_client.sh', parameters('_artifactsLocationSasToken')))]",
      "sshKeyPath": "/home/GEN-UNIQUE/.ssh/authorized_keys",
      "linuxConfiguration": {
        "disablePasswordAuthentication": true,
        "ssh": {
          "publicKeys": [
            {
              "path": "/home/GEN-UNIQUE/.ssh/authorized_keys",
              "keyData": "GEN-SSH-PUB-KEY"
            }
          ]
        }
      }
    },
    "resources": [
      {
        "apiVersion": "2021-01-01",
        "type": "Microsoft.Storage/storageAccounts",
        "name": "[variables('storageAccountName')]",
        "location": "[resourceGroup().location]",
        "sku": {
          "name": "Standard_LRS"
        }
      },
      {
        "apiVersion": "2020-12-01",
        "type": "Microsoft.Compute/availabilitySets",
        "name": "(clientAvailabilitySetSettings).name",
        "location": "[resourceGroup().location]",
        "sku": {
          "name": "Aligned"
        },
        "properties": {
          "platformFaultDomainCount": "(clientAvailabilitySetSettings).faultDomainCount",
          "platformUpdateDomainCount": "(clientAvailabilitySetSettings).updateDomainCount"
        }
      },
      {
        "apiVersion": "2020-07-01",
        "type": "Microsoft.Network/publicIPAddresses",
        "name": "GEN-UNIQUEclient0",
        "location": "[resourceGroup().location]",
        "properties": {
          "publicIPAllocationMethod": "Dynamic",
          "idleTimeoutInMinutes": 4,
          "dnsSettings": {
            "domainNameLabel": "GEN-UNIQUE"
          }
        }
      },
      {
        "apiVersion": "2020-07-01",
        "type": "Microsoft.Network/networkInterfaces",
        "name": "GEN-UNIQUEclient0",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "Microsoft.Network/publicIPAddresses//GEN-UNIQUEclient0"
        ],
        "properties": {
          "ipConfigurations": [
            {
              "name": "ip1",
              "properties": {
                "privateIPAllocationMethod": "Dynamic",
                "publicIPAddress": {
                  "id": "Microsoft.Network/publicIPAddresses/GEN-UNIQUEclient0"
                },
                "subnet": {
                  "id": "GET-PREREQ-resourceGroupName/Microsoft.Network/virtualNetworks/subnets/GET-PREREQ-vnetName/GET-PREREQ-subnetName"
                }
              }
            }
          ]
        }
      },
      {
        "apiVersion": "2020-07-01",
        "type": "Microsoft.Network/networkInterfaces",
        "name": "[concat(parameters('vmNamePrefix'), 'client', copyIndex(1))]",
        "location": "[resourceGroup().location]",
        "copy": {
          "name": "clientNicCopy",
          "count": "[sub(parameters('clientCount'),1)]"
        },
        "properties": {
          "ipConfigurations": [
            {
              "name": "ip1",
              "properties": {
                "privateIPAllocationMethod": "Dynamic",
                "subnet": {
                  "id": "GET-PREREQ-resourceGroupName/Microsoft.Network/virtualNetworks/subnets/GET-PREREQ-vnetName/GET-PREREQ-subnetName"
                }
              }
            }
          ]
        }
      },
      {
        "apiVersion": "2020-12-01",
        "type": "Microsoft.Compute/virtualMachines",
        "name": "GEN-UNIQUEclientcopyIndex()",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "[resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
          "[resourceId('Microsoft.Compute/availabilitySets/', variables('clientAvailabilitySetSettings').name)]",
          "[resourceId('Microsoft.Network/networkInterfaces/', concat(parameters('vmNamePrefix'), 'client', copyIndex()))]"
        ],
        "copy": {
          "name": "clientVmCopy",
          "count": 2
        },
        "tags": {
          "LustreType": "client"
        },
        "properties": {
          "availabilitySet": {
            "id": "Microsoft.Compute/availabilitySets/(clientAvailabilitySetSettings).name"
          },
          "hardwareProfile": {
            "vmSize": "Standard_D2_v3"
          },
          "osProfile": {
            "computerName": "GEN-UNIQUEclientcopyIndex()",
            "adminUsername": "GEN-UNIQUE",
            "adminPassword": "GEN-PASSWORD",
            "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]"
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "openlogic",
              "offer": "CentOS",
              "sku": "8.0",
              "version": "latest"
            },
            "osDisk": {
              "name": "GEN-UNIQUEclientcopyIndex()_OSDisk",
              "caching": "ReadWrite",
              "createOption": "FromImage"
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "Microsoft.Network/networkInterfaces/GEN-UNIQUEclientcopyIndex()"
              }
            ]
          }
        }
      },
      {
        "apiVersion": "2020-12-01",
        "type": "Microsoft.Compute/virtualMachines/extensions",
        "name": "GEN-UNIQUEclientcopyIndex()/init",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "Microsoft.Compute/virtualMachines//GEN-UNIQUEclientcopyIndex()"
        ],
        "copy": {
          "name": "clientExtensionsCopy",
          "count": 2
        },
        "properties": {
          "publisher": "Microsoft.Azure.Extensions",
          "type": "CustomScript",
          "typeHandlerVersion": "2.0",
          "autoUpgradeMinorVersion": true,
          "settings": {
            "fileUris": [
              "[uri(parameters('_artifactsLocation'), concat('lustre_client.sh', parameters('_artifactsLocationSasToken')))]"
            ],
            "commandToExecute": "[concat('bash lustre_client.sh -n CLIENTCENTOS', parameters('imageSku'), ' -i ', copyIndex(), ' -d 0', ' -m ', parameters('mgsIpAddress'), ' -l ', reference(resourceId('Microsoft.Network/networkInterfaces', concat(parameters('vmNamePrefix'), 'client', copyIndex()))).ipConfigurations[0].properties.privateIPAddress, ' -f ', parameters('filesystemName'))]"
          }
        }
      }
    ],
    "outputs": {
      "client0DomainName": {
        "type": "string",
        "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',concat(parameters('vmNamePrefix'),'client0'))).dnsSettings.fqdn]"
      }
    },
    "\uff04schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#"
  }
}