{
  "structure": "filesystem",
  "error": null,
  "reference": "master",
  "contentType": "json",
  "source": "gitConnectorAzureQuickStart",
  "paths": [
    "/quickstarts/microsoft.compute/encrypt-vmss-linux-jumpbox/azuredeploy.json",
    "/quickstarts/microsoft.compute/encrypt-vmss-linux-jumpbox/azuredeploy.parameters.json"
  ],
  "timestamp": 1642962903843,
  "queryuser": null,
  "checksum": "99914b932bd37a50b983c5e7c90ae93b",
  "node": {
    "masterSnapshotId": "ARM_TEMPLATE_SNAPSHOT",
    "type": "arm",
    "collection": "armtemplate",
    "paths": [
      "/quickstarts/microsoft.compute/encrypt-vmss-linux-jumpbox/azuredeploy.json",
      "/quickstarts/microsoft.compute/encrypt-vmss-linux-jumpbox/azuredeploy.parameters.json"
    ],
    "snapshotId": "ARM_TEMPLATE_SNAPSHOT1039",
    "status": "active",
    "validate": true,
    "resourceTypes": [
      "microsoft.network/publicipaddresses",
      "microsoft.network/virtualnetworks",
      "microsoft.network/networkinterfaces",
      "microsoft.compute/virtualmachinescalesets",
      "microsoft.compute/virtualmachines",
      "microsoft.storage/storageaccounts"
    ]
  },
  "snapshotId": "ARM_TEMPLATE_SNAPSHOT1039",
  "collection": "armtemplate",
  "json": {
    "contentVersion": "1.0.0.0",
    "parameters": {
      "vmssName": {
        "type": "string",
        "metadata": {
          "description": "String used as a base for naming resources. Must be 3-61 characters in length and globally unique across Azure. A hash is prepended to this string for some resources, and resource-specific information is appended."
        },
        "maxLength": 61,
        "value": "GEN-UNIQUE"
      },
      "vmSku": {
        "type": "string",
        "defaultValue": "Standard_A4_v2",
        "metadata": {
          "description": "Size of VMs in the VM Scale Set (7GB or more RAM suggested for Linux)"
        }
      },
      "instanceCount": {
        "type": "int",
        "defaultValue": 2,
        "metadata": {
          "description": "Number of VM instances (100 or less)."
        },
        "minValue": 2,
        "maxValue": 100
      },
      "adminUsername": {
        "type": "string",
        "metadata": {
          "description": "Admin username on all VMs."
        },
        "value": "GEN-UNIQUE"
      },
      "keyVaultName": {
        "type": "string",
        "metadata": {
          "description": "Name of the KeyVault to place the volume encryption key"
        },
        "value": "GEN-KEYVAULT-NAME"
      },
      "keyVaultResourceGroup": {
        "type": "string",
        "defaultValue": "[resourceGroup().name]",
        "metadata": {
          "description": "Resource group of the KeyVault"
        },
        "value": "GEN-KEYVAULT-RESOURCEGROUP-NAME"
      },
      "keyEncryptionKeyURL": {
        "type": "string",
        "metadata": {
          "description": "URL of the KeyEncryptionKey used to encrypt the volume encryption key. The Valut is assumed to be in keyVaultResourceGroup"
        },
        "value": "GEN-KEYVAULT-ENCRYPTION-KEY-URI"
      },
      "keyEncryptionAlgorithm": {
        "type": "string",
        "defaultValue": "RSA-OAEP",
        "metadata": {
          "description": "Key encryption algorithm used to wrap with KeyEncryptionKeyURL"
        }
      },
      "volumeType": {
        "type": "string",
        "defaultValue": "Data",
        "metadata": {
          "description": "Type of the volume to perform encryption operation (Linux VMSS only supports Data)"
        }
      },
      "forceUpdateTag": {
        "type": "string",
        "defaultValue": "1.0",
        "metadata": {
          "description": "Pass in an unique value like a GUID everytime the operation needs to be force run"
        }
      },
      "authenticationType": {
        "type": "string",
        "defaultValue": "sshPublicKey",
        "allowedValues": [
          "sshPublicKey",
          "password"
        ],
        "metadata": {
          "description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."
        }
      },
      "adminPasswordOrKey": {
        "type": "securestring",
        "metadata": {
          "description": "SSH Key or password for the Virtual Machine. SSH key is recommended."
        },
        "value": "GEN-SSH-PUB-KEY"
      },
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Location for all resources."
        }
      }
    },
    "variables": {
      "customData": "I2Nsb3VkLWNvbmZpZw0KcnVuY21kOg0KIyEvYmluL2Jhc2gNCi0gc3VkbyAtaQ0KLSBhcHQtZ2V0IGluc3RhbGwgbHNzY3NpDQotIExVTjNETj0iJChsc3Njc2kgKjowOjA6MSB8IGF3ayAneyBwcmludCAkTkYgfScpIg0KLSBta2ZzLmV4dDQgJExVTjNETg0KLSBVVUlEMT0iJChibGtpZCAtcyBVVUlEIC1vIHZhbHVlICRMVU4zRE4pIg0KLSBlY2hvICJVVUlEPSRVVUlEMSAvZGF0YTEgZXh0NCBkZWZhdWx0cyxub2ZhaWwgMCAwIiA+Pi9ldGMvZnN0YWINCi0gbWtkaXIgL2RhdGExDQotIG1vdW50IC1hDQoNCmZpbmFsX21lc3NhZ2U6ICJjbG91ZC1jb25maWcgaXMgY29tcGxldGUgYWZ0ZXIgJFVQVElNRSBzZWNvbmRzIg==",
      "namingInfix": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]",
      "longNamingInfix": "[toLower(parameters('vmssName'))]",
      "jumpBoxName": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]jbox",
      "jumpBoxSAName": "[concat('jumpboxsa', uniqueString(resourceGroup().id))]",
      "jumpBoxIPConfigName": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]jboxipconfig",
      "jumpBoxNicName": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]jboxnic",
      "addressPrefix": "10.0.0.0/16",
      "subnetPrefix": "10.0.0.0/24",
      "virtualNetworkName": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]vnet",
      "subnetName": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]subnet",
      "subnetId": "Microsoft.Network/virtualNetworks/subnets//[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]vnet/[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]subnet",
      "publicIPAddressName": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]pip",
      "nicName": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]nic",
      "ipConfigName": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]ipconfig",
      "osType": {
        "publisher": "Canonical",
        "offer": "UbuntuServer",
        "sku": "16.04-DAILY-LTS",
        "version": "latest"
      },
      "imageReference": {
        "publisher": "Canonical",
        "offer": "UbuntuServer",
        "sku": "16.04-DAILY-LTS",
        "version": "latest"
      },
      "extensionName": "AzureDiskEncryptionForLinux",
      "extensionVersion": "1.1",
      "encryptionOperation": "EnableEncryption",
      "keyVaultResourceId": "GEN-KEYVAULT-RESOURCEGROUP-NAME/Microsoft.KeyVault/vaults/GEN-KEYVAULT-NAME",
      "linuxConfiguration": {
        "disablePasswordAuthentication": true,
        "ssh": {
          "publicKeys": [
            {
              "path": "/home/GEN-UNIQUE/.ssh/authorized_keys",
              "keyData": "GEN-SSH-PUB-KEY"
            }
          ]
        }
      }
    },
    "resources": [
      {
        "type": "Microsoft.Network/virtualNetworks",
        "name": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]vnet",
        "location": "[resourceGroup().location]",
        "apiVersion": "2020-08-01",
        "properties": {
          "addressSpace": {
            "addressPrefixes": [
              "10.0.0.0/16"
            ]
          },
          "subnets": [
            {
              "name": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]subnet",
              "properties": {
                "addressPrefix": "10.0.0.0/24"
              }
            }
          ]
        }
      },
      {
        "type": "Microsoft.Storage/storageAccounts",
        "name": "[variables('jumpBoxSAName')]",
        "location": "[resourceGroup().location]",
        "apiVersion": "2017-06-01",
        "sku": {
          "name": "Standard_LRS"
        },
        "kind": "Storage",
        "properties": {}
      },
      {
        "type": "Microsoft.Network/publicIPAddresses",
        "name": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]pip",
        "location": "[resourceGroup().location]",
        "apiVersion": "2017-09-01",
        "properties": {
          "publicIPAllocationMethod": "Dynamic",
          "dnsSettings": {
            "domainNameLabel": "[toLower(parameters('vmssName'))]"
          }
        }
      },
      {
        "type": "Microsoft.Network/networkInterfaces",
        "name": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]jboxnic",
        "location": "[resourceGroup().location]",
        "apiVersion": "2017-09-01",
        "dependsOn": [
          "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]pip",
          "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]vnet"
        ],
        "properties": {
          "ipConfigurations": [
            {
              "name": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]jboxipconfig",
              "properties": {
                "privateIPAllocationMethod": "Dynamic",
                "publicIPAddress": {
                  "id": "Microsoft.Network/publicIPAddresses/[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]pip"
                },
                "subnet": {
                  "id": "Microsoft.Network/virtualNetworks/subnets//[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]vnet/[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]subnet"
                }
              }
            }
          ]
        }
      },
      {
        "type": "Microsoft.Compute/virtualMachines",
        "name": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]jbox",
        "location": "[resourceGroup().location]",
        "apiVersion": "2017-03-30",
        "dependsOn": [
          "[variables('jumpBoxSAName')]",
          "[variables('jumpBoxNicName')]"
        ],
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_A4_v2"
          },
          "osProfile": {
            "computerName": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]jbox",
            "adminUsername": "GEN-UNIQUE",
            "adminPassword": "GEN-SSH-PUB-KEY",
            "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]"
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "Canonical",
              "offer": "UbuntuServer",
              "sku": "16.04-DAILY-LTS",
              "version": "latest"
            },
            "osDisk": {
              "caching": "ReadWrite",
              "createOption": "FromImage"
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "Microsoft.Network/networkInterfaces/[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]jboxnic"
              }
            ]
          },
          "diagnosticsProfile": {
            "bootDiagnostics": {
              "enabled": true,
              "storageUri": "[reference(variables('jumpBoxSAName')).primaryEndpoints.blob]"
            }
          }
        }
      },
      {
        "type": "Microsoft.Compute/virtualMachineScaleSets",
        "name": "GEN-UNIQUE",
        "location": "[resourceGroup().location]",
        "apiVersion": "2017-03-30",
        "dependsOn": [
          "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]vnet"
        ],
        "sku": {
          "name": "Standard_A4_v2",
          "tier": "Standard",
          "capacity": 2
        },
        "properties": {
          "overprovision": true,
          "upgradePolicy": {
            "mode": "Automatic"
          },
          "virtualMachineProfile": {
            "storageProfile": {
              "imageReference": {
                "publisher": "Canonical",
                "offer": "UbuntuServer",
                "sku": "16.04-DAILY-LTS",
                "version": "latest"
              },
              "osDisk": {
                "createOption": "FromImage"
              },
              "copy": [
                {
                  "name": "dataDisks",
                  "count": 4,
                  "input": {
                    "lun": "[copyIndex('dataDisks')]",
                    "diskSizeGB": 10,
                    "createOption": "Empty",
                    "caching": "None"
                  }
                }
              ]
            },
            "osProfile": {
              "computerNamePrefix": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]",
              "adminUsername": "GEN-UNIQUE",
              "adminPassword": "GEN-SSH-PUB-KEY",
              "customData": "I2Nsb3VkLWNvbmZpZw0KcnVuY21kOg0KIyEvYmluL2Jhc2gNCi0gc3VkbyAtaQ0KLSBhcHQtZ2V0IGluc3RhbGwgbHNzY3NpDQotIExVTjNETj0iJChsc3Njc2kgKjowOjA6MSB8IGF3ayAneyBwcmludCAkTkYgfScpIg0KLSBta2ZzLmV4dDQgJExVTjNETg0KLSBVVUlEMT0iJChibGtpZCAtcyBVVUlEIC1vIHZhbHVlICRMVU4zRE4pIg0KLSBlY2hvICJVVUlEPSRVVUlEMSAvZGF0YTEgZXh0NCBkZWZhdWx0cyxub2ZhaWwgMCAwIiA+Pi9ldGMvZnN0YWINCi0gbWtkaXIgL2RhdGExDQotIG1vdW50IC1hDQoNCmZpbmFsX21lc3NhZ2U6ICJjbG91ZC1jb25maWcgaXMgY29tcGxldGUgYWZ0ZXIgJFVQVElNRSBzZWNvbmRzIg==",
              "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]"
            },
            "networkProfile": {
              "networkInterfaceConfigurations": [
                {
                  "name": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]nic",
                  "properties": {
                    "primary": true,
                    "ipConfigurations": [
                      {
                        "name": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]ipconfig",
                        "properties": {
                          "subnet": {
                            "id": "Microsoft.Network/virtualNetworks/subnets//[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]vnet/[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]subnet"
                          }
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "extensionProfile": {
              "extensions": [
                {
                  "name": "AzureDiskEncryptionForLinux",
                  "properties": {
                    "publisher": "Microsoft.Azure.Security",
                    "type": "AzureDiskEncryptionForLinux",
                    "typeHandlerVersion": "1.1",
                    "autoUpgradeMinorVersion": true,
                    "forceUpdateTag": "1.0",
                    "settings": {
                      "EncryptionOperation": "EnableEncryption",
                      "KeyVaultURL": "[reference(variables('keyVaultResourceId'),'2016-10-01').vaultUri]",
                      "KeyVaultResourceId": "GEN-KEYVAULT-RESOURCEGROUP-NAME/Microsoft.KeyVault/vaults/GEN-KEYVAULT-NAME",
                      "KekVaultResourceId": "GEN-KEYVAULT-RESOURCEGROUP-NAME/Microsoft.KeyVault/vaults/GEN-KEYVAULT-NAME",
                      "KeyEncryptionKeyURL": "GEN-KEYVAULT-ENCRYPTION-KEY-URI",
                      "KeyEncryptionAlgorithm": "RSA-OAEP",
                      "VolumeType": "Data"
                    }
                  }
                }
              ]
            }
          }
        }
      }
    ],
    "\uff04schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#"
  }
}