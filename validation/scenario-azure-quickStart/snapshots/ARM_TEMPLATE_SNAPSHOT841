{
  "structure": "filesystem",
  "error": null,
  "reference": "master",
  "contentType": "json",
  "source": "gitConnectorAzureQuickStart",
  "paths": [
    "/demos/two-tier-nodejsapp-migration-to-containers-on-azure/azuredeploy.json",
    "/demos/two-tier-nodejsapp-migration-to-containers-on-azure/azuredeploy.parameters.json"
  ],
  "timestamp": 1642962902151,
  "queryuser": null,
  "checksum": "99914b932bd37a50b983c5e7c90ae93b",
  "node": {
    "masterSnapshotId": "ARM_TEMPLATE_SNAPSHOT",
    "type": "arm",
    "collection": "armtemplate",
    "paths": [
      "/demos/two-tier-nodejsapp-migration-to-containers-on-azure/azuredeploy.json",
      "/demos/two-tier-nodejsapp-migration-to-containers-on-azure/azuredeploy.parameters.json"
    ],
    "snapshotId": "ARM_TEMPLATE_SNAPSHOT841",
    "status": "active",
    "validate": true,
    "resourceTypes": [
      "microsoft.network/publicipaddresses",
      "microsoft.network/virtualnetworks",
      "microsoft.network/networkinterfaces",
      "microsoft.compute/virtualmachines",
      "microsoft.network/networksecuritygroups",
      "microsoft.storage/storageaccounts"
    ]
  },
  "snapshotId": "ARM_TEMPLATE_SNAPSHOT841",
  "collection": "armtemplate",
  "json": {
    "contentVersion": "1.0.0.0",
    "parameters": {
      "virtualMachineName": {
        "type": "string",
        "metadata": {
          "description": "Name for the Virtual Machine."
        },
        "value": "GEN-UNIQUE-10"
      },
      "adminUsername": {
        "type": "string",
        "metadata": {
          "description": "Username for the Virtual Machine."
        },
        "value": "GEN-UNIQUE"
      },
      "appGitLocation": {
        "type": "string",
        "metadata": {
          "description": "The Git Url of the app"
        },
        "defaultValue": "https://github.com/evillgenius75/gbb-todo"
      },
      "_artifactsLocation": {
        "type": "string",
        "metadata": {
          "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
        },
        "defaultValue": "[deployment().properties.templateLink.uri]"
      },
      "_artifactsLocationSasToken": {
        "type": "securestring",
        "metadata": {
          "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."
        },
        "defaultValue": ""
      },
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Location for all resources."
        }
      },
      "authenticationType": {
        "type": "string",
        "defaultValue": "sshPublicKey",
        "allowedValues": [
          "sshPublicKey",
          "password"
        ],
        "metadata": {
          "description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."
        }
      },
      "adminPasswordOrKey": {
        "type": "securestring",
        "metadata": {
          "description": "SSH Key or password for the Virtual Machine. SSH key is recommended."
        },
        "value": "GEN-SSH-PUB-KEY"
      },
      "vmSize": {
        "type": "string",
        "defaultValue": "Standard_F1",
        "metadata": {
          "description": "Default VM Size"
        }
      }
    },
    "variables": {
      "nicName": "nicCard",
      "publicIPAddressName": "publicIP",
      "publicIPAddressType": "Dynamic",
      "nsgName": "nsg",
      "virtualNetworkName": "vnet",
      "newStorageAccountName": "[concat('storage',uniqueString(resourceGroup().id))]",
      "dnsNameForPublicIP": "[concat('pip',uniqueString(resourceGroup().id))]",
      "customExtensionScriptFileName": "mongo_nodejs.sh",
      "todoAppTags": {
        "provider": "NA"
      },
      "quickstartTags": {
        "name": "todoApp"
      },
      "linuxConfiguration": {
        "disablePasswordAuthentication": true,
        "ssh": {
          "publicKeys": [
            {
              "path": "/home/GEN-UNIQUE/.ssh/authorized_keys",
              "keyData": "GEN-SSH-PUB-KEY"
            }
          ]
        }
      }
    },
    "resources": [
      {
        "type": "Microsoft.Storage/storageAccounts",
        "name": "[variables('newStorageAccountName')]",
        "apiVersion": "2021-01-01",
        "location": "[resourceGroup().location]",
        "tags": {
          "displayName": "Storage Account",
          "quickstartName": "(quickstartTags).name",
          "provider": "(todoAppTags).provider"
        },
        "kind": "Storage",
        "sku": {
          "name": "Standard_LRS"
        }
      },
      {
        "apiVersion": "2020-07-01",
        "type": "Microsoft.Network/publicIPAddresses",
        "name": "publicIP",
        "location": "[resourceGroup().location]",
        "tags": {
          "displayName": "Public IP",
          "quickstartName": "(quickstartTags).name",
          "provider": "(todoAppTags).provider"
        },
        "properties": {
          "publicIPAllocationMethod": "Dynamic",
          "dnsSettings": {
            "domainNameLabel": "[variables('dnsNameForPublicIP')]"
          }
        }
      },
      {
        "type": "Microsoft.Network/networkSecurityGroups",
        "name": "nsg",
        "apiVersion": "2020-07-01",
        "location": "[resourceGroup().location]",
        "comments": "NSG for Subnet",
        "tags": {
          "displayName": "Network Security Group",
          "quickstartName": "(quickstartTags).name",
          "provider": "(todoAppTags).provider"
        },
        "properties": {
          "securityRules": [
            {
              "name": "SSH-allow",
              "properties": {
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "22",
                "sourceAddressPrefix": "Internet",
                "destinationAddressPrefix": "10.0.0.0/16",
                "access": "Allow",
                "priority": 110,
                "direction": "Inbound"
              }
            },
            {
              "name": "Nodejs-allow",
              "properties": {
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "8080",
                "destinationAddressPrefix": "10.0.0.0/16",
                "sourceAddressPrefix": "Internet",
                "access": "Allow",
                "priority": 120,
                "direction": "Inbound"
              }
            }
          ]
        }
      },
      {
        "apiVersion": "2020-07-01",
        "type": "Microsoft.Network/virtualNetworks",
        "name": "vnet",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "Microsoft.Network/networkSecurityGroups//nsg"
        ],
        "tags": {
          "displayName": "Virtual Network",
          "quickstartName": "(quickstartTags).name",
          "provider": "(todoAppTags).provider"
        },
        "properties": {
          "addressSpace": {
            "addressPrefixes": [
              "10.0.0.0/16"
            ]
          },
          "subnets": [
            {
              "name": "subnet",
              "properties": {
                "addressPrefix": "10.0.0.0/24",
                "networkSecurityGroup": {
                  "id": "Microsoft.Network/networkSecurityGroups/nsg"
                }
              }
            }
          ]
        }
      },
      {
        "apiVersion": "2020-07-01",
        "type": "Microsoft.Network/networkInterfaces",
        "name": "nicCard",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "Microsoft.Network/publicIPAddresses//publicIP",
          "Microsoft.Network/virtualNetworks//vnet"
        ],
        "tags": {
          "displayName": "Network Interface Card",
          "quickstartName": "(quickstartTags).name",
          "provider": "(todoAppTags).provider"
        },
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipconfig1",
              "properties": {
                "privateIPAllocationMethod": "Dynamic",
                "publicIPAddress": {
                  "id": "Microsoft.Network/publicIPAddresses/publicIP"
                },
                "subnet": {
                  "id": "Microsoft.Network/virtualNetworks/subnets//vnet/subnet"
                }
              }
            }
          ]
        }
      },
      {
        "apiVersion": "2020-12-01",
        "type": "Microsoft.Compute/virtualMachines",
        "name": "GEN-UNIQUE-10",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "[resourceId('Microsoft.Storage/storageAccounts/', variables('newStorageAccountName'))]",
          "[resourceId('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
        ],
        "tags": {
          "displayName": "Virtual Machine",
          "quickstartName": "(quickstartTags).name",
          "provider": "(todoAppTags).provider"
        },
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_F1"
          },
          "osProfile": {
            "computerName": "GEN-UNIQUE-10",
            "adminUsername": "GEN-UNIQUE",
            "adminPassword": "GEN-SSH-PUB-KEY",
            "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]"
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "Canonical",
              "offer": "UbuntuServer",
              "sku": "16.04.0-LTS",
              "version": "latest"
            },
            "osDisk": {
              "name": "GEN-UNIQUE-10_OSDisk",
              "caching": "ReadWrite",
              "createOption": "FromImage"
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "Microsoft.Network/networkInterfaces/nicCard"
              }
            ]
          }
        },
        "resources": [
          {
            "name": "customExtension",
            "type": "extensions",
            "location": "[resourceGroup().location]",
            "apiVersion": "2020-12-01",
            "dependsOn": [
              "Microsoft.Compute/virtualMachines/GEN-UNIQUE-10"
            ],
            "tags": {
              "displayName": "customExtension"
            },
            "properties": {
              "publisher": "Microsoft.Azure.Extensions",
              "type": "CustomScript",
              "typeHandlerVersion": "2.0",
              "autoUpgradeMinorVersion": true,
              "settings": {
                "fileUris": [
                  "[uri(parameters('_artifactsLocation'),concat('scripts/',variables('customExtensionScriptFileName'), parameters('_artifactsLocationSasToken')))]"
                ],
                "commandToExecute": "sh mongo_nodejs.sh https://github.com/evillgenius75/gbb-todo"
              }
            }
          }
        ]
      }
    ],
    "outputs": {
      "adminUsername": {
        "type": "string",
        "value": "[parameters('adminUsername')]"
      },
      "publicIP": {
        "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))).dnsSettings.fqdn]",
        "type": "string"
      }
    },
    "\uff04schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#"
  }
}