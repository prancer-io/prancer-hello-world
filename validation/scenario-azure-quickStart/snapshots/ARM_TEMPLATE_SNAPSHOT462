{
  "structure": "filesystem",
  "error": null,
  "reference": "master",
  "contentType": "json",
  "source": "gitConnectorAzureQuickStart",
  "paths": [
    "/application-workloads/sap/sap-3-tier-marketplace-image-multi-sid-xscs-md/azuredeploy.json",
    "/application-workloads/sap/sap-3-tier-marketplace-image-multi-sid-xscs-md/azuredeploy.parameters.json"
  ],
  "timestamp": 1642962895383,
  "queryuser": null,
  "checksum": "99914b932bd37a50b983c5e7c90ae93b",
  "node": {
    "masterSnapshotId": "ARM_TEMPLATE_SNAPSHOT",
    "type": "arm",
    "collection": "armtemplate",
    "paths": [
      "/application-workloads/sap/sap-3-tier-marketplace-image-multi-sid-xscs-md/azuredeploy.json",
      "/application-workloads/sap/sap-3-tier-marketplace-image-multi-sid-xscs-md/azuredeploy.parameters.json"
    ],
    "snapshotId": "ARM_TEMPLATE_SNAPSHOT462",
    "status": "active",
    "validate": true,
    "resourceTypes": [
      "microsoft.network/publicipaddresses",
      "microsoft.network/virtualnetworks",
      "microsoft.resources/deployments",
      "microsoft.network/networkinterfaces",
      "microsoft.compute/virtualmachines",
      "microsoft.network/networksecuritygroups",
      "microsoft.compute/availabilitysets"
    ]
  },
  "snapshotId": "ARM_TEMPLATE_SNAPSHOT462",
  "collection": "armtemplate",
  "json": {
    "contentVersion": "1.0.0.0",
    "parameters": {
      "resourcePrefix": {
        "type": "string",
        "defaultValue": "MULTI",
        "maxLength": 6,
        "minLength": 3,
        "metadata": {
          "description": "The prefix that should be used to create the resource names."
        }
      },
      "stackType": {
        "type": "string",
        "allowedValues": [
          "ABAP",
          "JAVA",
          "ABAP+JAVA"
        ],
        "defaultValue": "ABAP",
        "metadata": {
          "description": "The stack type of the SAP system."
        }
      },
      "osType": {
        "type": "string",
        "allowedValues": [
          "Windows Server 2012 Datacenter",
          "Windows Server 2012 R2 Datacenter",
          "Windows Server 2016 Datacenter",
          "SLES 12",
          "SLES 12 BYOS",
          "RHEL 7",
          "Oracle Linux 7"
        ],
        "defaultValue": "Windows Server 2016 Datacenter",
        "metadata": {
          "description": "The type of the operating system you want to deploy."
        }
      },
      "sapSystemCount": {
        "type": "int",
        "minValue": 1,
        "maxValue": 10,
        "defaultValue": 2,
        "metadata": {
          "description": "The number of SAP systems of this multi SID setup."
        }
      },
      "systemAvailability": {
        "type": "string",
        "allowedValues": [
          "HA",
          "Not HA"
        ],
        "defaultValue": "Not HA",
        "metadata": {
          "description": "Determines whether this is a high available deployment or not. A HA deployment contains multiple instances of single point of failures."
        }
      },
      "adminUsername": {
        "type": "string",
        "metadata": {
          "description": "Username for the Virtual Machine."
        },
        "value": "GEN-UNIQUE"
      },
      "authenticationType": {
        "type": "string",
        "defaultValue": "password",
        "allowedValues": [
          "password",
          "sshPublicKey"
        ],
        "metadata": {
          "description": "Type of authentication to use on the Virtual Machine."
        }
      },
      "adminPasswordOrKey": {
        "type": "securestring",
        "metadata": {
          "description": "Password or ssh key for the Virtual Machine."
        },
        "value": "GEN-PASSWORD"
      },
      "subnetId": {
        "type": "string",
        "defaultValue": "",
        "metadata": {
          "description": "The id of the subnet you want to use."
        }
      },
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Location for all resources."
        }
      },
      "_artifactsLocation": {
        "type": "string",
        "metadata": {
          "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
        },
        "defaultValue": "[deployment().properties.templateLink.uri]"
      },
      "_artifactsLocationSasToken": {
        "type": "securestring",
        "metadata": {
          "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."
        },
        "defaultValue": ""
      }
    },
    "variables": {
      "images": {
        "Windows Server 2012 Datacenter": {
          "sku": "2012-Datacenter",
          "offer": "WindowsServer",
          "publisher": "MicrosoftWindowsServer",
          "version": "latest",
          "OSType": "Windows",
          "UsePlan": false
        },
        "Windows Server 2012 R2 Datacenter": {
          "sku": "2012-R2-Datacenter",
          "offer": "WindowsServer",
          "publisher": "MicrosoftWindowsServer",
          "version": "latest",
          "OSType": "Windows",
          "UsePlan": false
        },
        "Windows Server 2016 Datacenter": {
          "sku": "2016-Datacenter",
          "offer": "WindowsServer",
          "publisher": "MicrosoftWindowsServer",
          "version": "latest",
          "OSType": "Windows",
          "UsePlan": false
        },
        "SLES 12": {
          "sku": "12-SP3",
          "offer": "SLES-SAP",
          "publisher": "SUSE",
          "version": "latest",
          "OSType": "Linux",
          "UsePlan": false
        },
        "SLES 12 BYOS": {
          "sku": "12-SP3",
          "offer": "SLES-SAP-BYOS",
          "publisher": "SUSE",
          "version": "latest",
          "OSType": "Linux",
          "UsePlan": false
        },
        "RHEL 7": {
          "sku": "7.4",
          "offer": "RHEL",
          "publisher": "RedHat",
          "version": "latest",
          "OSType": "Linux",
          "UsePlan": false
        },
        "Oracle Linux 7": {
          "sku": "7.3",
          "offer": "Oracle-Linux",
          "publisher": "Oracle",
          "version": "latest",
          "OSType": "Linux",
          "UsePlan": false
        }
      },
      "internalOSType": "(images)[parameters(osType)].OSType",
      "linuxConfiguration": {
        "disablePasswordAuthentication": true,
        "ssh": {
          "publicKeys": [
            {
              "path": "/home/GEN-UNIQUE/.ssh/authorized_keys",
              "keyData": "GEN-PASSWORD"
            }
          ]
        }
      },
      "systemCountSizes": {
        "1": {
          "Size": "Small"
        },
        "2": {
          "Size": "Small"
        },
        "3": {
          "Size": "Small"
        },
        "4": {
          "Size": "Medium"
        },
        "5": {
          "Size": "Medium"
        },
        "6": {
          "Size": "Medium"
        },
        "7": {
          "Size": "Medium"
        },
        "8": {
          "Size": "Large"
        },
        "9": {
          "Size": "Large"
        },
        "10": {
          "Size": "Large"
        }
      },
      "vmSizes": {
        "Small": {
          "Not HA": {
            "xscsserversize": "Standard_D2s_v3",
            "xscsservercount": 1
          },
          "HA": {
            "xscsserversize": "Standard_D2s_v3",
            "xscsservercount": 2
          }
        },
        "Medium": {
          "Not HA": {
            "xscsserversize": "Standard_D4s_v3",
            "xscsservercount": 1
          },
          "HA": {
            "xscsserversize": "Standard_D4s_v3",
            "xscsservercount": 2
          }
        },
        "Large": {
          "Not HA": {
            "xscsserversize": "Standard_D8s_v3",
            "xscsservercount": 1
          },
          "HA": {
            "xscsserversize": "Standard_D8s_v3",
            "xscsservercount": 2
          }
        }
      },
      "xscsvmSize": "(vmSizes)[ variables(systemCountSizes)[string(parameters(sapSystemCount))].Size ] [parameters(systemAvailability)].xscsserversize",
      "xscsvmCount": "(vmSizes)[ variables(systemCountSizes)[string(parameters(sapSystemCount))].Size ] [parameters(systemAvailability)].xscsservercount",
      "sidlower": "[toLower(parameters('resourcePrefix'))]",
      "vmName": "[toLower(parameters('resourcePrefix'))]",
      "vnetName": "[toLower(parameters('resourcePrefix'))]-vnet",
      "subnetName": "Subnet",
      "subnets": {
        "true": "Microsoft.Network/virtualNetworks/subnets/[toLower(parameters('resourcePrefix'))]-vnet/Subnet",
        "false": ""
      },
      "selectedSubnetId": "(subnets)[string(equals(length(parameters(subnetId)), 0))]",
      "nestedDeploymentNameLBXSCS": "[concat(deployment().name, '-lbxscs')]",
      "publicIpNameXSCS": "[toLower(parameters('resourcePrefix'))]-pip-xscs",
      "avSetNameXSCS": "[toLower(parameters('resourcePrefix'))]-avset-xscs",
      "nsgNameXSCS": "[toLower(parameters('resourcePrefix'))]-nsg",
      "osSecurityRules": {
        "Windows": [
          {
            "name": "RDP",
            "properties": {
              "description": "Allow RDP Subnet",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          }
        ],
        "Linux": [
          {
            "name": "SSH",
            "properties": {
              "description": "Allow SSH Subnet",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          }
        ]
      },
      "selectedSecurityRules": "(osSecurityRules)[variables(internalOSType)]",
      "loadBalancerNameXSCS": "[toLower(parameters('resourcePrefix'))]-lb-xscs",
      "vmNameXSCS": "[toLower(parameters('resourcePrefix'))]-xscs",
      "nicNameXSCS": "[toLower(parameters('resourcePrefix'))]-nic-xscs"
    },
    "resources": [
      {
        "type": "Microsoft.Network/networkSecurityGroups",
        "name": "[toLower(parameters('resourcePrefix'))]-nsg",
        "apiVersion": "2020-07-01",
        "location": "[resourceGroup().location]",
        "condition": false,
        "properties": {
          "securityRules": "(osSecurityRules)[variables(internalOSType)]"
        }
      },
      {
        "type": "Microsoft.Network/virtualNetworks",
        "name": "[toLower(parameters('resourcePrefix'))]-vnet",
        "apiVersion": "2018-04-01",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "Microsoft.Network/networkSecurityGroups//[toLower(parameters('resourcePrefix'))]-nsg"
        ],
        "condition": false,
        "properties": {
          "addressSpace": {
            "addressPrefixes": [
              "10.0.0.0/16"
            ]
          },
          "subnets": [
            {
              "name": "Subnet",
              "properties": {
                "addressPrefix": "10.0.0.0/24",
                "networkSecurityGroup": {
                  "id": "Microsoft.Network/networkSecurityGroups/[toLower(parameters('resourcePrefix'))]-nsg"
                }
              }
            }
          ]
        }
      },
      {
        "type": "Microsoft.Compute/availabilitySets",
        "name": "[toLower(parameters('resourcePrefix'))]-avset-xscs",
        "apiVersion": "2017-03-30",
        "location": "[resourceGroup().location]",
        "sku": {
          "name": "Aligned"
        },
        "properties": {
          "platformFaultDomainCount": 2,
          "platformUpdateDomainCount": 20
        }
      },
      {
        "type": "Microsoft.Network/publicIPAddresses",
        "name": "[toLower(parameters('resourcePrefix'))]-pip-xscs-copyIndex()",
        "apiVersion": "2018-04-01",
        "condition": false,
        "dependsOn": [
          "Microsoft.Network/virtualNetworks//[toLower(parameters('resourcePrefix'))]-vnet"
        ],
        "location": "[resourceGroup().location]",
        "copy": {
          "name": "pipLoop",
          "count": "(vmSizes)[ variables(systemCountSizes)[string(parameters(sapSystemCount))].Size ] [parameters(systemAvailability)].xscsservercount"
        },
        "properties": {
          "publicIPAllocationMethod": "Dynamic"
        }
      },
      {
        "apiVersion": "2017-05-10",
        "name": "[variables('nestedDeploymentNameLBXSCS')]",
        "type": "Microsoft.Resources/deployments",
        "condition": "[greater(variables('xscsvmCount'), 1)]",
        "dependsOn": [
          "Microsoft.Network/virtualNetworks//[toLower(parameters('resourcePrefix'))]-vnet"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'), concat('nestedtemplates/loadbalancer.json', parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "loadBalancerName": {
              "value": "[toLower(parameters('resourcePrefix'))]-lb-xscs"
            },
            "sapSystemCount": {
              "value": 2
            },
            "stackType": {
              "value": "ABAP"
            },
            "osType": {
              "value": "(images)[parameters(osType)].OSType"
            },
            "subnetId": {
              "value": "(subnets)[string(equals(length(parameters(subnetId)), 0))]"
            },
            "location": {
              "value": "[resourceGroup().location]"
            },
            "_artifactsLocation": {
              "value": "[deployment().properties.templateLink.uri]"
            },
            "_artifactsLocationSasToken": {
              "value": ""
            }
          }
        }
      },
      {
        "type": "Microsoft.Network/networkInterfaces",
        "name": "[toLower(parameters('resourcePrefix'))]-nic-xscs-copyIndex()",
        "apiVersion": "2017-06-01",
        "copy": {
          "name": "nicXSCSLoop",
          "count": "(vmSizes)[ variables(systemCountSizes)[string(parameters(sapSystemCount))].Size ] [parameters(systemAvailability)].xscsservercount"
        },
        "dependsOn": [
          "pipLoop",
          "[resourceId('Microsoft.Network/virtualNetworks/', variables('vnetName'))]",
          "[resourceId('Microsoft.Resources/deployments/', variables('nestedDeploymentNameLBXSCS'))]"
        ],
        "location": "[resourceGroup().location]",
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipconfig1",
              "properties": {
                "privateIPAllocationMethod": "Dynamic",
                "publicIPAddress": "[if(equals(length(parameters('subnetId')), 0), json(concat('{\"id\": \"', resourceId('Microsoft.Network/publicIPAddresses', concat(variables('publicIpNameXSCS'), '-', copyIndex())) ,'\"}')), json('null'))]",
                "subnet": {
                  "id": "(subnets)[string(equals(length(parameters(subnetId)), 0))]"
                },
                "loadBalancerBackendAddressPools": "[if(greater(variables('xscsvmCount'), 1), reference(variables('nestedDeploymentNameLBXSCS'), '2021-01-01').outputs.nicBackAddressPools.value, json('null'))]"
              }
            }
          ]
        }
      },
      {
        "type": "Microsoft.Compute/virtualMachines",
        "name": "[toLower(parameters('resourcePrefix'))]-xscs-copyIndex()",
        "copy": {
          "name": "xscsVMLoop",
          "count": "(vmSizes)[ variables(systemCountSizes)[string(parameters(sapSystemCount))].Size ] [parameters(systemAvailability)].xscsservercount"
        },
        "dependsOn": [
          "nicXSCSLoop",
          "Microsoft.Compute/availabilitySets//[toLower(parameters('resourcePrefix'))]-avset-xscs"
        ],
        "apiVersion": "2017-12-01",
        "location": "[resourceGroup().location]",
        "properties": {
          "availabilitySet": {
            "id": "Microsoft.Compute/availabilitySets/[toLower(parameters('resourcePrefix'))]-avset-xscs"
          },
          "hardwareProfile": {
            "vmSize": "(vmSizes)[ variables(systemCountSizes)[string(parameters(sapSystemCount))].Size ] [parameters(systemAvailability)].xscsserversize"
          },
          "osProfile": {
            "computerName": "[toLower(parameters('resourcePrefix'))]-xscs-copyIndex()",
            "adminUsername": "GEN-UNIQUE",
            "adminPassword": "GEN-PASSWORD",
            "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]"
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "(images)[parameters(osType)].publisher",
              "offer": "(images)[parameters(osType)].offer",
              "sku": "(images)[parameters(osType)].sku",
              "version": "latest"
            },
            "osDisk": {
              "name": "[toLower(parameters('resourcePrefix'))]-xscs-copyIndex()-osdisk",
              "caching": "ReadWrite",
              "createOption": "FromImage",
              "managedDisk": {
                "storageAccountType": "Premium_LRS"
              }
            },
            "copy": [
              {
                "name": "dataDisks",
                "count": 2,
                "input": {
                  "lun": "[copyIndex('dataDisks')]",
                  "createOption": "Empty",
                  "diskSizeGB": 128
                }
              }
            ]
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "Microsoft.Network/networkInterfaces/[toLower(parameters('resourcePrefix'))]-nic-xscs-copyIndex()"
              }
            ]
          }
        }
      }
    ],
    "\uff04schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#"
  }
}