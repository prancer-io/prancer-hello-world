{
  "structure": "filesystem",
  "error": null,
  "reference": "master",
  "contentType": "json",
  "source": "gitConnectorAzureQuickStart",
  "paths": [
    "/quickstarts/microsoft.compute/vm-with-data-management-gateway/azuredeploy.json",
    "/quickstarts/microsoft.compute/vm-with-data-management-gateway/azuredeploy.parameters.json"
  ],
  "timestamp": 1642962904733,
  "queryuser": null,
  "checksum": "99914b932bd37a50b983c5e7c90ae93b",
  "node": {
    "masterSnapshotId": "ARM_TEMPLATE_SNAPSHOT",
    "type": "arm",
    "collection": "armtemplate",
    "paths": [
      "/quickstarts/microsoft.compute/vm-with-data-management-gateway/azuredeploy.json",
      "/quickstarts/microsoft.compute/vm-with-data-management-gateway/azuredeploy.parameters.json"
    ],
    "snapshotId": "ARM_TEMPLATE_SNAPSHOT1138",
    "status": "active",
    "validate": true,
    "resourceTypes": [
      "microsoft.resources/deployments",
      "microsoft.network/networkinterfaces",
      "microsoft.compute/virtualmachines",
      "microsoft.datafactory/datafactories/gateways",
      "microsoft.storage/storageaccounts"
    ]
  },
  "snapshotId": "ARM_TEMPLATE_SNAPSHOT1138",
  "collection": "armtemplate",
  "json": {
    "contentVersion": "1.0.0.0",
    "parameters": {
      "existingDataFactoryName": {
        "type": "string",
        "metadata": {
          "description": "your existing data factory name"
        },
        "value": "existingDF"
      },
      "GatewayName": {
        "type": "string",
        "metadata": {
          "description": "Gateway name must be unique in subscription"
        },
        "value": "GEN-UNIQUE"
      },
      "adminUsername": {
        "type": "string",
        "metadata": {
          "description": "User name for the virtual machine"
        },
        "value": "GEN-UNIQUE"
      },
      "adminPassword": {
        "type": "securestring",
        "metadata": {
          "description": "Password for the virtual machine"
        },
        "value": "GEN-PASSWORD"
      },
      "existingVirtualNetworkName": {
        "type": "string",
        "metadata": {
          "description": "your existing vnet name"
        },
        "value": "gwvnet"
      },
      "existingVnetLocation": {
        "type": "string",
        "metadata": {
          "description": "your virtual machine will be create in the same datacenter with VNET"
        },
        "value": "West US"
      },
      "existingVnetResourceGroupName": {
        "type": "string",
        "metadata": {
          "description": "Name of the existing VNET resource group"
        },
        "value": "gwvnetrg"
      },
      "existingSubnetInYourVnet": {
        "type": "string",
        "metadata": {
          "description": "Name of the subnet in the virtual network you want to use"
        },
        "value": "subnet"
      },
      "enableToSetDataStoreFromInternet": {
        "type": "string",
        "allowedValues": [
          "yes",
          "no"
        ],
        "defaultValue": "yes",
        "metadata": {
          "description": "If you choose yes, we will create a dns name label for your machine and open one inbound port for our service to access your machine and set data store passwords."
        }
      },
      "_artifactsLocation": {
        "type": "string",
        "metadata": {
          "description": "The base URI where artifacts required by this template are located."
        },
        "defaultValue": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/quickstarts/microsoft.compute/vm-with-data-management-gateway/"
      },
      "_artifactsLocationSasToken": {
        "type": "securestring",
        "metadata": {
          "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."
        },
        "defaultValue": ""
      },
      "enableToSetDataStorePasswordsFromInternet": {
        "value": "yes"
      }
    },
    "variables": {
      "delimiters": [
        "-",
        "_"
      ],
      "prefix": "[split(parameters('gatewayName'), variables('delimiters'))[0]]",
      "virtualMachineName": "[take(concat('vm-', variables('prefix')), 15)]",
      "nsglink": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/quickstarts/microsoft.compute/vm-with-data-management-gateway/nested/yesIncomingRemote.jsonparameters('_artifactsLocationSasToken')",
      "nsgTemplateName": "[take(concat('vm-', variables('prefix')), 15)]NSGTemplate",
      "storageAccountName": "[take(concat(toLower(variables('prefix')), uniquestring(resourceGroup().id, variables('virtualMachineName'))), 24)]",
      "nicName": "[take(concat('vm-', variables('prefix')), 15)]Nic",
      "publicIPAddressName": "[take(concat('vm-', variables('prefix')), 15)]-ip",
      "networkSecurityGroupName": "[take(concat('vm-', variables('prefix')), 15)]nsg",
      "scriptURL": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/quickstarts/microsoft.compute/vm-with-data-management-gateway/scripts/gatewayInstall.ps1parameters('_artifactsLocationSasToken')"
    },
    "resources": [
      {
        "type": "Microsoft.DataFactory/dataFactories/gateways",
        "apiVersion": "2015-10-01",
        "name": "existingDF/GEN-UNIQUE",
        "properties": {
          "description": "my gateway"
        }
      },
      {
        "type": "Microsoft.Storage/storageAccounts",
        "name": "[take(concat(toLower(variables('prefix')), uniquestring(resourceGroup().id, variables('virtualMachineName'))), 24)]",
        "apiVersion": "2016-01-01",
        "location": "West US",
        "dependsOn": [
          "Microsoft.DataFactory/dataFactories/gateways/existingDF/GEN-UNIQUE"
        ],
        "tags": {
          "vmname": "[take(concat('vm-', variables('prefix')), 15)]"
        },
        "sku": {
          "name": "Standard_LRS"
        },
        "kind": "Storage",
        "properties": {}
      },
      {
        "apiVersion": "2016-03-30",
        "type": "Microsoft.Network/networkInterfaces",
        "name": "[take(concat('vm-', variables('prefix')), 15)]Nic",
        "location": "West US",
        "tags": {
          "vmname": "[take(concat('vm-', variables('prefix')), 15)]"
        },
        "dependsOn": [
          "Microsoft.Resources/deployments//[take(concat('vm-', variables('prefix')), 15)]NSGTemplate"
        ],
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipconfig1",
              "properties": {
                "privateIPAllocationMethod": "Dynamic",
                "publicIPAddress": {
                  "id": "Microsoft.Network/publicIPAddresses/[take(concat('vm-', variables('prefix')), 15)]-ip"
                },
                "subnet": {
                  "id": "gwvnetrg/Microsoft.Network/virtualNetworks/subnets/gwvnet/subnet"
                }
              }
            }
          ],
          "networkSecurityGroup": {
            "id": "Microsoft.Network/networkSecurityGroups/[take(concat('vm-', variables('prefix')), 15)]nsg"
          }
        }
      },
      {
        "apiVersion": "2017-03-30",
        "type": "Microsoft.Compute/virtualMachines",
        "name": "[take(concat('vm-', variables('prefix')), 15)]",
        "location": "West US",
        "tags": {
          "vmname": "[take(concat('vm-', variables('prefix')), 15)]"
        },
        "dependsOn": [
          "Microsoft.Storage/storageAccounts//[take(concat(toLower(variables('prefix')), uniquestring(resourceGroup().id, variables('virtualMachineName'))), 24)]",
          "Microsoft.Network/networkInterfaces//[take(concat('vm-', variables('prefix')), 15)]Nic"
        ],
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_A3"
          },
          "osProfile": {
            "computerName": "[take(concat('vm-', variables('prefix')), 15)]",
            "adminUsername": "GEN-UNIQUE",
            "adminPassword": "GEN-PASSWORD"
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "MicrosoftWindowsServer",
              "offer": "WindowsServer",
              "sku": "2016-Datacenter",
              "version": "latest"
            },
            "osDisk": {
              "name": "[take(concat('vm-', variables('prefix')), 15)]_OSDisk",
              "caching": "ReadWrite",
              "createOption": "FromImage",
              "managedDisk": {
                "storageAccountType": "StandardSSD_LRS"
              }
            },
            "dataDisks": [
              {
                "name": "[take(concat('vm-', variables('prefix')), 15)]_DataDisk1",
                "diskSizeGB": 128,
                "lun": 0,
                "managedDisk": {
                  "storageAccountType": "StandardSSD_LRS"
                },
                "createOption": "Empty"
              }
            ]
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "Microsoft.Network/networkInterfaces/[take(concat('vm-', variables('prefix')), 15)]Nic"
              }
            ]
          },
          "diagnosticsProfile": {
            "bootDiagnostics": {
              "enabled": true,
              "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))).primaryEndpoints.blob]"
            }
          }
        },
        "resources": [
          {
            "type": "extensions",
            "name": "[take(concat('vm-', variables('prefix')), 15)]installGW",
            "apiVersion": "2015-06-15",
            "location": "West US",
            "tags": {
              "vmname": "[take(concat('vm-', variables('prefix')), 15)]"
            },
            "dependsOn": [
              "Microsoft.Compute/virtualMachines//[take(concat('vm-', variables('prefix')), 15)]"
            ],
            "properties": {
              "publisher": "Microsoft.Compute",
              "type": "CustomScriptExtension",
              "typeHandlerVersion": "1.7",
              "autoUpgradeMinorVersion": true,
              "settings": {
                "fileUris": [
                  "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/quickstarts/microsoft.compute/vm-with-data-management-gateway/scripts/gatewayInstall.ps1parameters('_artifactsLocationSasToken')"
                ]
              },
              "protectedSettings": {
                "commandToExecute": "[concat('powershell.exe -ExecutionPolicy Unrestricted -File gatewayInstall.ps1 ', listAuthKeys(resourceId('Microsoft.DataFactory/dataFactories/gateways', parameters('existingDataFactoryName'), parameters('GatewayName')), '2015-10-01').key1, ' ', reference(variables('nsgTemplateName')).outputs.hostname.Value, ' ', parameters('enableToSetDataStoreFromInternet'))]"
              }
            }
          }
        ]
      },
      {
        "apiVersion": "2015-01-01",
        "name": "[take(concat('vm-', variables('prefix')), 15)]NSGTemplate",
        "type": "Microsoft.Resources/deployments",
        "dependsOn": [
          "Microsoft.DataFactory/dataFactories/gateways/existingDF/GEN-UNIQUE"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/quickstarts/microsoft.compute/vm-with-data-management-gateway/nested/yesIncomingRemote.jsonparameters('_artifactsLocationSasToken')",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "vmName": {
              "value": "[take(concat('vm-', variables('prefix')), 15)]"
            },
            "networkSecurityGroupName": {
              "value": "[take(concat('vm-', variables('prefix')), 15)]nsg"
            },
            "publicIPAddressName": {
              "value": "[take(concat('vm-', variables('prefix')), 15)]-ip"
            },
            "existingVnetLocation": {
              "value": "West US"
            }
          }
        }
      }
    ],
    "\uff04schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#"
  }
}