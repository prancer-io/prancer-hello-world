{
  "structure": "filesystem",
  "error": null,
  "reference": "master",
  "contentType": "json",
  "source": "gitConnectorAzureQuickStart",
  "paths": [
    "/application-workloads/sap/sap-2-tier-marketplace-image/azuredeploy.json",
    "/application-workloads/sap/sap-2-tier-marketplace-image/azuredeploy.parameters.json"
  ],
  "timestamp": 1642962894777,
  "queryuser": null,
  "checksum": "99914b932bd37a50b983c5e7c90ae93b",
  "node": {
    "masterSnapshotId": "ARM_TEMPLATE_SNAPSHOT",
    "type": "arm",
    "collection": "armtemplate",
    "paths": [
      "/application-workloads/sap/sap-2-tier-marketplace-image/azuredeploy.json",
      "/application-workloads/sap/sap-2-tier-marketplace-image/azuredeploy.parameters.json"
    ],
    "snapshotId": "ARM_TEMPLATE_SNAPSHOT430",
    "status": "active",
    "validate": true,
    "resourceTypes": [
      "microsoft.resources/deployments",
      "microsoft.storage/storageaccounts",
      "microsoft.network/networkinterfaces",
      "microsoft.compute/virtualmachines/extensions"
    ]
  },
  "snapshotId": "ARM_TEMPLATE_SNAPSHOT430",
  "collection": "armtemplate",
  "json": {
    "contentVersion": "1.0.0.0",
    "parameters": {
      "sapSystemId": {
        "type": "string",
        "maxLength": 3,
        "minLength": 3,
        "metadata": {
          "description": "SAP System ID."
        },
        "value": "DEV"
      },
      "osType": {
        "type": "string",
        "allowedValues": [
          "Windows Server 2012 Datacenter",
          "Windows Server 2012 R2 Datacenter",
          "Windows Server 2016 Datacenter",
          "SLES 12",
          "RHEL 7.2"
        ],
        "defaultValue": "Windows Server 2012 R2 Datacenter",
        "metadata": {
          "description": "The type of the operating system you want to deploy."
        }
      },
      "sapSystemSize": {
        "type": "string",
        "allowedValues": [
          "Small < 2.000 SAPS",
          "Medium < 9.000 SAPS",
          "Large < 18.000 SAPS",
          "X-Large < 40.000 SAPS"
        ],
        "defaultValue": "Small < 2.000 SAPS",
        "metadata": {
          "description": "The size of the SAP System you want to deploy."
        }
      },
      "storageType": {
        "type": "string",
        "allowedValues": [
          "Premium",
          "Standard"
        ],
        "defaultValue": "Standard",
        "metadata": {
          "description": "The storage type that should be used for the virtual machine."
        }
      },
      "adminUsername": {
        "type": "string",
        "metadata": {
          "description": "Username for the Virtual Machine."
        },
        "value": "sapuser1"
      },
      "adminPassword": {
        "type": "securestring",
        "minLength": 12,
        "metadata": {
          "description": "Password for the Virtual Machine."
        },
        "value": "GEN-PASSWORD"
      },
      "newOrExistingSubnet": {
        "type": "string",
        "defaultValue": "new",
        "allowedValues": [
          "new",
          "existing"
        ],
        "metadata": {
          "description": "Determines whether a new virtual network and subnet should be created or an existing subnet should be used."
        }
      },
      "subnetId": {
        "type": "string",
        "defaultValue": "",
        "metadata": {
          "description": "The id of the subnet you want to use."
        }
      },
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "location of resources"
        }
      },
      "_artifactsLocation": {
        "type": "string",
        "metadata": {
          "description": "The base URI where artifacts required by this template are located including a trailing '/'"
        },
        "defaultValue": "[deployment().properties.templateLink.uri]"
      },
      "_artifactsLocationSasToken": {
        "type": "securestring",
        "metadata": {
          "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated. Use the defaultValue if the staging location is not secured."
        },
        "defaultValue": ""
      }
    },
    "variables": {
      "images": {
        "Windows Server 2012 Datacenter": {
          "sku": "2012-Datacenter",
          "offer": "WindowsServer",
          "publisher": "MicrosoftWindowsServer",
          "OSType": "Windows"
        },
        "Windows Server 2012 R2 Datacenter": {
          "sku": "2012-R2-Datacenter",
          "offer": "WindowsServer",
          "publisher": "MicrosoftWindowsServer",
          "OSType": "Windows"
        },
        "Windows Server 2016 Datacenter": {
          "sku": "2016-Datacenter",
          "offer": "WindowsServer",
          "publisher": "MicrosoftWindowsServer",
          "OSType": "Windows"
        },
        "SLES 12": {
          "sku": "12-SP1",
          "offer": "SLES-SAP",
          "publisher": "SUSE",
          "OSType": "Linux"
        },
        "RHEL 7.2": {
          "sku": "7.2",
          "offer": "RHEL",
          "publisher": "RedHat",
          "OSType": "Linux"
        }
      },
      "imageSku": "(images)[parameters(osType)].sku",
      "imagePublisher": "(images)[parameters(osType)].publisher",
      "imageOffer": "(images)[parameters(osType)].offer",
      "internalOSType": "(images)[parameters(osType)].OSType",
      "csExtension": {
        "Windows": {
          "Publisher": "Microsoft.Compute",
          "Name": "CustomScriptExtension",
          "Version": "1.7",
          "script": "[uri(parameters('_artifactsLocation'), concat('shared/configureSAPVM.ps1', parameters('_artifactsLocationSasToken')))]",
          "scriptCall": "powershell.exe -ExecutionPolicy Unrestricted -File shared\\configureSAPVM.ps1"
        },
        "Linux": {
          "Publisher": "Microsoft.Azure.Extensions",
          "Name": "CustomScript",
          "Version": "2.0",
          "script": "[uri(parameters('_artifactsLocation'), concat('shared/configureSAPVM.sh', parameters('_artifactsLocationSasToken')))]",
          "scriptCall": "sh shared/configureSAPVM.sh"
        }
      },
      "cseExtPublisher": "(csExtension)[variables(internalOSType)].Publisher",
      "cseExtName": "(csExtension)[variables(internalOSType)].Name",
      "cseExtVersion": "(csExtension)[variables(internalOSType)].Version",
      "storageTypes": {
        "Premium": "Premium_LRS",
        "Standard": "Standard_LRS"
      },
      "internalStorageType": "(storageTypes)[parameters(storageType)]",
      "vmSizes": {
        "Small < 2.000 SAPS": {
          "Premium": {
            "size": "Standard_D2s_v3"
          },
          "Standard": {
            "size": "Standard_D2s_v3"
          }
        },
        "Medium < 9.000 SAPS": {
          "Premium": {
            "size": "Standard_D8s_v3"
          },
          "Standard": {
            "size": "Standard_D8_v3"
          }
        },
        "Large < 18.000 SAPS": {
          "Premium": {
            "size": "Standard_D16s_v3"
          },
          "Standard": {
            "size": "Standard_D16_v3"
          }
        },
        "X-Large < 40.000 SAPS": {
          "Premium": {
            "size": "Standard_GS5"
          },
          "Standard": {
            "size": "Standard_D16_v3"
          }
        }
      },
      "vmSize": "(vmSizes)[parameters(sapSystemSize)][parameters(storageType)].size",
      "sidlower": "[toLower(parameters('sapSystemId'))]",
      "vmName": "[toLower(parameters('sapSystemId'))]-servercs",
      "storageAccountName": "[concat(variables('sidlower'), uniqueString(variables('sidlower'), resourceGroup().id))]",
      "vnetName": "[toLower(parameters('sapSystemId'))]-vnet",
      "publicIpName": "[toLower(parameters('sapSystemId'))]-pib",
      "nicName": "[toLower(parameters('sapSystemId'))]-nic",
      "nsgName": "[toLower(parameters('sapSystemId'))]-nsg-cs",
      "publicIPAddressType": "Dynamic",
      "addressPrefix": "10.0.0.0/16",
      "subnetName": "Subnet",
      "subnetPrefix": "10.0.0.0/24",
      "nestedDeploymentName": "nestedTemplate",
      "nestedDeploymentNameProf": "nestedTemplateprof",
      "nestedDeploymentNameVnet": "nestedTemplatevnet",
      "nestedDeploymentNameNSG": "nestedTemplatensg",
      "nestedDeploymentNameNIC": "nestedTemplatenic",
      "nestedDeploymentNamePIP": "nestedTemplatepip",
      "osDiskType": "image"
    },
    "resources": [
      {
        "type": "Microsoft.Storage/storageAccounts",
        "name": "[variables('storageAccountName')]",
        "apiVersion": "2021-01-01",
        "location": "[resourceGroup().location]",
        "sku": {
          "name": "(storageTypes)[parameters(storageType)]"
        }
      },
      {
        "apiVersion": "2021-04-01",
        "name": "nestedTemplatevnet",
        "type": "Microsoft.Resources/deployments",
        "properties": {
          "hardwareProfile": {
            "vmSize": "(vmSizes)[parameters(sapSystemSize)][parameters(storageType)].size"
          },
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'), concat('shared/', parameters('newOrExistingSubnet'), 'vnet.json', parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "vnetName": {
              "value": "[toLower(parameters('sapSystemId'))]-vnet"
            },
            "addressPrefix": {
              "value": "10.0.0.0/16"
            },
            "subnetName": {
              "value": "Subnet"
            },
            "subnetPrefix": {
              "value": "10.0.0.0/24"
            },
            "location": {
              "value": "[resourceGroup().location]"
            }
          }
        }
      },
      {
        "apiVersion": "2021-04-01",
        "name": "nestedTemplatenic",
        "type": "Microsoft.Resources/deployments",
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'), concat('shared/nic-config.json', parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "vnetName": {
              "value": "[toLower(parameters('sapSystemId'))]-vnet"
            },
            "subnetName": {
              "value": "Subnet"
            },
            "publicIpName": {
              "value": "[toLower(parameters('sapSystemId'))]-pib"
            },
            "nsgName": {
              "value": "[toLower(parameters('sapSystemId'))]-nsg-cs"
            },
            "newOrExistingSubnet": {
              "value": "new"
            },
            "subnetId": {
              "value": ""
            }
          }
        }
      },
      {
        "apiVersion": "2021-04-01",
        "name": "nestedTemplateprof",
        "type": "Microsoft.Resources/deployments",
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'), concat('shared/os-disk-parts.json', parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "imageSku": {
              "value": "(images)[parameters(osType)].sku"
            },
            "imagePublisher": {
              "value": "(images)[parameters(osType)].publisher"
            },
            "imageOffer": {
              "value": "(images)[parameters(osType)].offer"
            },
            "userImageVhdUri": {
              "value": ""
            },
            "userImageStorageAccount": {
              "value": ""
            },
            "osDiskVhdUri": {
              "value": ""
            },
            "osDiskType": {
              "value": "image"
            },
            "osType": {
              "value": "(images)[parameters(osType)].OSType"
            },
            "sidlower": {
              "value": "[toLower(parameters('sapSystemId'))]"
            },
            "vmName": {
              "value": "[toLower(parameters('sapSystemId'))]-servercs"
            },
            "storageAccountUri": {
              "value": "[reference(variables('storageAccountName'), '2021-01-01').primaryEndpoints['blob']]"
            }
          }
        }
      },
      {
        "apiVersion": "2021-04-01",
        "name": "nestedTemplatepip",
        "type": "Microsoft.Resources/deployments",
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'), concat('shared/', parameters('newOrExistingSubnet'), 'pip.json', parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "publicIpName": {
              "value": "[toLower(parameters('sapSystemId'))]-pib"
            },
            "publicIPAddressType": {
              "value": "Dynamic"
            },
            "location": {
              "value": "[resourceGroup().location]"
            }
          }
        }
      },
      {
        "apiVersion": "2021-04-01",
        "name": "nestedTemplatensg",
        "type": "Microsoft.Resources/deployments",
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'), concat('shared/', parameters('newOrExistingSubnet'), 'nsg.json', parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "nsgName": {
              "value": "[toLower(parameters('sapSystemId'))]-nsg-cs"
            },
            "location": {
              "value": "[resourceGroup().location]"
            },
            "osType": {
              "value": "(images)[parameters(osType)].OSType"
            }
          }
        }
      },
      {
        "type": "Microsoft.Network/networkInterfaces",
        "name": "[toLower(parameters('sapSystemId'))]-nic",
        "apiVersion": "2020-07-01",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "Microsoft.Resources/deployments//nestedTemplatevnet",
          "Microsoft.Resources/deployments//nestedTemplatenic",
          "Microsoft.Resources/deployments//nestedTemplatepip",
          "Microsoft.Resources/deployments//nestedTemplatensg"
        ],
        "properties": {
          "networkSecurityGroup": "[reference(variables('nestedDeploymentNameNIC')).outputs.selectedConfiguration.value.networkSecurityGroup]",
          "ipConfigurations": [
            {
              "name": "ipconfig1",
              "properties": {
                "privateIPAllocationMethod": "Dynamic",
                "publicIPAddress": "[reference(variables('nestedDeploymentNameNIC')).outputs.selectedConfiguration.value.publicIPAddress]",
                "subnet": "[reference(variables('nestedDeploymentNameNIC')).outputs.selectedConfiguration.value.subnet]"
              }
            }
          ]
        }
      },
      {
        "apiVersion": "2021-04-01",
        "name": "nestedTemplate",
        "type": "Microsoft.Resources/deployments",
        "dependsOn": [
          "[resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
          "[resourceId('Microsoft.Resources/deployments/', variables('nestedDeploymentNameProf'))]",
          "[resourceId('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'), concat('shared/cs-server-', variables('vmSize'), '_multiNIC_No.json', parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "imageReference": {
              "value": "[reference(variables('nestedDeploymentNameProf')).outputs.imageReference.value]"
            },
            "osDisk": {
              "value": "[reference(variables('nestedDeploymentNameProf')).outputs.osDisk.value]"
            },
            "osDiskType": {
              "value": "image"
            },
            "sidlower": {
              "value": "[toLower(parameters('sapSystemId'))]"
            },
            "vmName": {
              "value": "[toLower(parameters('sapSystemId'))]-servercs"
            },
            "vmSize": {
              "value": "(vmSizes)[parameters(sapSystemSize)][parameters(storageType)].size"
            },
            "adminUsername": {
              "value": "sapuser1"
            },
            "adminPassword": {
              "value": "GEN-PASSWORD"
            },
            "storageAccountUri": {
              "value": "[reference(variables('storageAccountName'), '2021-01-01').primaryEndpoints['blob']]"
            },
            "nicName": {
              "value": "[toLower(parameters('sapSystemId'))]-nic"
            },
            "location": {
              "value": "[resourceGroup().location]"
            }
          }
        }
      },
      {
        "type": "Microsoft.Compute/virtualMachines/extensions",
        "name": "[toLower(parameters('sapSystemId'))]-servercs/(csExtension)[variables(internalOSType)].Name",
        "apiVersion": "2015-06-15",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "Microsoft.Resources/deployments//nestedTemplate"
        ],
        "properties": {
          "publisher": "(csExtension)[variables(internalOSType)].Publisher",
          "type": "(csExtension)[variables(internalOSType)].Name",
          "typeHandlerVersion": "(csExtension)[variables(internalOSType)].Version",
          "autoUpgradeMinorVersion": true,
          "settings": {
            "fileUris": [
              "(csExtension)[variables(internalOSType)].script"
            ],
            "commandToExecute": "[concat(variables('csExtension')[variables('internalOSType')].scriptCall, ' -DBDataLUNS \"', reference(variables('nestedDeploymentName')).outputs.dbDataLUNs.value , '\" -DBLogLUNS \"', reference(variables('nestedDeploymentName')).outputs.dbLogLUNs.value, '\"')]"
          }
        }
      }
    ],
    "\uff04schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#"
  }
}