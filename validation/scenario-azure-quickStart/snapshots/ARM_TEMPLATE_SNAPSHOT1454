{
  "structure": "filesystem",
  "error": null,
  "reference": "master",
  "contentType": "json",
  "source": "gitConnectorAzureQuickStart",
  "paths": [
    "/quickstarts/microsoft.machinelearningservices/machine-learning-service-create-aks/prereqs/101-machine-learning-compute-create-akscompute-azuredeploy.json",
    "/quickstarts/microsoft.machinelearningservices/machine-learning-service-create-aks/prereqs/prereq.azuredeploy.parameters.json"
  ],
  "timestamp": 1642962907923,
  "queryuser": null,
  "checksum": "99914b932bd37a50b983c5e7c90ae93b",
  "node": {
    "masterSnapshotId": "ARM_TEMPLATE_SNAPSHOT",
    "type": "arm",
    "collection": "armtemplate",
    "paths": [
      "/quickstarts/microsoft.machinelearningservices/machine-learning-service-create-aks/prereqs/101-machine-learning-compute-create-akscompute-azuredeploy.json",
      "/quickstarts/microsoft.machinelearningservices/machine-learning-service-create-aks/prereqs/prereq.azuredeploy.parameters.json"
    ],
    "snapshotId": "ARM_TEMPLATE_SNAPSHOT1454",
    "status": "active",
    "validate": true,
    "resourceTypes": [
      "microsoft.machinelearningservices/workspaces/computes"
    ]
  },
  "snapshotId": "ARM_TEMPLATE_SNAPSHOT1454",
  "collection": "armtemplate",
  "json": {
    "contentVersion": "1.0.0.0",
    "parameters": {
      "computeName": {
        "type": "string",
        "metadata": {
          "description": "The exposed port for the compute instance."
        }
      },
      "dnsServiceIP": {
        "defaultValue": "",
        "type": "string",
        "metadata": {
          "description": "The exposed port for the compute instance."
        }
      },
      "vnetResourceGroupName": {
        "defaultValue": "",
        "type": "string",
        "metadata": {
          "description": "Name of the resource group which holds the VNET to which you want to inject your compute in."
        }
      },
      "vnetName": {
        "defaultValue": "",
        "type": "string",
        "metadata": {
          "description": "Name of the vnet which you want to inject your compute in."
        }
      },
      "subnetName": {
        "defaultValue": "",
        "type": "string",
        "metadata": {
          "description": "Name of the subnet inside the VNET which you want to inject your compute in."
        }
      },
      "location": {
        "type": "string",
        "metadata": {
          "description": "The exposed port for the compute instance."
        }
      },
      "dockerBridgeCidr": {
        "defaultValue": "",
        "type": "string",
        "metadata": {
          "description": "The exposed port for the compute instance."
        }
      },
      "serviceCidr": {
        "defaultValue": "",
        "type": "string",
        "metadata": {
          "description": "The exposed port for the compute instance."
        }
      },
      "agentVmSize": {
        "defaultValue": "Standard_D4_v3",
        "type": "string",
        "metadata": {
          "description": "The Azure VM size of the agent VM nodes. This cannot be changed once the cluster is created."
        }
      },
      "agentCount": {
        "defaultValue": 6,
        "type": "Int",
        "metadata": {
          "description": "The number of agent nodes in the Container Service.."
        }
      },
      "cert": {
        "defaultValue": "",
        "type": "string",
        "metadata": {
          "description": "The SSL cert data in PEM format encoded as base64 string"
        }
      },
      "key": {
        "defaultValue": "",
        "type": "string",
        "metadata": {
          "description": "The SSL key data in PEM format encoded as base64 string."
        }
      },
      "cname": {
        "defaultValue": "",
        "type": "string",
        "metadata": {
          "description": "The CName of the cert."
        }
      },
      "leafDomainLabel": {
        "defaultValue": "",
        "type": "string",
        "metadata": {
          "description": "The leaf domain label of public endpoint."
        }
      },
      "overwriteExistingDomain": {
        "defaultValue": false,
        "type": "Bool",
        "metadata": {
          "description": "Value indicating whether to overwrite existing domain label."
        }
      },
      "renew": {
        "defaultValue": false,
        "type": "Bool",
        "metadata": {
          "description": "Value indicating whether to renew certificate."
        }
      },
      "sslStatus": {
        "defaultValue": "Disabled",
        "allowedValues": [
          "Enabled",
          "Disabled",
          "Auto"
        ],
        "type": "string",
        "metadata": {
          "description": "SSL status. Allowed values are Enabled and Disabled."
        }
      },
      "workspaceName": {
        "type": "string",
        "metadata": {
          "description": "The exposed port for the compute instance."
        }
      }
    },
    "variables": {
      "aksNetworkingConfiguration": {
        "subnetId": "parameters('vnetResourceGroupName')/Microsoft.Network/virtualNetworks/subnets/ parameters('vnetName')/ parameters('subnetName')",
        "serviceCidr": "",
        "dnsServiceIP": "",
        "dockerBridgeCidr": ""
      },
      "sslConfiguration": {
        "status": "Disabled",
        "cert": "",
        "key": "",
        "cname": "",
        "leafDomainLabel": "",
        "overwriteExistingDomain": false,
        "renew": false
      }
    },
    "resources": [
      {
        "type": "Microsoft.MachineLearningServices/workspaces/computes",
        "apiVersion": "2021-04-01",
        "name": "workspaceName/computeName",
        "location": "location",
        "properties": {
          "computeType": "AKS",
          "properties": {
            "agentVmSize": "Standard_D4_v3",
            "agentCount": 6,
            "sslConfiguration": "[if(equals(parameters('sslStatus'),'Disabled'), json('null'), variables('sslConfiguration'))]",
            "aksNetworkingConfiguration": "[if(and(not(empty(parameters('vnetResourceGroupName'))),not(empty(parameters('vnetName'))),not(empty(parameters('subnetName'))),not(empty(parameters('serviceCidr'))),not(empty(parameters('dnsServiceIP'))),not(empty(parameters('dockerBridgeCidr')))), variables('aksNetworkingConfiguration'), json('null'))]"
          }
        }
      }
    ],
    "\uff04schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
  }
}