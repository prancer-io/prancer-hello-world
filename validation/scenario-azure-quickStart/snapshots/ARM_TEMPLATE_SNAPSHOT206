{
  "structure": "filesystem",
  "error": null,
  "reference": "master",
  "contentType": "json",
  "source": "gitConnectorAzureQuickStart",
  "paths": [
    "/application-workloads/kafka/kafka-on-ubuntu/azuredeploy.json",
    "/application-workloads/kafka/kafka-on-ubuntu/azuredeploy.parameters.json"
  ],
  "timestamp": 1642962890540,
  "queryuser": null,
  "checksum": "99914b932bd37a50b983c5e7c90ae93b",
  "node": {
    "masterSnapshotId": "ARM_TEMPLATE_SNAPSHOT",
    "type": "arm",
    "collection": "armtemplate",
    "paths": [
      "/application-workloads/kafka/kafka-on-ubuntu/azuredeploy.json",
      "/application-workloads/kafka/kafka-on-ubuntu/azuredeploy.parameters.json"
    ],
    "snapshotId": "ARM_TEMPLATE_SNAPSHOT206",
    "status": "active",
    "validate": true,
    "resourceTypes": [
      "microsoft.resources/deployments",
      "microsoft.network/networkinterfaces",
      "microsoft.compute/virtualmachines",
      "microsoft.compute/virtualmachines/extensions"
    ]
  },
  "snapshotId": "ARM_TEMPLATE_SNAPSHOT206",
  "collection": "armtemplate",
  "json": {
    "contentVersion": "1.0.0.0",
    "parameters": {
      "_artifactsLocation": {
        "type": "string",
        "defaultValue": "[deployment().properties.templateLink.uri]",
        "metadata": {
          "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
        }
      },
      "_artifactsLocationSasToken": {
        "type": "securestring",
        "metadata": {
          "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."
        },
        "defaultValue": ""
      },
      "adminUsername": {
        "type": "string",
        "metadata": {
          "description": "Administrator user name used when provisioning virtual machines"
        },
        "value": "GEN-UNIQUE"
      },
      "adminPassword": {
        "type": "securestring",
        "metadata": {
          "description": "Administrator password used when provisioning virtual machines"
        },
        "value": "GEN-PASSWORD"
      },
      "imagePublisher": {
        "type": "string",
        "defaultValue": "Canonical",
        "metadata": {
          "description": "Image Publisher"
        }
      },
      "imageOffer": {
        "type": "string",
        "defaultValue": "UbuntuServer",
        "metadata": {
          "description": "Image Offer"
        }
      },
      "imageSKU": {
        "type": "string",
        "defaultValue": "14.04.5-LTS",
        "metadata": {
          "description": "Image SKU"
        }
      },
      "storageAccountName": {
        "type": "string",
        "metadata": {
          "description": "Unique namespace for the Storage Account where the Virtual Machine's disks will be placed"
        },
        "value": "GEN-UNIQUE-8"
      },
      "virtualNetworkName": {
        "type": "string",
        "defaultValue": "myVNETkafka",
        "metadata": {
          "description": "The arbitrary name of the virtual network provisioned for the cluster"
        },
        "value": "GEN-VNET-NAME"
      },
      "addressPrefix": {
        "type": "string",
        "defaultValue": "10.0.0.0/16",
        "metadata": {
          "description": "The network address space for the virtual network"
        },
        "value": "10.0.0.0/16"
      },
      "subnetName": {
        "type": "string",
        "defaultValue": "Subnet-1",
        "metadata": {
          "description": "Subnet name for the virtual network that resources will be provisioned in to"
        },
        "value": "GEN-SUBNET1-NAME"
      },
      "subnetPrefix": {
        "type": "string",
        "defaultValue": "10.0.0.0/24",
        "metadata": {
          "description": "Address space for the virtual network subnet"
        },
        "value": "10.0.0.0/24"
      },
      "kafkaVersion": {
        "type": "string",
        "defaultValue": "0.8.2.1",
        "allowedValues": [
          "0.8.2.1",
          "0.8.2.0",
          "0.8.1.1"
        ],
        "metadata": {
          "description": "The version of the Kafka package to be deployed on the cluster (or use 'stable' to pull in the latest and greatest)"
        },
        "value": "0.8.2.1"
      },
      "kafkaZooNodeIPAddressPrefix": {
        "type": "string",
        "defaultValue": "10.0.0.4",
        "metadata": {
          "description": "The IP address prefix that will be used for constructing a static private IP address for each node in the cluster"
        },
        "value": "10.0.0.4"
      },
      "kafkaNodeIPAddressPrefix": {
        "type": "string",
        "defaultValue": "10.0.0.1",
        "metadata": {
          "description": "The IP address prefix that will be used for constructing a static private IP address for each node in the cluster"
        },
        "value": "10.0.0.1"
      },
      "jumpbox": {
        "type": "string",
        "defaultValue": "enabled",
        "allowedValues": [
          "enabled",
          "disabled"
        ],
        "metadata": {
          "description": "The flag allowing to enable or disable provisioning of the jumpbox VM that can be used to access the Kafka nodes"
        },
        "value": "enabled"
      },
      "tshirtSize": {
        "type": "string",
        "defaultValue": "S",
        "allowedValues": [
          "S",
          "M",
          "L"
        ],
        "metadata": {
          "description": "T-shirt size of the Kafka cluster"
        },
        "value": "S"
      },
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Location for all resources."
        }
      }
    },
    "variables": {
      "subnetRef": "Microsoft.Network/virtualNetworks/subnets/GEN-VNET-NAME/GEN-SUBNET1-NAME",
      "computerNamePrefix": "kafkanode",
      "sharedTemplateName": "shared-resources",
      "jumpboxTemplateName": "jumpbox-resources-",
      "tshirtSizeS": {
        "numberOfZookeeperInstances": 1,
        "numberOfKafkaInstances": 3,
        "vmSize": "Standard_A1"
      },
      "tshirtSizeM": {
        "numberOfZookeeperInstances": 3,
        "numberOfKafkaInstances": 3,
        "vmSize": "Standard_A2"
      },
      "tshirtSizeL": {
        "numberOfZookeeperInstances": 5,
        "numberOfKafkaInstances": 7,
        "vmSize": "Standard_A7"
      },
      "numberOfZookeeperInstances": "(concat(tshirtSize, parameters(tshirtSize))).numberOfZookeeperInstances",
      "numberOfKafkaInstances": "(concat(tshirtSize, parameters(tshirtSize))).numberOfKafkaInstances",
      "vmSize": "(concat(tshirtSize, parameters(tshirtSize))).vmSize"
    },
    "resources": [
      {
        "name": "shared-resources",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2020-08-01",
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'), concat(variables('sharedTemplateName'), '.json', parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "location": {
              "value": "[resourceGroup().location]"
            },
            "storageAccountName": {
              "value": "GEN-UNIQUE-8"
            },
            "virtualNetworkName": {
              "value": "GEN-VNET-NAME"
            },
            "addressPrefix": {
              "value": "10.0.0.0/16"
            },
            "subnetName": {
              "value": "GEN-SUBNET1-NAME"
            },
            "subnetPrefix": {
              "value": "10.0.0.0/24"
            }
          }
        }
      },
      {
        "name": "jumpbox-resources",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2015-01-01",
        "dependsOn": [
          "Microsoft.Resources/deployments//shared-resources"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'), concat(variables('jumpboxTemplateName'), parameters('jumpbox'), '.json', parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "location": {
              "value": "[resourceGroup().location]"
            },
            "virtualNetworkName": {
              "value": "GEN-VNET-NAME"
            },
            "subnetName": {
              "value": "GEN-SUBNET1-NAME"
            },
            "adminUsername": {
              "value": "GEN-UNIQUE"
            },
            "adminPassword": {
              "value": "GEN-PASSWORD"
            },
            "computerNamePrefix": {
              "value": "kafkanode"
            }
          }
        }
      },
      {
        "apiVersion": "2015-05-01-preview",
        "type": "Microsoft.Network/networkInterfaces",
        "name": "niczoocopyindex()",
        "location": "[resourceGroup().location]",
        "copy": {
          "name": "nicLoop",
          "count": "(concat(tshirtSize, parameters(tshirtSize))).numberOfZookeeperInstances"
        },
        "dependsOn": [
          "Microsoft.Resources/deployments//shared-resources"
        ],
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipconfig1",
              "properties": {
                "privateIPAllocationMethod": "Static",
                "privateIPAddress": "10.0.0.4copyindex()",
                "subnet": {
                  "id": "Microsoft.Network/virtualNetworks/subnets/GEN-VNET-NAME/GEN-SUBNET1-NAME"
                }
              }
            }
          ]
        }
      },
      {
        "apiVersion": "2015-05-01-preview",
        "type": "Microsoft.Network/networkInterfaces",
        "name": "niccopyindex()",
        "location": "[resourceGroup().location]",
        "copy": {
          "name": "nicLoop",
          "count": "(concat(tshirtSize, parameters(tshirtSize))).numberOfKafkaInstances"
        },
        "dependsOn": [
          "Microsoft.Resources/deployments//shared-resources"
        ],
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipconfig1",
              "properties": {
                "privateIPAllocationMethod": "Static",
                "privateIPAddress": "10.0.0.1copyindex()",
                "subnet": {
                  "id": "Microsoft.Network/virtualNetworks/subnets/GEN-VNET-NAME/GEN-SUBNET1-NAME"
                }
              }
            }
          ]
        }
      },
      {
        "apiVersion": "2017-03-30",
        "type": "Microsoft.Compute/virtualMachines",
        "name": "zookprvmcopyindex()",
        "location": "[resourceGroup().location]",
        "copy": {
          "name": "virtualZookeeperMachineLoop",
          "count": "(concat(tshirtSize, parameters(tshirtSize))).numberOfZookeeperInstances"
        },
        "dependsOn": [
          "Microsoft.Resources/deployments//shared-resources",
          "Microsoft.Network/networkInterfaces/niczoocopyindex()"
        ],
        "properties": {
          "availabilitySet": {
            "id": "Microsoft.Compute/availabilitySets/kafkaCluserAS"
          },
          "hardwareProfile": {
            "vmSize": "(concat(tshirtSize, parameters(tshirtSize))).vmSize"
          },
          "osProfile": {
            "computerName": "kafkanodecopyIndex()",
            "adminUsername": "GEN-UNIQUE",
            "adminPassword": "GEN-PASSWORD",
            "linuxConfiguration": {
              "disablePasswordAuthentication": false
            }
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "Canonical",
              "offer": "UbuntuServer",
              "sku": "14.04.5-LTS",
              "version": "latest"
            },
            "osDisk": {
              "name": "zookprvmcopyindex()_OSDisk",
              "caching": "ReadWrite",
              "createOption": "FromImage"
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "Microsoft.Network/networkInterfaces/niczoocopyindex()"
              }
            ]
          }
        }
      },
      {
        "apiVersion": "2017-03-30",
        "type": "Microsoft.Compute/virtualMachines",
        "name": "brokervmcopyindex()",
        "location": "[resourceGroup().location]",
        "copy": {
          "name": "virtualMachineLoop",
          "count": "(concat(tshirtSize, parameters(tshirtSize))).numberOfKafkaInstances"
        },
        "dependsOn": [
          "Microsoft.Resources/deployments//shared-resources",
          "Microsoft.Network/networkInterfaces/niccopyindex()",
          "virtualZookeeperMachineLoop"
        ],
        "properties": {
          "availabilitySet": {
            "id": "Microsoft.Compute/availabilitySets/kafkaCluserAS"
          },
          "hardwareProfile": {
            "vmSize": "(concat(tshirtSize, parameters(tshirtSize))).vmSize"
          },
          "osProfile": {
            "computerName": "kafkanodecopyIndex()",
            "adminUsername": "GEN-UNIQUE",
            "adminPassword": "GEN-PASSWORD",
            "linuxConfiguration": {
              "disablePasswordAuthentication": false
            }
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "Canonical",
              "offer": "UbuntuServer",
              "sku": "14.04.5-LTS",
              "version": "latest"
            },
            "osDisk": {
              "name": "brokervmcopyindex()_OSDisk",
              "caching": "ReadWrite",
              "createOption": "FromImage"
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "Microsoft.Network/networkInterfaces/niccopyindex()"
              }
            ]
          }
        }
      },
      {
        "type": "Microsoft.Compute/virtualMachines/extensions",
        "name": "zookprvmcopyindex()/installzoo",
        "apiVersion": "2015-05-01-preview",
        "location": "[resourceGroup().location]",
        "copy": {
          "name": "virtualMachineExtensionsLoop",
          "count": "(concat(tshirtSize, parameters(tshirtSize))).numberOfZookeeperInstances"
        },
        "dependsOn": [
          "Microsoft.Compute/virtualMachines/zookprvmcopyindex()",
          "Microsoft.Network/networkInterfaces/niczoocopyindex()"
        ],
        "properties": {
          "publisher": "Microsoft.Azure.Extensions",
          "type": "CustomScript",
          "typeHandlerVersion": "2.0",
          "autoUpgradeMinorVersion": true,
          "settings": {
            "fileUris": [
              "[uri(parameters('_artifactsLocation'), concat('kafka-cluster-install.sh', parameters('_artifactsLocationSasToken')))]"
            ],
            "commandToExecute": "bash kafka-cluster-install.sh -z  1  -c (concat(tshirtSize, parameters(tshirtSize))).numberOfZookeeperInstances -i 10.0.0.4"
          }
        }
      },
      {
        "type": "Microsoft.Compute/virtualMachines/extensions",
        "name": "brokervmcopyindex()/installkafka",
        "apiVersion": "2015-05-01-preview",
        "location": "[resourceGroup().location]",
        "copy": {
          "name": "virtualMachineExtensionsLoop",
          "count": "(concat(tshirtSize, parameters(tshirtSize))).numberOfKafkaInstances"
        },
        "dependsOn": [
          "Microsoft.Compute/virtualMachines/brokervmcopyindex()",
          "Microsoft.Network/networkInterfaces/niccopyindex()"
        ],
        "properties": {
          "publisher": "Microsoft.Azure.Extensions",
          "type": "CustomScript",
          "typeHandlerVersion": "2.0",
          "autoUpgradeMinorVersion": true,
          "settings": {
            "fileUris": [
              "[uri(parameters('_artifactsLocation'), concat('kafka-cluster-install.sh', parameters('_artifactsLocationSasToken')))]"
            ],
            "commandToExecute": "bash kafka-cluster-install.sh -b copyindex() -k 0.8.2.1 -c (concat(tshirtSize, parameters(tshirtSize))).numberOfZookeeperInstances -i 10.0.0.4"
          }
        }
      }
    ],
    "\uff04schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#"
  }
}