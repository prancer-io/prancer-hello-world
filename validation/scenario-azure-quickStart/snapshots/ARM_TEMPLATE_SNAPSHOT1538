{
  "structure": "filesystem",
  "error": null,
  "reference": "master",
  "contentType": "json",
  "source": "gitConnectorAzureQuickStart",
  "paths": [
    "/quickstarts/microsoft.network/front-door-premium-waf-managed/prereqs/prereq.azuredeploy.json",
    "/quickstarts/microsoft.network/front-door-premium-waf-managed/prereqs/prereq.azuredeploy.parameters.json"
  ],
  "timestamp": 1642962908922,
  "queryuser": null,
  "checksum": "99914b932bd37a50b983c5e7c90ae93b",
  "node": {
    "masterSnapshotId": "ARM_TEMPLATE_SNAPSHOT",
    "type": "arm",
    "collection": "armtemplate",
    "paths": [
      "/quickstarts/microsoft.network/front-door-premium-waf-managed/prereqs/prereq.azuredeploy.json",
      "/quickstarts/microsoft.network/front-door-premium-waf-managed/prereqs/prereq.azuredeploy.parameters.json"
    ],
    "snapshotId": "ARM_TEMPLATE_SNAPSHOT1538",
    "status": "active",
    "validate": true,
    "resourceTypes": [
      "microsoft.storage/storageaccounts",
      "microsoft.managedidentity/userassignedidentities",
      "microsoft.authorization/roleassignments",
      "microsoft.resources/deploymentscripts"
    ]
  },
  "snapshotId": "ARM_TEMPLATE_SNAPSHOT1538",
  "collection": "armtemplate",
  "json": {
    "contentVersion": "1.0.0.0",
    "metadata": {
      "_generator": {
        "name": "bicep",
        "version": "0.3.255.40792",
        "templateHash": "17992937866287760601"
      }
    },
    "parameters": {
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "The location into which the Azure Storage resources should be deployed."
        }
      },
      "accountName": {
        "type": "string",
        "defaultValue": "[format('stor{0}', uniqueString(resourceGroup().id))]",
        "metadata": {
          "description": "The name of the Azure Storage account to create. This must be globally unique."
        }
      },
      "skuName": {
        "type": "string",
        "defaultValue": "Standard_LRS",
        "allowedValues": [
          "Standard_LRS",
          "Standard_GRS",
          "Standard_ZRS",
          "Standard_GZRS",
          "Premium_LRS"
        ],
        "metadata": {
          "description": "The name of the SKU to use when creating the Azure Storage account."
        }
      },
      "indexDocument": {
        "type": "string",
        "defaultValue": "index.htm",
        "metadata": {
          "description": "The name of the page to display when a user navigates to the root of your static website."
        }
      },
      "errorDocument404Path": {
        "type": "string",
        "defaultValue": "404.htm",
        "metadata": {
          "description": "The name of the page to display when a user attempts to navigate to a page that does not exist in your static website."
        }
      }
    },
    "functions": [],
    "variables": {
      "storageAccountContributorRoleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '17d1049b-9a84-46fb-8f53-869881c3d3ab')]",
      "storageAccountStorageBlobDataContributorRoleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'ba92f5b4-2d11-453d-a403-e96b0029c9fe')]",
      "managedIdentityName": "StorageStaticWebsiteEnabler",
      "deploymentScriptName": "EnableStorageStaticWebsite"
    },
    "resources": [
      {
        "type": "Microsoft.Storage/storageAccounts",
        "apiVersion": "2019-06-01",
        "name": "[format('stor{0}', uniqueString(resourceGroup().id))]",
        "location": "[resourceGroup().location]",
        "kind": "StorageV2",
        "sku": {
          "name": "Standard_LRS"
        }
      },
      {
        "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
        "apiVersion": "2018-11-30",
        "name": "StorageStaticWebsiteEnabler",
        "location": "[resourceGroup().location]"
      },
      {
        "type": "Microsoft.Authorization/roleAssignments",
        "apiVersion": "2020-04-01-preview",
        "scope": "[format('Microsoft.Storage/storageAccounts/{0}', parameters('accountName'))]",
        "name": "[guid(resourceGroup().id, resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('managedIdentityName')), variables('storageAccountContributorRoleDefinitionId'))]",
        "properties": {
          "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '17d1049b-9a84-46fb-8f53-869881c3d3ab')]",
          "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('managedIdentityName'))).principalId]",
          "principalType": "ServicePrincipal"
        },
        "dependsOn": [
          "Microsoft.ManagedIdentity/userAssignedIdentities/StorageStaticWebsiteEnabler",
          "Microsoft.Storage/storageAccounts/[format('stor{0}', uniqueString(resourceGroup().id))]"
        ]
      },
      {
        "type": "Microsoft.Authorization/roleAssignments",
        "apiVersion": "2020-04-01-preview",
        "scope": "[format('Microsoft.Storage/storageAccounts/{0}', parameters('accountName'))]",
        "name": "[guid(resourceGroup().id, resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('managedIdentityName')), variables('storageAccountStorageBlobDataContributorRoleDefinitionId'))]",
        "properties": {
          "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'ba92f5b4-2d11-453d-a403-e96b0029c9fe')]",
          "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('managedIdentityName'))).principalId]",
          "principalType": "ServicePrincipal"
        },
        "dependsOn": [
          "Microsoft.ManagedIdentity/userAssignedIdentities/StorageStaticWebsiteEnabler",
          "Microsoft.Storage/storageAccounts/[format('stor{0}', uniqueString(resourceGroup().id))]"
        ]
      },
      {
        "type": "Microsoft.Resources/deploymentScripts",
        "apiVersion": "2020-10-01",
        "name": "EnableStorageStaticWebsite",
        "location": "[resourceGroup().location]",
        "kind": "AzurePowerShell",
        "identity": {
          "type": "UserAssigned",
          "userAssignedIdentities": {
            "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('managedIdentityName'))]": {}
          }
        },
        "properties": {
          "azPowerShellVersion": "5.4",
          "scriptContent": "    param (\r\n      [string] $ResourceGroupName,\r\n      [string] $StorageAccountName,\r\n      [string] $IndexDocument,\r\n      [string] $ErrorDocument404Path\r\n    )\r\n\r\n    $ErrorActionPreference = 'Stop'\r\n    \r\n    $storageAccount = Get-AzStorageAccount -ResourceGroupName $ResourceGroupName -AccountName $StorageAccountName\r\n    $ctx = $storageAccount.Context\r\n    Enable-AzStorageStaticWebsite -Context $ctx -IndexDocument $IndexDocument -ErrorDocument404Path $ErrorDocument404Path\r\n\r\n    New-Item $IndexDocument -Force\r\n    Set-Content $IndexDocument '<h1>Welcome</h1>'\r\n    Set-AzStorageBlobContent -Context $ctx -Container '$web' -File $IndexDocument -Blob $IndexDocument -Properties @{'ContentType' = 'text/html'}\r\n\r\n    New-Item $ErrorDocument404Path -Force\r\n    Set-Content $ErrorDocument404Path '<h1>Error: 404 Not Found</h1>'\r\n    Set-AzStorageBlobContent -Context $ctx -Container '$web' -File $ErrorDocument404Path -Blob $ErrorDocument404Path -Properties @{'ContentType' = 'text/html'}\r\n    ",
          "cleanupPreference": "OnSuccess",
          "retentionInterval": "PT4H",
          "arguments": "[format('-ResourceGroupName {0} -StorageAccountName {1} -IndexDocument {2} -ErrorDocument404Path {3}', resourceGroup().name, parameters('accountName'), parameters('indexDocument'), parameters('errorDocument404Path'))]"
        },
        "dependsOn": [
          "Microsoft.ManagedIdentity/userAssignedIdentities/StorageStaticWebsiteEnabler",
          "[extensionResourceId(resourceId('Microsoft.Storage/storageAccounts', parameters('accountName')), 'Microsoft.Authorization/roleAssignments', guid(resourceGroup().id, resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('managedIdentityName')), variables('storageAccountContributorRoleDefinitionId')))]"
        ]
      }
    ],
    "outputs": {
      "staticWebsiteHostName": {
        "type": "string",
        "value": "[replace(replace(reference(resourceId('Microsoft.Storage/storageAccounts', parameters('accountName'))).primaryEndpoints.web, 'https://', ''), '/', '')]"
      }
    },
    "\uff04schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#"
  }
}