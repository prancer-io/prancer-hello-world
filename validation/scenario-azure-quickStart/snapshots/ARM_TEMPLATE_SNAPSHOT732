{
  "structure": "filesystem",
  "error": null,
  "reference": "master",
  "contentType": "json",
  "source": "gitConnectorAzureQuickStart",
  "paths": [
    "/demos/monitor-autoscale-vmss-simplemetricbased/azuredeploy.json",
    "/demos/monitor-autoscale-vmss-simplemetricbased/azuredeploy.parameters.json"
  ],
  "timestamp": 1642962899855,
  "queryuser": null,
  "checksum": "99914b932bd37a50b983c5e7c90ae93b",
  "node": {
    "masterSnapshotId": "ARM_TEMPLATE_SNAPSHOT",
    "type": "arm",
    "collection": "armtemplate",
    "paths": [
      "/demos/monitor-autoscale-vmss-simplemetricbased/azuredeploy.json",
      "/demos/monitor-autoscale-vmss-simplemetricbased/azuredeploy.parameters.json"
    ],
    "snapshotId": "ARM_TEMPLATE_SNAPSHOT732",
    "status": "active",
    "validate": true,
    "resourceTypes": [
      "microsoft.network/publicipaddresses",
      "microsoft.network/virtualnetworks",
      "microsoft.network/loadbalancers",
      "microsoft.compute/virtualmachinescalesets",
      "microsoft.insights/autoscalesettings"
    ]
  },
  "snapshotId": "ARM_TEMPLATE_SNAPSHOT732",
  "collection": "armtemplate",
  "json": {
    "contentVersion": "1.0.0.0",
    "parameters": {
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Location for the resources."
        }
      },
      "vmSku": {
        "type": "string",
        "defaultValue": "Standard_A1",
        "metadata": {
          "description": "Size of VMs in the VM Scale Set."
        },
        "value": "Standard_A1"
      },
      "windowsOSVersion": {
        "type": "string",
        "defaultValue": "2016-Datacenter",
        "allowedValues": [
          "2012-Datacenter",
          "2012-R2-Datacenter",
          "2016-Datacenter",
          "2016-Datacenter-Server-Core",
          "2016-Datacenter-with-Containers"
        ],
        "metadata": {
          "description": "The Windows version for the VM."
        },
        "value": "2012-R2-Datacenter"
      },
      "vmssName": {
        "type": "string",
        "metadata": {
          "description": "String used as a base for naming resources. Must be 3-61 characters in length and globally unique across Azure."
        },
        "minLength": 3,
        "maxLength": 61,
        "value": "GEN-UNIQUE-32"
      },
      "instanceCount": {
        "type": "int",
        "defaultValue": 2,
        "metadata": {
          "description": "Number of VM instances (1000 or less)."
        },
        "minValue": 1,
        "maxValue": 1000
      },
      "adminUsername": {
        "type": "string",
        "metadata": {
          "description": "Admin username."
        },
        "value": "windows"
      },
      "adminPassword": {
        "type": "securestring",
        "metadata": {
          "description": "Admin password."
        },
        "value": "GEN-PASSWORD"
      },
      "minimumCapacity": {
        "type": "Int",
        "defaultValue": 2,
        "metadata": {
          "description": "The minimum capacity.  Autoscale engine will ensure the instance count is at least this value."
        },
        "minValue": 1,
        "maxValue": 1000
      },
      "maximumCapacity": {
        "type": "Int",
        "defaultValue": 10,
        "metadata": {
          "description": "The maximum capacity.  Autoscale engine will ensure the instance count is not greater than this value."
        },
        "minValue": 1,
        "maxValue": 1000
      },
      "defaultCapacity": {
        "type": "Int",
        "defaultValue": 10,
        "metadata": {
          "description": "The default capacity.  Autoscale engine will preventively set the instance count to be this value if it can not find any metric data."
        },
        "minValue": 1,
        "maxValue": 1000
      },
      "metricName": {
        "type": "string",
        "defaultValue": "Percentage CPU",
        "metadata": {
          "description": "The metric name."
        }
      },
      "metricThresholdToScaleOut": {
        "type": "Int",
        "defaultValue": 60,
        "metadata": {
          "description": "The metric upper threshold.  If the metric value is above this threshold then autoscale engine will initiate scale out action."
        }
      },
      "metricThresholdToScaleIn": {
        "type": "Int",
        "defaultValue": 20,
        "metadata": {
          "description": "The metric lower threshold.  If the metric value is below this threshold then autoscale engine will initiate scale in action."
        }
      },
      "changePercentScaleOut": {
        "type": "Int",
        "defaultValue": 20,
        "metadata": {
          "description": "The percentage to increase the instance count when autoscale engine is initiating scale out action."
        }
      },
      "changePercentScaleIn": {
        "type": "Int",
        "defaultValue": 10,
        "metadata": {
          "description": "The percentage to decrease the instance count when autoscale engine is initiating scale in action."
        }
      },
      "autoscaleEnabled": {
        "type": "Bool",
        "metadata": {
          "description": "A boolean to indicate whether the autoscale policy is enabled or disabled."
        },
        "value": true
      }
    },
    "variables": {
      "settingName": "[concat(toLower(variables('namingInfix')), '-setting')]",
      "namingInfix": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]",
      "longNamingInfix": "[toLower(parameters('vmssName'))]",
      "addressPrefix": "10.0.0.0/16",
      "subnetPrefix": "10.0.0.0/24",
      "virtualNetworkName": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]vnet",
      "publicIPAddressName": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]pip",
      "subnetName": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]subnet",
      "loadBalancerName": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]lb",
      "natPoolName": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]natpool",
      "bePoolName": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]bepool",
      "natStartPort": 50000,
      "natEndPort": 50119,
      "natBackendPort": 3389,
      "nicName": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]nic",
      "ipConfigName": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]ipconfig",
      "frontEndIPConfigID": "Microsoft.Network/loadBalancers/frontendIpConfigurations/[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]lb/loadBalancerFrontEnd",
      "osType": {
        "publisher": "MicrosoftWindowsServer",
        "offer": "WindowsServer",
        "sku": "2012-R2-Datacenter",
        "version": "latest"
      },
      "imageReference": {
        "publisher": "MicrosoftWindowsServer",
        "offer": "WindowsServer",
        "sku": "2012-R2-Datacenter",
        "version": "latest"
      }
    },
    "resources": [
      {
        "type": "Microsoft.Network/virtualNetworks",
        "name": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]vnet",
        "location": "[resourceGroup().location]",
        "apiVersion": "2020-11-01",
        "properties": {
          "addressSpace": {
            "addressPrefixes": [
              "10.0.0.0/16"
            ]
          },
          "subnets": [
            {
              "name": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]subnet",
              "properties": {
                "addressPrefix": "10.0.0.0/24"
              }
            }
          ]
        }
      },
      {
        "type": "Microsoft.Network/publicIPAddresses",
        "name": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]pip",
        "location": "[resourceGroup().location]",
        "apiVersion": "2020-11-01",
        "properties": {
          "publicIPAllocationMethod": "Dynamic",
          "dnsSettings": {
            "domainNameLabel": "[toLower(parameters('vmssName'))]"
          }
        }
      },
      {
        "type": "Microsoft.Network/loadBalancers",
        "name": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]lb",
        "location": "[resourceGroup().location]",
        "apiVersion": "2020-11-01",
        "dependsOn": [
          "Microsoft.Network/publicIPAddresses//[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]pip"
        ],
        "properties": {
          "frontendIPConfigurations": [
            {
              "name": "LoadBalancerFrontEnd",
              "properties": {
                "publicIPAddress": {
                  "id": "Microsoft.Network/publicIPAddresses/[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]pip"
                }
              }
            }
          ],
          "backendAddressPools": [
            {
              "name": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]bepool"
            }
          ],
          "inboundNatPools": [
            {
              "name": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]natpool",
              "properties": {
                "frontendIPConfiguration": {
                  "id": "Microsoft.Network/loadBalancers/frontendIpConfigurations/[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]lb/loadBalancerFrontEnd"
                },
                "protocol": "Tcp",
                "frontendPortRangeStart": 50000,
                "frontendPortRangeEnd": 50119,
                "backendPort": 3389
              }
            }
          ]
        }
      },
      {
        "type": "Microsoft.Compute/virtualMachineScaleSets",
        "name": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]",
        "location": "[resourceGroup().location]",
        "apiVersion": "2020-12-01",
        "dependsOn": [
          "Microsoft.Network/loadBalancers//[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]lb",
          "Microsoft.Network/virtualNetworks//[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]vnet"
        ],
        "sku": {
          "name": "Standard_A1",
          "tier": "Standard",
          "capacity": 2
        },
        "properties": {
          "overprovision": true,
          "upgradePolicy": {
            "mode": "Manual"
          },
          "virtualMachineProfile": {
            "storageProfile": {
              "osDisk": {
                "createOption": "FromImage",
                "caching": "ReadWrite"
              },
              "imageReference": {
                "publisher": "MicrosoftWindowsServer",
                "offer": "WindowsServer",
                "sku": "2012-R2-Datacenter",
                "version": "latest"
              }
            },
            "osProfile": {
              "computerNamePrefix": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]",
              "adminUsername": "windows",
              "adminPassword": "GEN-PASSWORD"
            },
            "networkProfile": {
              "networkInterfaceConfigurations": [
                {
                  "name": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]nic",
                  "properties": {
                    "primary": true,
                    "ipConfigurations": [
                      {
                        "name": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]ipconfig",
                        "properties": {
                          "subnet": {
                            "id": "Microsoft.Network/virtualNetworks/subnets/[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]vnet/[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]subnet"
                          },
                          "loadBalancerBackendAddressPools": [
                            {
                              "id": "Microsoft.Network/loadBalancers/backendAddressPools/[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]lb/[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]bepool"
                            }
                          ],
                          "loadBalancerInboundNatPools": [
                            {
                              "id": "Microsoft.Network/loadBalancers/inboundNatPools/[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]lb/[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]natpool"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      },
      {
        "type": "Microsoft.Insights/autoscalesettings",
        "name": "[variables('settingName')]",
        "dependsOn": [
          "Microsoft.Compute/virtualMachineScaleSets/[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]"
        ],
        "apiVersion": "2015-04-01",
        "location": "[resourceGroup().location]",
        "properties": {
          "profiles": [
            {
              "name": "DefaultAutoscaleProfile",
              "capacity": {
                "minimum": 2,
                "maximum": 10,
                "default": 10
              },
              "rules": [
                {
                  "metricTrigger": {
                    "metricName": "Percentage CPU",
                    "metricResourceUri": "Microsoft.Compute/virtualMachineScaleSets/[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]",
                    "timeGrain": "PT5M",
                    "statistic": "Average",
                    "timeWindow": "PT10M",
                    "timeAggregation": "Average",
                    "operator": "GreaterThan",
                    "threshold": 60
                  },
                  "scaleAction": {
                    "direction": "Increase",
                    "type": "PercentChangeCount",
                    "value": 20,
                    "cooldown": "PT10M"
                  }
                },
                {
                  "metricTrigger": {
                    "metricName": "Percentage CPU",
                    "metricResourceUri": "Microsoft.Compute/virtualMachineScaleSets/[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]",
                    "timeGrain": "PT5M",
                    "statistic": "Average",
                    "timeWindow": "PT10M",
                    "timeAggregation": "Average",
                    "operator": "LessThan",
                    "threshold": 20
                  },
                  "scaleAction": {
                    "direction": "Decrease",
                    "type": "PercentChangeCount",
                    "value": 10,
                    "cooldown": "PT10M"
                  }
                }
              ]
            }
          ],
          "enabled": true,
          "targetResourceUri": "Microsoft.Compute/virtualMachineScaleSets/[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]"
        }
      }
    ],
    "outputs": {},
    "\uff04schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#"
  }
}