{
  "structure": "filesystem",
  "error": null,
  "reference": "master",
  "contentType": "json",
  "source": "gitConnectorAzureQuickStart",
  "paths": [
    "/quickstarts/microsoft.compute/glassfish-on-suse/azuredeploy.json",
    "/quickstarts/microsoft.compute/glassfish-on-suse/azuredeploy.parameters.json"
  ],
  "timestamp": 1642962903877,
  "queryuser": null,
  "checksum": "99914b932bd37a50b983c5e7c90ae93b",
  "node": {
    "masterSnapshotId": "ARM_TEMPLATE_SNAPSHOT",
    "type": "arm",
    "collection": "armtemplate",
    "paths": [
      "/quickstarts/microsoft.compute/glassfish-on-suse/azuredeploy.json",
      "/quickstarts/microsoft.compute/glassfish-on-suse/azuredeploy.parameters.json"
    ],
    "snapshotId": "ARM_TEMPLATE_SNAPSHOT1042",
    "status": "active",
    "validate": true,
    "resourceTypes": [
      "microsoft.network/publicipaddresses",
      "microsoft.network/virtualnetworks",
      "microsoft.network/loadbalancers",
      "microsoft.network/networkinterfaces",
      "microsoft.resources/deployments",
      "microsoft.compute/virtualmachines",
      "microsoft.network/networksecuritygroups",
      "microsoft.network/loadbalancers/inboundnatrules",
      "microsoft.storage/storageaccounts",
      "microsoft.compute/availabilitysets"
    ]
  },
  "snapshotId": "ARM_TEMPLATE_SNAPSHOT1042",
  "collection": "armtemplate",
  "json": {
    "contentVersion": "1.0.0.0",
    "parameters": {
      "_artifactsLocation": {
        "type": "string",
        "metadata": {
          "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
        },
        "defaultValue": "[deployment().properties.templateLink.uri]"
      },
      "_artifactsLocationSasToken": {
        "type": "securestring",
        "metadata": {
          "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."
        },
        "defaultValue": ""
      },
      "glassfishVersion": {
        "type": "int",
        "allowedValues": [
          3,
          4
        ],
        "metadata": {
          "description": "Release number for the GlassFish package to be deployed."
        },
        "value": 3
      },
      "glassfishRelease": {
        "type": "string",
        "allowedValues": [
          "3.1.1",
          "3.1.2",
          "3.1.2.2",
          "3.2",
          "4.0",
          "4.1"
        ],
        "metadata": {
          "description": "Version of GlassFish to deploy"
        },
        "value": "3.1.2.2"
      },
      "numberOfInstances": {
        "type": "int",
        "minValue": 1,
        "maxValue": 10,
        "metadata": {
          "description": "Number of VMs"
        },
        "value": 2
      },
      "dnsNameforLBIP": {
        "type": "string",
        "minLength": 1,
        "metadata": {
          "description": "DNS for Load Balancer IP"
        },
        "value": "GEN-UNIQUE"
      },
      "vmSize": {
        "type": "string",
        "defaultValue": "Standard_D2s_v3",
        "metadata": {
          "description": "VM(s) size"
        }
      },
      "adminUsername": {
        "type": "string",
        "metadata": {
          "description": "Admin username"
        },
        "value": "GEN-UNIQUE"
      },
      "glassfishAdminPassword": {
        "type": "securestring",
        "metadata": {
          "description": "GlassFish admin user password"
        },
        "value": "GEN-PASSWORD"
      },
      "sshPublicKey": {
        "type": "securestring",
        "metadata": {
          "description": "SSH public key on all VMs"
        },
        "value": "GEN-SSH-PUB-KEY"
      },
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Location for all resources."
        }
      }
    },
    "variables": {
      "location": "[resourceGroup().location]",
      "namePrefix": "gf-",
      "storageAccountName": "[concat(uniqueString(resourceGroup().id), 'sa')]",
      "availabilitySetName": "gf-nodes",
      "publicIPAddressName": "gf-ip",
      "vnetName": "gf-vnet",
      "subnetName": "gf-subnet",
      "nsgName": "gf-subnet-nsg",
      "lbName": "gf-lb",
      "frontEndIPConfigID": "Microsoft.Network/loadBalancers/frontendIPConfigurations/gf-lb/LoadBalancerFrontEnd",
      "lbPoolName": "lbBackend",
      "lbProbeName": "gf-tcp-probe",
      "sshKeyPath": "/home/GEN-UNIQUE/.ssh/authorized_keys",
      "nestedTemplateFolder": "nestedtemplates/",
      "nestedTemplateFileName": "azuredeploy.json",
      "nestedTemplateUrl": "[uri(parameters('_artifactsLocation'), concat(variables('nestedTemplateFolder'), variables('nestedTemplateFileName'), parameters('_artifactsLocationSasToken')))]"
    },
    "resources": [
      {
        "apiVersion": "2021-02-01",
        "location": "[resourceGroup().location]",
        "name": "[variables('storageAccountName')]",
        "sku": {
          "name": "Standard_LRS"
        },
        "type": "Microsoft.Storage/storageAccounts"
      },
      {
        "apiVersion": "2020-12-01",
        "location": "[resourceGroup().location]",
        "name": "gf-nodes",
        "sku": {
          "name": "Aligned"
        },
        "properties": {
          "platformFaultDomainCount": 2,
          "platformUpdateDomainCount": 5
        },
        "type": "Microsoft.Compute/availabilitySets"
      },
      {
        "apiVersion": "2020-07-01",
        "location": "[resourceGroup().location]",
        "name": "gf-ip",
        "properties": {
          "publicIPAllocationMethod": "Dynamic",
          "dnsSettings": {
            "domainNameLabel": "GEN-UNIQUE"
          }
        },
        "type": "Microsoft.Network/publicIPAddresses"
      },
      {
        "apiVersion": "2020-07-01",
        "type": "Microsoft.Network/networkSecurityGroups",
        "name": "gf-subnet-nsg",
        "location": "[resourceGroup().location]",
        "properties": {
          "securityRules": [
            {
              "name": "ssh-rule",
              "properties": {
                "description": "Allow SSH",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "22",
                "sourceAddressPrefix": "Internet",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 100,
                "direction": "Inbound"
              }
            },
            {
              "name": "web-rule",
              "properties": {
                "description": "Allow WEB",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "8080",
                "sourceAddressPrefix": "Internet",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 101,
                "direction": "Inbound"
              }
            }
          ]
        }
      },
      {
        "apiVersion": "2020-07-01",
        "location": "[resourceGroup().location]",
        "name": "gf-vnet",
        "dependsOn": [
          "Microsoft.Network/networkSecurityGroups//gf-subnet-nsg"
        ],
        "properties": {
          "addressSpace": {
            "addressPrefixes": [
              "10.0.0.0/16"
            ]
          },
          "subnets": [
            {
              "name": "gf-subnet",
              "properties": {
                "addressPrefix": "10.0.0.0/24",
                "networkSecurityGroup": {
                  "id": "Microsoft.Network/networkSecurityGroups/gf-subnet-nsg"
                }
              }
            }
          ]
        },
        "type": "Microsoft.Network/virtualNetworks"
      },
      {
        "apiVersion": "2020-07-01",
        "name": "gf-lb",
        "type": "Microsoft.Network/loadBalancers",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "Microsoft.Network/publicIPAddresses//gf-ip"
        ],
        "properties": {
          "frontendIPConfigurations": [
            {
              "name": "LoadBalancerFrontEnd",
              "properties": {
                "publicIPAddress": {
                  "id": "Microsoft.Network/publicIPAddresses/gf-ip"
                }
              }
            }
          ],
          "backendAddressPools": [
            {
              "name": "lbBackend"
            }
          ],
          "loadBalancingRules": [
            {
              "name": "LBRule",
              "properties": {
                "backendAddressPool": {
                  "id": "Microsoft.Network/loadBalancers/backendAddressPools/gf-lb/lbBackend"
                },
                "backendPort": 8080,
                "enableFloatingIP": false,
                "frontendIPConfiguration": {
                  "id": "Microsoft.Network/loadBalancers/frontendIPConfigurations/gf-lb/LoadBalancerFrontEnd"
                },
                "frontendPort": 80,
                "idleTimeoutInMinutes": 5,
                "probe": {
                  "id": "Microsoft.Network/loadBalancers/probes/gf-lb/gf-tcp-probe"
                },
                "protocol": "Tcp"
              }
            }
          ],
          "probes": [
            {
              "name": "gf-tcp-probe",
              "properties": {
                "intervalInSeconds": 5,
                "numberOfProbes": 2,
                "port": 8080,
                "protocol": "Tcp"
              }
            }
          ]
        }
      },
      {
        "apiVersion": "2020-07-01",
        "type": "Microsoft.Network/loadBalancers/inboundNatRules",
        "name": "gf-lb/ssh-gf-copyIndex()",
        "location": "[resourceGroup().location]",
        "copy": {
          "name": "lbSSHNatLoop",
          "count": 2
        },
        "dependsOn": [
          "Microsoft.Network/loadBalancers//gf-lb"
        ],
        "properties": {
          "frontendIPConfiguration": {
            "id": "Microsoft.Network/loadBalancers/frontendIPConfigurations/gf-lb/LoadBalancerFrontEnd"
          },
          "protocol": "Tcp",
          "frontendPort": "[copyIndex(5000)]",
          "backendPort": 22,
          "enableFloatingIP": false
        }
      },
      {
        "apiVersion": "2020-07-01",
        "type": "Microsoft.Network/loadBalancers/inboundNatRules",
        "name": "gf-lb/admin-gf-copyIndex()",
        "location": "[resourceGroup().location]",
        "copy": {
          "name": "lbAdminNatLoop",
          "count": 2
        },
        "dependsOn": [
          "Microsoft.Network/loadBalancers//gf-lb"
        ],
        "properties": {
          "frontendIPConfiguration": {
            "id": "Microsoft.Network/loadBalancers/frontendIPConfigurations/gf-lb/LoadBalancerFrontEnd"
          },
          "protocol": "Tcp",
          "frontendPort": "[copyIndex(4800)]",
          "backendPort": 4848,
          "enableFloatingIP": false
        }
      },
      {
        "apiVersion": "2020-07-01",
        "type": "Microsoft.Network/networkInterfaces",
        "name": "gf-nic-copyindex()",
        "location": "[resourceGroup().location]",
        "copy": {
          "name": "nicLoop",
          "count": 2
        },
        "dependsOn": [
          "Microsoft.Network/virtualNetworks//gf-vnet",
          "Microsoft.Network/loadBalancers//gf-lb",
          "Microsoft.Network/loadBalancers/inboundNatRules/gf-lb/ssh-gf-copyIndex()",
          "Microsoft.Network/loadBalancers/inboundNatRules/gf-lb/admin-gf-copyIndex()"
        ],
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipconfig",
              "properties": {
                "privateIPAllocationMethod": "Dynamic",
                "subnet": {
                  "id": "Microsoft.Network/virtualNetworks/subnets/gf-vnet/gf-subnet"
                },
                "loadBalancerBackendAddressPools": [
                  {
                    "id": "Microsoft.Network/loadBalancers/backendAddressPools/gf-lb/lbBackend"
                  }
                ],
                "loadBalancerInboundNatRules": [
                  {
                    "id": "Microsoft.Network/loadBalancers/inboundNatRules/gf-lb/ssh-gf-copyIndex()"
                  },
                  {
                    "id": "Microsoft.Network/loadBalancers/inboundNatRules/gf-lb/admin-gf-copyIndex()"
                  }
                ]
              }
            }
          ]
        }
      },
      {
        "apiVersion": "2020-12-01",
        "type": "Microsoft.Compute/virtualMachines",
        "name": "gf-vm-copyindex()",
        "copy": {
          "name": "virtualMachineLoop",
          "count": 2
        },
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "[resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
          "[resourceId('Microsoft.Network/networkInterfaces/', concat(variables('namePrefix'),'nic-', copyindex()))]",
          "[resourceId('Microsoft.Compute/availabilitySets/', variables('availabilitySetName'))]"
        ],
        "properties": {
          "availabilitySet": {
            "id": "Microsoft.Compute/availabilitySets/gf-nodes"
          },
          "hardwareProfile": {
            "vmSize": "Standard_D2s_v3"
          },
          "osProfile": {
            "computerName": "gf-copyIndex()",
            "adminUsername": "GEN-UNIQUE",
            "linuxConfiguration": {
              "disablePasswordAuthentication": true,
              "ssh": {
                "publicKeys": [
                  {
                    "path": "/home/GEN-UNIQUE/.ssh/authorized_keys",
                    "keyData": "GEN-SSH-PUB-KEY"
                  }
                ]
              }
            }
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "SUSE",
              "offer": "openSUSE-Leap",
              "sku": "15-2",
              "version": "latest"
            },
            "osDisk": {
              "name": "gf-vm-copyindex()_OSDisk",
              "caching": "ReadWrite",
              "createOption": "FromImage"
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "Microsoft.Network/networkInterfaces/gf-nic-copyindex()"
              }
            ]
          },
          "diagnosticsProfile": {
            "bootDiagnostics": {
              "enabled": true,
              "storageUri": "[reference(variables('storageAccountName'),'2021-02-01').primaryendpoints['blob']]"
            }
          }
        }
      },
      {
        "name": "GlassFishDeployment",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2021-04-01",
        "dependsOn": [
          "virtualMachineLoop"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'), concat(variables('nestedTemplateFolder'), variables('nestedTemplateFileName'), parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "_artifactsLocation": {
              "value": "[deployment().properties.templateLink.uri]"
            },
            "_artifactsLocationSasToken": {
              "value": ""
            },
            "vmPrefix": {
              "value": "gf-vm-"
            },
            "numberOfInstances": {
              "value": 2
            },
            "glassfishVersion": {
              "value": 3
            },
            "glassfishRelease": {
              "value": "3.1.2.2"
            },
            "glassfishAdminPassword": {
              "value": "GEN-PASSWORD"
            }
          }
        }
      }
    ],
    "outputs": {
      "LoadBalancedApplicationServerURL": {
        "type": "string",
        "value": "[concat('http://', reference(variables('publicIPAddressName')).dnsSettings.fqdn)]"
      }
    },
    "\uff04schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#"
  }
}