{
  "structure": "filesystem",
  "error": null,
  "reference": "master",
  "contentType": "json",
  "source": "gitConnectorAzureQuickStart",
  "paths": [
    "/quickstarts/microsoft.web/function-premium-vnet-integration/azuredeploy.json",
    "/quickstarts/microsoft.web/function-premium-vnet-integration/azuredeploy.parameters.json"
  ],
  "timestamp": 1642962910963,
  "queryuser": null,
  "checksum": "99914b932bd37a50b983c5e7c90ae93b",
  "node": {
    "masterSnapshotId": "ARM_TEMPLATE_SNAPSHOT",
    "type": "arm",
    "collection": "armtemplate",
    "paths": [
      "/quickstarts/microsoft.web/function-premium-vnet-integration/azuredeploy.json",
      "/quickstarts/microsoft.web/function-premium-vnet-integration/azuredeploy.parameters.json"
    ],
    "snapshotId": "ARM_TEMPLATE_SNAPSHOT1760",
    "status": "active",
    "validate": true,
    "resourceTypes": [
      "microsoft.network/virtualnetworks",
      "microsoft.web/sites",
      "microsoft.web/sites/networkconfig",
      "microsoft.storage/storageaccounts",
      "microsoft.web/serverfarms",
      "microsoft.insights/components"
    ]
  },
  "snapshotId": "ARM_TEMPLATE_SNAPSHOT1760",
  "collection": "armtemplate",
  "json": {
    "contentVersion": "1.0.0.0",
    "metadata": {
      "_generator": {
        "name": "bicep",
        "version": "0.4.412.5873",
        "templateHash": "1628325295337612928"
      }
    },
    "parameters": {
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Location for all resources except Application Insights."
        }
      },
      "appInsightsLocation": {
        "type": "string",
        "metadata": {
          "description": "Location for Application Insights."
        },
        "value": "eastus"
      },
      "runtime": {
        "type": "string",
        "defaultValue": "node",
        "allowedValues": [
          "node",
          "dotnet",
          "java"
        ],
        "metadata": {
          "description": "The language worker runtime to load in the function app."
        }
      },
      "appName": {
        "type": "string",
        "defaultValue": "[format('fnapp{0}', uniqueString(resourceGroup().id))]",
        "metadata": {
          "description": "The name of the function app that you wish to create."
        }
      },
      "storageAccountType": {
        "type": "string",
        "defaultValue": "Standard_LRS",
        "allowedValues": [
          "Standard_LRS",
          "Standard_GRS",
          "Standard_RAGRS"
        ],
        "metadata": {
          "description": "Storage Account type"
        }
      },
      "vnetName": {
        "type": "string",
        "metadata": {
          "description": "The name of the virtual network to be created."
        },
        "value": "GEN-VNET-NAME"
      },
      "subnetName": {
        "type": "string",
        "metadata": {
          "description": "The name of the subnet to be created within the virtual network."
        },
        "value": "GEN-VNET-SUBNET1-NAME"
      }
    },
    "functions": [],
    "variables": {
      "vnetAddressPrefix": "10.0.0.0/16",
      "subnetAddressPrefix": "10.0.0.0/24",
      "functionAppName": "[format('fnapp{0}', uniqueString(resourceGroup().id))]",
      "hostingPlanName": "[format('fnapp{0}', uniqueString(resourceGroup().id))]",
      "storageAccountName": "[format('{0}azfunctions', uniqueString(resourceGroup().id))]",
      "functionWorkerRuntime": "node"
    },
    "resources": [
      {
        "type": "Microsoft.Network/virtualNetworks",
        "apiVersion": "2020-06-01",
        "name": "GEN-VNET-NAME",
        "location": "[resourceGroup().location]",
        "properties": {
          "addressSpace": {
            "addressPrefixes": [
              "10.0.0.0/16"
            ]
          },
          "subnets": [
            {
              "name": "GEN-VNET-SUBNET1-NAME",
              "properties": {
                "addressPrefix": "10.0.0.0/24",
                "delegations": [
                  {
                    "name": "delegation",
                    "properties": {
                      "serviceName": "Microsoft.Web/serverFarms"
                    }
                  }
                ]
              }
            }
          ]
        }
      },
      {
        "type": "Microsoft.Storage/storageAccounts",
        "apiVersion": "2021-04-01",
        "name": "[format('{0}azfunctions', uniqueString(resourceGroup().id))]",
        "location": "[resourceGroup().location]",
        "sku": {
          "name": "Standard_LRS"
        },
        "kind": "StorageV2"
      },
      {
        "type": "Microsoft.Insights/components",
        "apiVersion": "2020-02-02",
        "name": "[format('fnapp{0}', uniqueString(resourceGroup().id))]",
        "location": "eastus",
        "kind": "web",
        "properties": {
          "Application_Type": "web"
        }
      },
      {
        "type": "Microsoft.Web/serverfarms",
        "apiVersion": "2020-06-01",
        "name": "[format('fnapp{0}', uniqueString(resourceGroup().id))]",
        "location": "[resourceGroup().location]",
        "sku": {
          "name": "EP1",
          "tier": "ElasticPremium"
        },
        "kind": "elastic",
        "properties": {
          "maximumElasticWorkerCount": 20
        }
      },
      {
        "type": "Microsoft.Web/sites",
        "apiVersion": "2020-06-01",
        "name": "[format('fnapp{0}', uniqueString(resourceGroup().id))]",
        "location": "[resourceGroup().location]",
        "kind": "functionapp",
        "properties": {
          "serverFarmId": "Microsoft.Web/serverfarms/[format('fnapp{0}', uniqueString(resourceGroup().id))]",
          "siteConfig": {
            "appSettings": [
              {
                "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                "value": "[reference(resourceId('Microsoft.Insights/components', variables('functionAppName'))).InstrumentationKey]"
              },
              {
                "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
                "value": "[format('InstrumentationKey={0}', reference(resourceId('Microsoft.Insights/components', variables('functionAppName'))).InstrumentationKey)]"
              },
              {
                "name": "AzureWebJobsStorage",
                "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix= {1};AccountKey={2}', variables('storageAccountName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2021-04-01').keys[0].value)]"
              },
              {
                "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2};', variables('storageAccountName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2021-04-01').keys[0].value)]"
              },
              {
                "name": "FUNCTIONS_EXTENSION_VERSION",
                "value": "~3"
              },
              {
                "name": "FUNCTIONS_WORKER_RUNTIME",
                "value": "node"
              },
              {
                "name": "WEBSITE_NODE_DEFAULT_VERSION",
                "value": "~12"
              }
            ]
          }
        },
        "dependsOn": [
          "Microsoft.Insights/components/[format('fnapp{0}', uniqueString(resourceGroup().id))]",
          "Microsoft.Web/serverfarms/[format('fnapp{0}', uniqueString(resourceGroup().id))]",
          "Microsoft.Storage/storageAccounts/[format('{0}azfunctions', uniqueString(resourceGroup().id))]",
          "Microsoft.Network/virtualNetworks/GEN-VNET-NAME"
        ]
      },
      {
        "type": "Microsoft.Web/sites/networkConfig",
        "apiVersion": "2020-06-01",
        "name": "[format('{0}/{1}', variables('functionAppName'), 'virtualNetwork')]",
        "properties": {
          "subnetResourceId": "Microsoft.Network/virtualNetworks/subnets/GEN-VNET-NAME/GEN-VNET-SUBNET1-NAME",
          "swiftSupported": true
        },
        "dependsOn": [
          "Microsoft.Web/sites/[format('fnapp{0}', uniqueString(resourceGroup().id))]",
          "Microsoft.Network/virtualNetworks/GEN-VNET-NAME"
        ]
      }
    ],
    "\uff04schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#"
  }
}