{
  "structure": "filesystem",
  "error": null,
  "reference": "master",
  "contentType": "json",
  "source": "gitConnectorAzureQuickStart",
  "paths": [
    "/application-workloads/sap/sap-3-tier-marketplace-image-multi-sid-xscs-md/nestedtemplates/loadbalancer.json"
  ],
  "timestamp": 1642962895371,
  "queryuser": null,
  "checksum": "99914b932bd37a50b983c5e7c90ae93b",
  "node": {
    "masterSnapshotId": "ARM_TEMPLATE_SNAPSHOT",
    "type": "arm",
    "collection": "armtemplate",
    "paths": [
      "/application-workloads/sap/sap-3-tier-marketplace-image-multi-sid-xscs-md/nestedtemplates/loadbalancer.json"
    ],
    "snapshotId": "ARM_TEMPLATE_SNAPSHOT461",
    "status": "active",
    "validate": true,
    "resourceTypes": [
      "microsoft.resources/deployments",
      "microsoft.network/loadbalancers"
    ]
  },
  "snapshotId": "ARM_TEMPLATE_SNAPSHOT461",
  "collection": "armtemplate",
  "json": {
    "contentVersion": "1.0.0.0",
    "parameters": {
      "loadBalancerName": {
        "type": "string",
        "metadata": {
          "description": "The name of the the load balancer"
        }
      },
      "sapSystemCount": {
        "type": "int",
        "defaultValue": 1,
        "metadata": {
          "description": "The number of SAP systems for which the load balancer should be configured"
        }
      },
      "stackType": {
        "type": "string",
        "defaultValue": "ABAP",
        "metadata": {
          "description": "The stack type of the SAP system."
        }
      },
      "osType": {
        "type": "string",
        "defaultValue": "Windows",
        "metadata": {
          "description": "The type of the Operating System"
        }
      },
      "subnetId": {
        "type": "string",
        "metadata": {
          "description": "The id of the subnet you want to use."
        }
      },
      "location": {
        "type": "string",
        "metadata": {
          "description": "Location for all resources."
        }
      },
      "_artifactsLocation": {
        "type": "string",
        "metadata": {
          "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
        }
      },
      "_artifactsLocationSasToken": {
        "type": "securestring",
        "metadata": {
          "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."
        }
      }
    },
    "variables": {
      "ascsInstanceNumber": 0,
      "scsInstanceNumber": 1,
      "ersASCSInstanceNumber": 2,
      "ersSCSInstanceNumber": 3,
      "nestedDeploymentNameLBSCS": "loadBalancerNameLBSCS",
      "nestedDeploymentNameLBERS": "loadBalancerNameLBERS",
      "endIndex": "[sub(parameters('sapSystemCount'), 1)]"
    },
    "resources": [
      {
        "apiVersion": "2021-01-01",
        "name": "loadBalancerNameLBSCScopyIndex()",
        "type": "Microsoft.Resources/deployments",
        "copy": {
          "name": "scsLoop",
          "count": 1
        },
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'), concat('nestedtemplates/lb-SCS.json', parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "loadBalancerName": {
              "value": "loadBalancerName"
            },
            "stackType": {
              "value": "ABAP"
            },
            "osType": {
              "value": "Windows"
            },
            "ascsInstanceNumber": {
              "value": "[add(mul(copyIndex(), 10), variables('ascsInstanceNumber'))]"
            },
            "scsInstanceNumber": {
              "value": "[add(mul(copyIndex(), 10), variables('scsInstanceNumber'))]"
            },
            "subnetId": {
              "value": "subnetId"
            },
            "nicBackAddressPoolsArray": {
              "value": "[if(equals(copyIndex(), 0), json('[]'), reference(variables('nestedDeploymentNameLBSCS'), sub(copyIndex(), 1)).outputs.nicBackAddressPools.value)]"
            },
            "frontendIPConfigurationsArray": {
              "value": "[if(equals(copyIndex(), 0), json('[]'), reference(variables('nestedDeploymentNameLBSCS'), sub(copyIndex(), 1)).outputs.frontendIPConfigurations.value)]"
            },
            "backendAddressPoolsArray": {
              "value": "[if(equals(copyIndex(), 0), json('[]'), reference(variables('nestedDeploymentNameLBSCS'), sub(copyIndex(), 1)).outputs.backendAddressPools.value)]"
            },
            "loadBalancingRulesArray": {
              "value": "[if(equals(copyIndex(), 0), json('[]'), reference(variables('nestedDeploymentNameLBSCS'), sub(copyIndex(), 1)).outputs.loadBalancingRules.value)]"
            },
            "probesArray": {
              "value": "[if(equals(copyIndex(), 0), json('[]'), reference(variables('nestedDeploymentNameLBSCS'), sub(copyIndex(), 1)).outputs.probes.value)]"
            }
          }
        }
      },
      {
        "apiVersion": "2017-05-10",
        "name": "loadBalancerNameLBERScopyIndex()",
        "type": "Microsoft.Resources/deployments",
        "copy": {
          "name": "ersLoop",
          "count": 1
        },
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'), concat('nestedtemplates/lb-ERS.json', parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "loadBalancerName": {
              "value": "loadBalancerName"
            },
            "stackType": {
              "value": "ABAP"
            },
            "osType": {
              "value": "Windows"
            },
            "ersASCSInstanceNumber": {
              "value": "[add(mul(copyIndex(), 10), variables('ersASCSInstanceNumber'))]"
            },
            "ersSCSInstanceNumber": {
              "value": "[add(mul(copyIndex(), 10), variables('ersSCSInstanceNumber'))]"
            },
            "subnetId": {
              "value": "subnetId"
            },
            "nicBackAddressPoolsArray": {
              "value": "[if(equals(copyIndex(), 0), json('[]'), reference(variables('nestedDeploymentNameLBERS'), sub(copyIndex(), 1)).outputs.nicBackAddressPools.value)]"
            },
            "frontendIPConfigurationsArray": {
              "value": "[if(equals(copyIndex(), 0), json('[]'), reference(variables('nestedDeploymentNameLBERS'), sub(copyIndex(), 1)).outputs.frontendIPConfigurations.value)]"
            },
            "backendAddressPoolsArray": {
              "value": "[if(equals(copyIndex(), 0), json('[]'), reference(variables('nestedDeploymentNameLBERS'), sub(copyIndex(), 1)).outputs.backendAddressPools.value)]"
            },
            "loadBalancingRulesArray": {
              "value": "[if(equals(copyIndex(), 0), json('[]'), reference(variables('nestedDeploymentNameLBERS'), sub(copyIndex(), 1)).outputs.loadBalancingRules.value)]"
            },
            "probesArray": {
              "value": "[if(equals(copyIndex(), 0), json('[]'), reference(variables('nestedDeploymentNameLBERS'), sub(copyIndex(), 1)).outputs.probes.value)]"
            }
          }
        }
      },
      {
        "type": "Microsoft.Network/loadBalancers",
        "name": "loadBalancerName",
        "apiVersion": "2018-04-01",
        "dependsOn": [
          "scsLoop",
          "ersLoop"
        ],
        "location": "location",
        "properties": {
          "frontendIPConfigurations": "[concat(reference(variables('nestedDeploymentNameLBSCS'), variables('endIndex')).outputs.frontendIPConfigurations.value, reference(variables('nestedDeploymentNameLBERS'), variables('endIndex')).outputs.frontendIPConfigurations.value)]",
          "backendAddressPools": "[concat(reference(variables('nestedDeploymentNameLBSCS'), variables('endIndex')).outputs.backendAddressPools.value, reference(variables('nestedDeploymentNameLBERS'), variables('endIndex')).outputs.backendAddressPools.value)]",
          "loadBalancingRules": "[concat(reference(variables('nestedDeploymentNameLBSCS'), variables('endIndex')).outputs.loadBalancingRules.value, reference(variables('nestedDeploymentNameLBERS'), variables('endIndex')).outputs.loadBalancingRules.value)]",
          "probes": "[concat(reference(variables('nestedDeploymentNameLBSCS'), variables('endIndex')).outputs.probes.value, reference(variables('nestedDeploymentNameLBERS'), variables('endIndex')).outputs.probes.value)]"
        }
      }
    ],
    "outputs": {
      "nicBackAddressPools": {
        "value": "[concat(reference(variables('nestedDeploymentNameLBSCS'), variables('endIndex')).outputs.nicBackAddressPools.value, reference(variables('nestedDeploymentNameLBERS'), variables('endIndex')).outputs.nicBackAddressPools.value)]",
        "type": "array"
      }
    },
    "\uff04schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#"
  }
}