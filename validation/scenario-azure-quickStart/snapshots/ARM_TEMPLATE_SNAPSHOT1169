{
  "structure": "filesystem",
  "error": null,
  "reference": "master",
  "contentType": "json",
  "source": "gitConnectorAzureQuickStart",
  "paths": [
    "/quickstarts/microsoft.compute/vmss-ubuntu-web-ssl/azuredeploy.json",
    "/quickstarts/microsoft.compute/vmss-ubuntu-web-ssl/azuredeploy.parameters.json"
  ],
  "timestamp": 1642962905208,
  "queryuser": null,
  "checksum": "99914b932bd37a50b983c5e7c90ae93b",
  "node": {
    "masterSnapshotId": "ARM_TEMPLATE_SNAPSHOT",
    "type": "arm",
    "collection": "armtemplate",
    "paths": [
      "/quickstarts/microsoft.compute/vmss-ubuntu-web-ssl/azuredeploy.json",
      "/quickstarts/microsoft.compute/vmss-ubuntu-web-ssl/azuredeploy.parameters.json"
    ],
    "snapshotId": "ARM_TEMPLATE_SNAPSHOT1169",
    "status": "active",
    "validate": true,
    "resourceTypes": [
      "microsoft.network/publicipaddresses",
      "microsoft.network/virtualnetworks",
      "microsoft.network/loadbalancers",
      "microsoft.compute/virtualmachinescalesets"
    ]
  },
  "snapshotId": "ARM_TEMPLATE_SNAPSHOT1169",
  "collection": "armtemplate",
  "json": {
    "contentVersion": "1.0.0.0",
    "parameters": {
      "vmSku": {
        "type": "string",
        "defaultValue": "Standard_A1",
        "metadata": {
          "description": "Size of VMs in the VM Scale Set."
        },
        "value": "Standard_A1"
      },
      "ubuntuOSVersion": {
        "type": "string",
        "defaultValue": "14.04.4-LTS",
        "allowedValues": [
          "14.04.4-LTS"
        ],
        "metadata": {
          "description": "The Ubuntu version for the VM. This will pick a fully patched image of this given Ubuntu version. Allowed values are: 15.10, 14.04.4-LTS."
        }
      },
      "vmssName": {
        "type": "string",
        "metadata": {
          "description": "String used as a base for naming resources. Must be 3-61 characters in length and globally unique across Azure. A hash is prepended to this string for some resources, and resource-specific information is appended."
        },
        "maxLength": 61,
        "value": "webVMs"
      },
      "capacity": {
        "type": "int",
        "metadata": {
          "description": "Number of VM instances (100 or less)."
        },
        "maxValue": 100,
        "value": 1
      },
      "adminUsername": {
        "type": "string",
        "metadata": {
          "description": "Admin username on all VMs."
        },
        "value": "GEN-UNIQUE"
      },
      "vaultName": {
        "type": "string",
        "metadata": {
          "description": "The Azure Key vault where SSL certificates are stored"
        },
        "value": "GEN-KEYVAULT-NAME"
      },
      "vaultResourceGroup": {
        "type": "string",
        "metadata": {
          "description": "Resource Group of the key vault"
        },
        "value": "GEN-KEYVAULT-RESOURCEGROUP-NAME"
      },
      "httpssecretUrlWithVersion": {
        "type": "string",
        "metadata": {
          "description": "full Key Vault Id to the secret that stores the SSL cert"
        },
        "value": "GEN-SF-CERT-URL"
      },
      "httpssecretCaUrlWithVersion": {
        "type": "string",
        "metadata": {
          "description": "full Key Vault Id to the secret that stores the CA cert"
        },
        "value": "GEN-SF-CERT-URL"
      },
      "scriptFileName": {
        "type": "string",
        "metadata": {
          "description": "the file name of the script configuring the VMs in the scale set"
        },
        "value": "configuressl.sh"
      },
      "certThumbPrint": {
        "type": "string",
        "metadata": {
          "description": "fingerprint of the SSL cert"
        },
        "value": "GEN-SF-CERT-THUMBPRINT"
      },
      "caCertThumbPrint": {
        "type": "string",
        "metadata": {
          "description": "fingerprint of the CA cert"
        },
        "value": "GEN-SF-CERT-THUMBPRINT"
      },
      "_artifactsLocation": {
        "type": "string",
        "metadata": {
          "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
        },
        "defaultValue": "https://raw.githubusercontent.com/azure/azure-quickstart-templates/master/quickstarts/microsoft.compute/vmss-ubuntu-web-ssl/configuressl.sh"
      },
      "_artifactsLocationSasToken": {
        "type": "securestring",
        "metadata": {
          "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."
        },
        "defaultValue": ""
      },
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Location for all resources."
        }
      },
      "authenticationType": {
        "type": "string",
        "defaultValue": "sshPublicKey",
        "allowedValues": [
          "sshPublicKey",
          "password"
        ],
        "metadata": {
          "description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."
        }
      },
      "adminPasswordOrKey": {
        "type": "securestring",
        "metadata": {
          "description": "SSH Key or password for the Virtual Machine. SSH key is recommended."
        },
        "value": "GEN-SSH-PUB-KEY"
      }
    },
    "variables": {
      "namingInfix": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]",
      "addressPrefix": "10.0.0.0/16",
      "subnetPrefix": "10.0.0.0/24",
      "virtualNetworkName": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]vnet",
      "subnetName": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]subnet",
      "lbName": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]lb",
      "bepoolName": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]lbbepool",
      "fepoolName": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]lbfepool",
      "lbID": "Microsoft.Network/loadBalancers/[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]lb",
      "bepoolID": "Microsoft.Network/loadBalancers/[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]lb/backendAddressPools/[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]lbbepool",
      "feIpConfigName": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]lbfepoolIpConfig",
      "feIpConfigId": "Microsoft.Network/loadBalancers/[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]lb/frontendIPConfigurations/[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]lbfepoolIpConfig",
      "pipName": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]pip",
      "nicName": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]nic",
      "natPoolName": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]lbnatpool",
      "ipConfigName": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]ipconfig",
      "httpProbeName": "httpProbe",
      "httpsProbeName": "httpsProbe",
      "osType": {
        "publisher": "Canonical",
        "offer": "UbuntuServer",
        "sku": "14.04.4-LTS",
        "version": "latest"
      },
      "imageReference": {
        "publisher": "Canonical",
        "offer": "UbuntuServer",
        "sku": "14.04.4-LTS",
        "version": "latest"
      },
      "linuxConfiguration": {
        "disablePasswordAuthentication": true,
        "ssh": {
          "publicKeys": [
            {
              "path": "/home/GEN-UNIQUE/.ssh/authorized_keys",
              "keyData": "GEN-SSH-PUB-KEY"
            }
          ]
        }
      }
    },
    "resources": [
      {
        "type": "Microsoft.Network/virtualNetworks",
        "name": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]vnet",
        "location": "[resourceGroup().location]",
        "apiVersion": "2016-03-30",
        "properties": {
          "addressSpace": {
            "addressPrefixes": [
              "10.0.0.0/16"
            ]
          },
          "subnets": [
            {
              "name": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]subnet",
              "properties": {
                "addressPrefix": "10.0.0.0/24"
              }
            }
          ]
        }
      },
      {
        "type": "Microsoft.Network/publicIPAddresses",
        "name": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]pip",
        "location": "[resourceGroup().location]",
        "apiVersion": "2016-03-30",
        "properties": {
          "publicIPAllocationMethod": "Dynamic",
          "dnsSettings": {
            "domainNameLabel": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]"
          }
        }
      },
      {
        "type": "Microsoft.Network/loadBalancers",
        "name": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]lb",
        "location": "[resourceGroup().location]",
        "apiVersion": "2016-03-30",
        "dependsOn": [
          "Microsoft.Network/publicIPAddresses/[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]pip"
        ],
        "tags": {
          "displayName": "Load Balancer"
        },
        "properties": {
          "frontendIPConfigurations": [
            {
              "name": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]lbfepoolIpConfig",
              "properties": {
                "publicIPAddress": {
                  "id": "Microsoft.Network/publicIPAddresses/[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]pip"
                }
              }
            }
          ],
          "backendAddressPools": [
            {
              "name": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]lbbepool"
            }
          ],
          "inboundNatPools": [
            {
              "name": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]lbnatpool",
              "properties": {
                "frontendIPConfiguration": {
                  "id": "Microsoft.Network/loadBalancers/[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]lb/frontendIPConfigurations/[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]lbfepoolIpConfig"
                },
                "protocol": "Tcp",
                "frontendPortRangeStart": 10022,
                "frontendPortRangeEnd": 10050,
                "backendPort": 22
              }
            }
          ],
          "loadBalancingRules": [
            {
              "name": "HTTPRule",
              "properties": {
                "loadDistribution": "Default",
                "frontendIPConfiguration": {
                  "id": "Microsoft.Network/loadBalancers/[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]lb/frontendIPConfigurations/[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]lbfepoolIpConfig"
                },
                "backendAddressPool": {
                  "id": "Microsoft.Network/loadBalancers/[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]lb/backendAddressPools/[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]lbbepool"
                },
                "protocol": "Tcp",
                "frontendPort": 80,
                "backendPort": 80,
                "enableFloatingIP": false,
                "idleTimeoutInMinutes": 5,
                "probe": {
                  "id": "lbId/probes/httpProbe"
                }
              }
            },
            {
              "name": "HTTPSRule",
              "properties": {
                "loadDistribution": "Default",
                "frontendIPConfiguration": {
                  "id": "Microsoft.Network/loadBalancers/[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]lb/frontendIPConfigurations/[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]lbfepoolIpConfig"
                },
                "backendAddressPool": {
                  "id": "bepoolId"
                },
                "protocol": "Tcp",
                "frontendPort": 443,
                "backendPort": 443,
                "enableFloatingIP": false,
                "idleTimeoutInMinutes": 5,
                "probe": {
                  "id": "Microsoft.Network/loadBalancers/[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]lb/probes/httpsProbe"
                }
              }
            }
          ],
          "probes": [
            {
              "name": "httpProbe",
              "properties": {
                "protocol": "Tcp",
                "port": 80,
                "intervalInSeconds": 5,
                "numberOfProbes": 2
              }
            },
            {
              "name": "httpsProbe",
              "properties": {
                "protocol": "Tcp",
                "port": 443,
                "intervalInSeconds": 5,
                "numberOfProbes": 2
              }
            }
          ]
        }
      },
      {
        "type": "Microsoft.Compute/virtualMachineScaleSets",
        "name": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]",
        "location": "[resourceGroup().location]",
        "apiVersion": "2016-04-30-preview",
        "dependsOn": [
          "Microsoft.Network/loadBalancers/[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]lb",
          "Microsoft.Network/virtualNetworks/[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]vnet"
        ],
        "sku": {
          "name": "Standard_A1",
          "tier": "Standard",
          "capacity": 1
        },
        "properties": {
          "overprovision": "true",
          "upgradePolicy": {
            "mode": "Manual"
          },
          "virtualMachineProfile": {
            "storageProfile": {
              "osDisk": {
                "caching": "ReadWrite",
                "createOption": "FromImage"
              },
              "imageReference": {
                "publisher": "Canonical",
                "offer": "UbuntuServer",
                "sku": "14.04.4-LTS",
                "version": "latest"
              }
            },
            "osProfile": {
              "computerNamePrefix": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]",
              "adminUsername": "GEN-UNIQUE",
              "adminPassword": "GEN-SSH-PUB-KEY",
              "secrets": [
                {
                  "sourceVault": {
                    "id": "GEN-KEYVAULT-RESOURCEGROUP-NAME/Microsoft.KeyVault/vaults/GEN-KEYVAULT-NAME"
                  },
                  "vaultCertificates": [
                    {
                      "certificateUrl": "GEN-SF-CERT-URL"
                    },
                    {
                      "certificateUrl": "GEN-SF-CERT-URL"
                    }
                  ]
                }
              ],
              "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]"
            },
            "networkProfile": {
              "networkInterfaceConfigurations": [
                {
                  "name": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]nic",
                  "properties": {
                    "primary": true,
                    "ipConfigurations": [
                      {
                        "name": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]ipconfig",
                        "properties": {
                          "subnet": {
                            "id": "Microsoft.Network/virtualNetworks/subnets/[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]vnet/[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]subnet"
                          },
                          "loadBalancerBackendAddressPools": [
                            {
                              "id": "Microsoft.Network/loadBalancers/backendAddressPools/[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]lb/bePoolName"
                            }
                          ],
                          "loadBalancerInboundNatPools": [
                            {
                              "id": "Microsoft.Network/loadBalancers/inboundNatPools/[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]lb/[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]lbnatpool"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "extensionProfile": {
              "extensions": [
                {
                  "name": "lapextension",
                  "properties": {
                    "publisher": "Microsoft.Azure.Extensions",
                    "type": "CustomScript",
                    "typeHandlerVersion": "2.0",
                    "autoUpgradeMinorVersion": false,
                    "settings": {
                      "fileUris": [
                        "https://raw.githubusercontent.com/azure/azure-quickstart-templates/master/quickstarts/microsoft.compute/vmss-ubuntu-web-ssl/configuressl.sh/configuressl.sh parameters('_artifactsLocationSasToken')"
                      ]
                    },
                    "protectedSettings": {
                      "commandToExecute": "bash configuressl.sh GEN-SF-CERT-THUMBPRINT GEN-SF-CERT-THUMBPRINT"
                    }
                  }
                }
              ]
            }
          }
        }
      }
    ],
    "outputs": {
      "fqdn": {
        "type": "string",
        "value": "[reference( variables('pipName') ).dnsSettings.fqdn]"
      }
    },
    "\uff04schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#"
  }
}