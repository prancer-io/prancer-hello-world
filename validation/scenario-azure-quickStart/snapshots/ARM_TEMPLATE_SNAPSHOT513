{
  "structure": "filesystem",
  "error": null,
  "reference": "master",
  "contentType": "json",
  "source": "gitConnectorAzureQuickStart",
  "paths": [
    "/application-workloads/sharepoint/sharepoint-adfs/azuredeploy.json",
    "/application-workloads/sharepoint/sharepoint-adfs/azuredeploy.parameters.json"
  ],
  "timestamp": 1642962896228,
  "queryuser": null,
  "checksum": "99914b932bd37a50b983c5e7c90ae93b",
  "node": {
    "masterSnapshotId": "ARM_TEMPLATE_SNAPSHOT",
    "type": "arm",
    "collection": "armtemplate",
    "paths": [
      "/application-workloads/sharepoint/sharepoint-adfs/azuredeploy.json",
      "/application-workloads/sharepoint/sharepoint-adfs/azuredeploy.parameters.json"
    ],
    "snapshotId": "ARM_TEMPLATE_SNAPSHOT513",
    "status": "active",
    "validate": true,
    "resourceTypes": [
      "microsoft.network/publicipaddresses",
      "microsoft.network/virtualnetworks",
      "microsoft.network/networkinterfaces",
      "microsoft.compute/virtualmachines/extensions",
      "microsoft.devtestlab/schedules",
      "microsoft.compute/virtualmachines",
      "microsoft.network/networksecuritygroups",
      "microsoft.network/bastionhosts",
      "microsoft.network/virtualnetworks/subnets"
    ]
  },
  "snapshotId": "ARM_TEMPLATE_SNAPSHOT513",
  "collection": "armtemplate",
  "json": {
    "contentVersion": "2.0.0.0",
    "metadata": {
      "description": "Create a SharePoint 2019 / 2016 / 2013 farm with a web application set with Windows and ADFS authentication, and some path based and host-named site collections. It also provisions User Profiles and Apps service applications and installs claims provider LDAPCP.",
      "author": "Yvand"
    },
    "parameters": {
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Location for all resources."
        }
      },
      "sharePointVersion": {
        "type": "string",
        "defaultValue": "Subscription",
        "allowedValues": [
          "2013",
          "2016",
          "2019",
          "Subscription"
        ],
        "metadata": {
          "description": "Version of SharePoint farm to create."
        }
      },
      "dnsLabelPrefix": {
        "type": "string",
        "minLength": 2,
        "metadata": {
          "description": "\"[Prefix]\" of public DNS name of VMs, as used in \"[Prefix]-[VMName].[region].cloudapp.azure.com\""
        },
        "value": "GEN-UNIQUE-10"
      },
      "domainFQDN": {
        "type": "string",
        "defaultValue": "contoso.local",
        "minLength": 5,
        "metadata": {
          "description": "FQDN of the AD forest to create."
        }
      },
      "numberOfAdditionalFrontEnd": {
        "type": "int",
        "allowedValues": [
          0,
          1,
          2,
          3,
          4
        ],
        "defaultValue": 0,
        "metadata": {
          "description": "Number of MinRole Front-end to add to the farm. The MinRole type can be changed later as needed."
        }
      },
      "addAzureBastion": {
        "type": "bool",
        "defaultValue": false,
        "metadata": {
          "description": "Specify if Azure Bastion should be provisioned. See https://azure.microsoft.com/en-us/services/azure-bastion for more information."
        }
      },
      "addPublicIPAddressToEachVM": {
        "type": "bool",
        "defaultValue": true,
        "metadata": {
          "description": "Specify if each VM should have a public IP and be reachable from Internet."
        }
      },
      "RDPTrafficAllowed": {
        "type": "string",
        "defaultValue": "No",
        "minLength": 1,
        "metadata": {
          "description": "Specify if RDP traffic is allowed to connect to the VMs:<br>- If 'No' (default): Firewall denies all incoming RDP traffic from Internet.<br>- If '*' or 'Internet': Firewall accepts all incoming RDP traffic from Internet.<br>- If 'ServiceTagName': Firewall accepts all incoming RDP traffic from the specified 'ServiceTagName'.<br>- If 'xx.xx.xx.xx': Firewall accepts incoming RDP traffic only from the IP 'xx.xx.xx.xx'."
        }
      },
      "adminUserName": {
        "type": "string",
        "minLength": 1,
        "metadata": {
          "description": "Name of the AD and SharePoint administrator. 'admin' and 'administrator' are not allowed."
        },
        "value": "GEN-UNIQUE"
      },
      "adminPassword": {
        "type": "securestring",
        "minLength": 8,
        "metadata": {
          "description": "Input must meet password complexity requirements as documented for property 'adminPassword' in https://docs.microsoft.com/en-us/rest/api/compute/virtualmachines/virtualmachines-create-or-update"
        },
        "value": "GEN-PASSWORD"
      },
      "serviceAccountsPassword": {
        "type": "securestring",
        "minLength": 8,
        "metadata": {
          "description": "Password for all service account and SharePoint passphrase. It must meet password complexity requirements as documented for property 'adminPassword' in https://docs.microsoft.com/en-us/rest/api/compute/virtualmachines/virtualmachines-create-or-update"
        },
        "value": "GEN-PASSWORD"
      },
      "vmsTimeZone": {
        "type": "string",
        "defaultValue": "Romance Standard Time",
        "allowedValues": [
          "Dateline Standard Time",
          "UTC-11",
          "Aleutian Standard Time",
          "Hawaiian Standard Time",
          "Marquesas Standard Time",
          "Alaskan Standard Time",
          "UTC-09",
          "Pacific Standard Time (Mexico)",
          "UTC-08",
          "Pacific Standard Time",
          "US Mountain Standard Time",
          "Mountain Standard Time (Mexico)",
          "Mountain Standard Time",
          "Central America Standard Time",
          "Central Standard Time",
          "Easter Island Standard Time",
          "Central Standard Time (Mexico)",
          "Canada Central Standard Time",
          "SA Pacific Standard Time",
          "Eastern Standard Time (Mexico)",
          "Eastern Standard Time",
          "Haiti Standard Time",
          "Cuba Standard Time",
          "US Eastern Standard Time",
          "Turks And Caicos Standard Time",
          "Paraguay Standard Time",
          "Atlantic Standard Time",
          "Venezuela Standard Time",
          "Central Brazilian Standard Time",
          "SA Western Standard Time",
          "Pacific SA Standard Time",
          "Newfoundland Standard Time",
          "Tocantins Standard Time",
          "E. South America Standard Time",
          "SA Eastern Standard Time",
          "Argentina Standard Time",
          "Greenland Standard Time",
          "Montevideo Standard Time",
          "Magallanes Standard Time",
          "Saint Pierre Standard Time",
          "Bahia Standard Time",
          "UTC-02",
          "Mid-Atlantic Standard Time",
          "Azores Standard Time",
          "Cape Verde Standard Time",
          "UTC",
          "GMT Standard Time",
          "Greenwich Standard Time",
          "Sao Tome Standard Time",
          "Morocco Standard Time",
          "W. Europe Standard Time",
          "Central Europe Standard Time",
          "Romance Standard Time",
          "Central European Standard Time",
          "W. Central Africa Standard Time",
          "Jordan Standard Time",
          "GTB Standard Time",
          "Middle East Standard Time",
          "Egypt Standard Time",
          "E. Europe Standard Time",
          "Syria Standard Time",
          "West Bank Standard Time",
          "South Africa Standard Time",
          "FLE Standard Time",
          "Israel Standard Time",
          "Kaliningrad Standard Time",
          "Sudan Standard Time",
          "Libya Standard Time",
          "Namibia Standard Time",
          "Arabic Standard Time",
          "Turkey Standard Time",
          "Arab Standard Time",
          "Belarus Standard Time",
          "Russian Standard Time",
          "E. Africa Standard Time",
          "Iran Standard Time",
          "Arabian Standard Time",
          "Astrakhan Standard Time",
          "Azerbaijan Standard Time",
          "Russia Time Zone 3",
          "Mauritius Standard Time",
          "Saratov Standard Time",
          "Georgian Standard Time",
          "Volgograd Standard Time",
          "Caucasus Standard Time",
          "Afghanistan Standard Time",
          "West Asia Standard Time",
          "Ekaterinburg Standard Time",
          "Pakistan Standard Time",
          "Qyzylorda Standard Time",
          "India Standard Time",
          "Sri Lanka Standard Time",
          "Nepal Standard Time",
          "Central Asia Standard Time",
          "Bangladesh Standard Time",
          "Omsk Standard Time",
          "Myanmar Standard Time",
          "SE Asia Standard Time",
          "Altai Standard Time",
          "W. Mongolia Standard Time",
          "North Asia Standard Time",
          "N. Central Asia Standard Time",
          "Tomsk Standard Time",
          "China Standard Time",
          "North Asia East Standard Time",
          "Singapore Standard Time",
          "W. Australia Standard Time",
          "Taipei Standard Time",
          "Ulaanbaatar Standard Time",
          "Aus Central W. Standard Time",
          "Transbaikal Standard Time",
          "Tokyo Standard Time",
          "North Korea Standard Time",
          "Korea Standard Time",
          "Yakutsk Standard Time",
          "Cen. Australia Standard Time",
          "AUS Central Standard Time",
          "E. Australia Standard Time",
          "AUS Eastern Standard Time",
          "West Pacific Standard Time",
          "Tasmania Standard Time",
          "Vladivostok Standard Time",
          "Lord Howe Standard Time",
          "Bougainville Standard Time",
          "Russia Time Zone 10",
          "Magadan Standard Time",
          "Norfolk Standard Time",
          "Sakhalin Standard Time",
          "Central Pacific Standard Time",
          "Russia Time Zone 11",
          "New Zealand Standard Time",
          "UTC+12",
          "Fiji Standard Time",
          "Kamchatka Standard Time",
          "Chatham Islands Standard Time",
          "UTC+13",
          "Tonga Standard Time",
          "Samoa Standard Time",
          "Line Islands Standard Time"
        ],
        "minLength": 2,
        "metadata": {
          "description": "Time zone of the virtual machines. Type \"[TimeZoneInfo]::GetSystemTimeZones().Id\" in PowerShell to get the list."
        }
      },
      "vmsAutoShutdownTime": {
        "type": "string",
        "defaultValue": "1900",
        "minLength": 4,
        "maxLength": 4,
        "metadata": {
          "description": "The time at which VMs will be automatically shutdown (24h HHmm format). Set value to '9999' to NOT configure the auto shutdown."
        }
      },
      "enableAutomaticUpdates": {
        "type": "bool",
        "defaultValue": true,
        "metadata": {
          "description": "Enable automatic Windows Updates."
        }
      },
      "enableHybridBenefitServerLicenses": {
        "type": "bool",
        "defaultValue": false,
        "metadata": {
          "description": "Enable Azure Hybrid Benefit to use your on-premises Windows Server licenses and reduce cost. See https://docs.microsoft.com/en-us/azure/virtual-machines/windows/hybrid-use-benefit-licensing for more information."
        }
      },
      "sharePointDataDiskSize": {
        "type": "int",
        "defaultValue": 0,
        "metadata": {
          "description": "Size in Gb of the additional data disk attached to SharePoint VMs. Set to 0 to not create it"
        }
      },
      "vmDCSize": {
        "type": "string",
        "defaultValue": "Standard_B2s",
        "metadata": {
          "description": "Size of the DC VM"
        }
      },
      "vmDCStorageAccountType": {
        "type": "string",
        "defaultValue": "StandardSSD_LRS",
        "allowedValues": [
          "Standard_LRS",
          "StandardSSD_LRS",
          "Premium_LRS",
          "Premium_ZRS",
          "StandardSSD_ZRS",
          "UltraSSD_LRS"
        ],
        "metadata": {
          "description": "Type of storage for the managed disks. Visit 'https://docs.microsoft.com/en-us/rest/api/compute/disks/list#diskstorageaccounttypes' for more information"
        }
      },
      "vmSQLSize": {
        "type": "string",
        "defaultValue": "Standard_B2ms",
        "metadata": {
          "description": "Size of the SQL VM"
        }
      },
      "vmSQLStorageAccountType": {
        "type": "string",
        "defaultValue": "StandardSSD_LRS",
        "allowedValues": [
          "Standard_LRS",
          "StandardSSD_LRS",
          "Premium_LRS",
          "Premium_ZRS",
          "StandardSSD_ZRS",
          "UltraSSD_LRS"
        ],
        "metadata": {
          "description": "Type of storage for the managed disks. Visit 'https://docs.microsoft.com/en-us/rest/api/compute/disks/list#diskstorageaccounttypes' for more information"
        }
      },
      "vmSPSize": {
        "type": "string",
        "defaultValue": "Standard_B4ms",
        "metadata": {
          "description": "Size of the SharePoint VM"
        }
      },
      "vmSPStorageAccountType": {
        "type": "string",
        "defaultValue": "StandardSSD_LRS",
        "allowedValues": [
          "Standard_LRS",
          "StandardSSD_LRS",
          "Premium_LRS",
          "Premium_ZRS",
          "StandardSSD_ZRS",
          "UltraSSD_LRS"
        ],
        "metadata": {
          "description": "Type of storage for the managed disks. Visit 'https://docs.microsoft.com/en-us/rest/api/compute/disks/list#diskstorageaccounttypes' for more information"
        }
      },
      "_artifactsLocation": {
        "type": "string",
        "defaultValue": "[deployment().properties.templateLink.uri]",
        "metadata": {
          "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
        }
      },
      "_artifactsLocationSasToken": {
        "type": "securestring",
        "defaultValue": "",
        "metadata": {
          "description": "The sasToken required to access _artifactsLocation. When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."
        }
      }
    },
    "variables": {
      "generalSettings": {
        "vmDCName": "DC",
        "vmSQLName": "SQL",
        "vmSPName": "SP",
        "vmFEName": "FE",
        "sqlAlias": "SQLAlias",
        "spSuperUserName": "spSuperUser",
        "spSuperReaderName": "spSuperReader",
        "adfsSvcUserName": "adfssvc",
        "adfsSvcPassword": "GEN-PASSWORD",
        "sqlSvcUserName": "sqlsvc",
        "sqlSvcPassword": "GEN-PASSWORD",
        "spSetupUserName": "spsetup",
        "spSetupPassword": "GEN-PASSWORD",
        "spFarmUserName": "spfarm",
        "spFarmPassword": "GEN-PASSWORD",
        "spSvcUserName": "spsvc",
        "spSvcPassword": "GEN-PASSWORD",
        "spAppPoolUserName": "spapppool",
        "spAppPoolPassword": "GEN-PASSWORD",
        "spPassphrase": "GEN-PASSWORD",
        "localAdminUserName": "[concat('local-', uniqueString(subscription().subscriptionId))]",
        "enableAnalysis": false
      },
      "networkSettings": {
        "vNetPrivateName": "[concat(resourceGroup().name, '-vnet')]",
        "vNetPrivatePrefix": "10.0.0.0/16",
        "subnetDCName": "Subnet-DC",
        "subnetDCPrefix": "10.0.1.0/24",
        "dcPrivateIPAddress": "10.0.1.4",
        "subnetSQLName": "Subnet-SQL",
        "subnetSQLPrefix": "10.0.2.0/24",
        "subnetSPName": "Subnet-SP",
        "subnetSPPrefix": "10.0.3.0/24",
        "nsgSubnetDCName": "NSG-Subnet-DC",
        "nsgSubnetSQLName": "NSG-Subnet-SQL",
        "nsgSubnetSPName": "NSG-Subnet-SP",
        "vmDCPublicIPNicAssociation": {
          "id": "Microsoft.Network/publicIPAddresses/(vmDC).vmPublicIPName"
        },
        "vmSQLPublicIPNicAssociation": {
          "id": "Microsoft.Network/publicIPAddresses/(vmSQL).vmPublicIPName"
        },
        "vmSPPublicIPNicAssociation": {
          "id": "Microsoft.Network/publicIPAddresses/(vmSP).vmPublicIPName"
        },
        "nsgRuleAllowIncomingTraffic": [
          {
            "name": "allow-rdp-rule",
            "properties": {
              "description": "Allow RDP",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "No",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 110,
              "direction": "Inbound"
            }
          }
        ]
      },
      "vmDC": {
        "vmImagePublisher": "MicrosoftWindowsServer",
        "vmImageOffer": "WindowsServer",
        "vmImageSKU": "2022-datacenter-azure-edition-smalldisk",
        "vmOSDiskName": "Disk-DC-OS",
        "vmVmSize": "Standard_B2s",
        "vmNicName": "NIC-(generalSettings).vmDCName-0",
        "vmPublicIPName": "PublicIP-(generalSettings).vmDCName",
        "vmPublicIPDnsName": "[toLower(replace(concat(parameters('dnsLabelPrefix'), '-', variables('generalSettings').vmDCName), '_', '-'))]",
        "shutdownResourceName": "shutdown-computevm-(generalSettings).vmDCName"
      },
      "vmSQL": {
        "vmImagePublisher": "MicrosoftSQLServer",
        "vmImageOffer": "sql2019-ws2022",
        "vmImageSKU": "sqldev",
        "vmOSDiskName": "Disk-SQL-OS",
        "vmVmSize": "Standard_B2ms",
        "vmNicName": "NIC-(generalSettings).vmSQLName-0",
        "vmPublicIPName": "PublicIP-(generalSettings).vmSQLName",
        "vmPublicIPDnsName": "[toLower(replace(concat(parameters('dnsLabelPrefix'), '-', variables('generalSettings').vmSQLName), '_', '-'))]",
        "shutdownResourceName": "shutdown-computevm-(generalSettings).vmSQLName"
      },
      "vmSP": {
        "vmImagePublisher": "[if(equals(toLower(parameters('sharePointVersion')), 'subscription'), 'MicrosoftWindowsServer', 'MicrosoftSharePoint')]",
        "vmImageOffer": "[if(equals(toLower(parameters('sharePointVersion')), 'subscription'), 'WindowsServer', 'MicrosoftSharePointServer')]",
        "vmImageSKU": "[if(equals(toLower(parameters('sharePointVersion')), 'subscription'), '2022-datacenter-azure-edition', concat('sp', parameters('sharePointVersion')))]",
        "vmOSDiskName": "Disk-SP-OS",
        "vmDataDiskName": "Disk-SP-Data",
        "vmVmSize": "Standard_B4ms",
        "vmNicName": "NIC-(generalSettings).vmSPName-0",
        "vmPublicIPName": "PublicIP-(generalSettings).vmSPName",
        "vmPublicIPDnsName": "[toLower(replace(concat(parameters('dnsLabelPrefix'), '-', variables('generalSettings').vmSPName), '_', '-'))]",
        "shutdownResourceName": "shutdown-computevm-(generalSettings).vmSPName"
      },
      "vmFE": {
        "vmOSDiskName": "Disk-FE-OS",
        "vmDataDiskName": "Disk-FE-Data",
        "vmNicName": "NIC-(generalSettings).vmFEName-0",
        "vmPublicIPName": "PublicIP-(generalSettings).vmFEName",
        "vmPublicIPDnsName": "[toLower(replace(concat(parameters('dnsLabelPrefix'), '-', variables('generalSettings').vmFEName), '_', '-'))]",
        "shutdownResourceName": "shutdown-computevm-(generalSettings).vmFEName"
      },
      "dscConfigureDCVM": {
        "scriptFileUri": "[uri(parameters('_artifactsLocation'), concat('dsc/ConfigureDCVM.zip', parameters('_artifactsLocationSasToken')))]",
        "script": "ConfigureDCVM.ps1",
        "function": "ConfigureDCVM",
        "forceUpdateTag": "1.0"
      },
      "dscConfigureSQLVM": {
        "scriptFileUri": "[uri(parameters('_artifactsLocation'), concat('dsc/ConfigureSQLVM.zip', parameters('_artifactsLocationSasToken')))]",
        "script": "ConfigureSQLVM.ps1",
        "function": "ConfigureSQLVM",
        "forceUpdateTag": "1.0"
      },
      "dscConfigureSPVM": {
        "scriptFileUri": "[uri(parameters('_artifactsLocation'), concat('dsc/ConfigureSPVM.zip', parameters('_artifactsLocationSasToken')))]",
        "script": "ConfigureSPVM.ps1",
        "function": "ConfigureSPVM",
        "forceUpdateTag": "1.0"
      },
      "dscConfigureFEVM": {
        "scriptFileUri": "[uri(parameters('_artifactsLocation'), concat('dsc/ConfigureFEVM.zip', parameters('_artifactsLocationSasToken')))]",
        "script": "ConfigureFEVM.ps1",
        "function": "ConfigureFEVM",
        "forceUpdateTag": "1.0"
      },
      "vmSPDataDisk": [
        {
          "lun": 0,
          "name": "(vmSP).vmDataDiskName",
          "caching": "ReadWrite",
          "createOption": "Empty",
          "diskSizeGB": 0
        }
      ],
      "azureBastion": {
        "subnetPrefix": "10.0.4.0/24",
        "publicIPDnsName": "[toLower(replace(concat(parameters('dnsLabelPrefix'), '-', 'Bastion'), '_', '-'))]"
      }
    },
    "resources": [
      {
        "apiVersion": "2021-02-01",
        "type": "Microsoft.Network/networkSecurityGroups",
        "name": "(networkSettings).nsgSubnetDCName",
        "location": "[resourceGroup().location]",
        "tags": {
          "displayName": "(networkSettings).nsgSubnetDCName"
        },
        "properties": {
          "securityRules": "[if(equals(toLower(parameters('RDPTrafficAllowed')), 'no'), json('null'), variables('networkSettings').nsgRuleAllowIncomingTraffic)]"
        }
      },
      {
        "apiVersion": "2021-02-01",
        "type": "Microsoft.Network/networkSecurityGroups",
        "name": "(networkSettings).nsgSubnetSQLName",
        "location": "[resourceGroup().location]",
        "tags": {
          "displayName": "(networkSettings).nsgSubnetSQLName"
        },
        "properties": {
          "securityRules": "[if(equals(toLower(parameters('RDPTrafficAllowed')), 'no'), json('null'), variables('networkSettings').nsgRuleAllowIncomingTraffic)]"
        }
      },
      {
        "apiVersion": "2021-02-01",
        "type": "Microsoft.Network/networkSecurityGroups",
        "name": "(networkSettings).nsgSubnetSPName",
        "location": "[resourceGroup().location]",
        "tags": {
          "displayName": "(networkSettings).nsgSubnetSPName"
        },
        "properties": {
          "securityRules": "[if(equals(toLower(parameters('RDPTrafficAllowed')), 'no'), json('null'), variables('networkSettings').nsgRuleAllowIncomingTraffic)]"
        }
      },
      {
        "name": "(networkSettings).vNetPrivateName",
        "type": "Microsoft.Network/virtualNetworks",
        "location": "[resourceGroup().location]",
        "apiVersion": "2021-02-01",
        "dependsOn": [
          "Microsoft.Network/networkSecurityGroups/(networkSettings).nsgSubnetDCName",
          "Microsoft.Network/networkSecurityGroups/(networkSettings).nsgSubnetSQLName",
          "Microsoft.Network/networkSecurityGroups/(networkSettings).nsgSubnetSPName"
        ],
        "tags": {
          "displayName": "(networkSettings).vNetPrivateName"
        },
        "properties": {
          "addressSpace": {
            "addressPrefixes": [
              "(networkSettings).vNetPrivatePrefix"
            ]
          },
          "subnets": [
            {
              "name": "(networkSettings).subnetDCName",
              "properties": {
                "addressPrefix": "(networkSettings).subnetDCPrefix",
                "networkSecurityGroup": {
                  "id": "Microsoft.Network/networkSecurityGroups/(networkSettings).nsgSubnetDCName"
                }
              }
            },
            {
              "name": "(networkSettings).subnetSQLName",
              "properties": {
                "addressPrefix": "(networkSettings).subnetSQLPrefix",
                "networkSecurityGroup": {
                  "id": "Microsoft.Network/networkSecurityGroups/(networkSettings).nsgSubnetSQLName"
                }
              }
            },
            {
              "name": "(networkSettings).subnetSPName",
              "properties": {
                "addressPrefix": "(networkSettings).subnetSPPrefix",
                "networkSecurityGroup": {
                  "id": "Microsoft.Network/networkSecurityGroups/(networkSettings).nsgSubnetSPName"
                }
              }
            }
          ]
        }
      },
      {
        "condition": false,
        "name": "(vmDC).vmPublicIPName",
        "type": "Microsoft.Network/publicIPAddresses",
        "location": "[resourceGroup().location]",
        "apiVersion": "2021-02-01",
        "tags": {
          "displayName": "(vmDC).vmPublicIPName"
        },
        "sku": {
          "name": "Basic",
          "tier": "Regional"
        },
        "properties": {
          "publicIPAllocationMethod": "Dynamic",
          "dnsSettings": {
            "domainNameLabel": "(vmDC).vmPublicIPDnsName"
          }
        }
      },
      {
        "name": "(vmDC).vmNicName",
        "type": "Microsoft.Network/networkInterfaces",
        "location": "[resourceGroup().location]",
        "apiVersion": "2021-02-01",
        "dependsOn": [
          "Microsoft.Network/virtualNetworks/(networkSettings).vNetPrivateName",
          "Microsoft.Network/publicIPAddresses/(vmDC).vmPublicIPName"
        ],
        "tags": {
          "displayName": "(vmDC).vmNicName"
        },
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipconfig1",
              "properties": {
                "privateIPAllocationMethod": "Static",
                "privateIPAddress": "(networkSettings).dcPrivateIPAddress",
                "subnet": {
                  "id": "Microsoft.Network/virtualNetworks/subnets/(networkSettings).vNetPrivateName/(networkSettings).subnetDCName"
                },
                "publicIPAddress": "[if(parameters('addPublicIPAddressToEachVM'), variables('networkSettings').vmDCPublicIPNicAssociation, json('null'))]"
              }
            }
          ]
        }
      },
      {
        "name": "(generalSettings).vmDCName",
        "type": "Microsoft.Compute/virtualMachines",
        "location": "[resourceGroup().location]",
        "apiVersion": "2021-04-01",
        "dependsOn": [
          "Microsoft.Network/networkInterfaces/(vmDC).vmNicName"
        ],
        "tags": {
          "displayName": "(generalSettings).vmDCName"
        },
        "properties": {
          "hardwareProfile": {
            "vmSize": "(vmDC).vmVmSize"
          },
          "osProfile": {
            "computerName": "(generalSettings).vmDCName",
            "adminUsername": "GEN-UNIQUE",
            "adminPassword": "GEN-PASSWORD",
            "windowsConfiguration": {
              "timeZone": "Romance Standard Time",
              "enableAutomaticUpdates": true,
              "provisionVMAgent": true,
              "patchSettings": {
                "patchMode": "[if(parameters('enableAutomaticUpdates'), 'AutomaticByOS', 'Manual')]",
                "assessmentMode": "ImageDefault"
              }
            }
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "(vmDC).vmImagePublisher",
              "offer": "(vmDC).vmImageOffer",
              "sku": "(vmDC).vmImageSKU",
              "version": "latest"
            },
            "osDisk": {
              "name": "(vmDC).vmOSDiskName",
              "caching": "ReadWrite",
              "osType": "Windows",
              "createOption": "FromImage",
              "diskSizeGB": 32,
              "managedDisk": {
                "storageAccountType": "StandardSSD_LRS"
              }
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "Microsoft.Network/networkInterfaces/(vmDC).vmNicName"
              }
            ]
          },
          "licenseType": "[if(parameters('enableHybridBenefitServerLicenses'), 'Windows_Server', json('null'))]"
        },
        "resources": [
          {
            "name": "ConfigureDCVM",
            "type": "extensions",
            "location": "[resourceGroup().location]",
            "apiVersion": "2021-04-01",
            "dependsOn": [
              "Microsoft.Compute/virtualMachines/(generalSettings).vmDCName"
            ],
            "tags": {
              "displayName": "ConfigureDCVM"
            },
            "properties": {
              "publisher": "Microsoft.Powershell",
              "type": "DSC",
              "typeHandlerVersion": "2.9",
              "autoUpgradeMinorVersion": true,
              "forceUpdateTag": "(dscConfigureDCVM).forceUpdateTag",
              "settings": {
                "wmfVersion": "latest",
                "configuration": {
                  "url": "(dscConfigureDCVM).scriptFileUri",
                  "script": "(dscConfigureDCVM).script",
                  "function": "(dscConfigureDCVM).function"
                },
                "configurationArguments": {
                  "domainFQDN": "contoso.local",
                  "PrivateIP": "(networkSettings).dcPrivateIPAddress"
                },
                "privacy": {
                  "dataCollection": "enable"
                }
              },
              "protectedSettings": {
                "configurationArguments": {
                  "AdminCreds": {
                    "UserName": "GEN-UNIQUE",
                    "Password": "GEN-PASSWORD"
                  },
                  "AdfsSvcCreds": {
                    "UserName": "(generalSettings).adfsSvcUserName",
                    "Password": "(generalSettings).adfsSvcPassword"
                  }
                }
              }
            }
          }
        ]
      },
      {
        "condition": false,
        "name": "(vmSQL).vmPublicIPName",
        "type": "Microsoft.Network/publicIPAddresses",
        "location": "[resourceGroup().location]",
        "apiVersion": "2021-02-01",
        "tags": {
          "displayName": "(vmSQL).vmPublicIPName"
        },
        "sku": {
          "name": "Basic",
          "tier": "Regional"
        },
        "properties": {
          "publicIPAllocationMethod": "Dynamic",
          "dnsSettings": {
            "domainNameLabel": "(vmSQL).vmPublicIPDnsName"
          }
        }
      },
      {
        "name": "(vmSQL).vmNicName",
        "type": "Microsoft.Network/networkInterfaces",
        "location": "[resourceGroup().location]",
        "apiVersion": "2021-02-01",
        "dependsOn": [
          "Microsoft.Network/virtualNetworks/(networkSettings).vNetPrivateName",
          "Microsoft.Network/publicIPAddresses/(vmSQL).vmPublicIPName"
        ],
        "tags": {
          "displayName": "(vmSQL).vmNicName"
        },
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipconfig1",
              "properties": {
                "privateIPAllocationMethod": "Dynamic",
                "subnet": {
                  "id": "Microsoft.Network/virtualNetworks/subnets/(networkSettings).vNetPrivateName/(networkSettings).subnetSQLName"
                },
                "publicIPAddress": "[if(parameters('addPublicIPAddressToEachVM'), variables('networkSettings').vmSQLPublicIPNicAssociation, json('null'))]"
              }
            }
          ]
        }
      },
      {
        "name": "(generalSettings).vmSQLName",
        "type": "Microsoft.Compute/virtualMachines",
        "location": "[resourceGroup().location]",
        "apiVersion": "2021-04-01",
        "dependsOn": [
          "Microsoft.Network/networkInterfaces/(vmSQL).vmNicName"
        ],
        "tags": {
          "displayName": "(generalSettings).vmSQLName"
        },
        "properties": {
          "hardwareProfile": {
            "vmSize": "(vmSQL).vmVmSize"
          },
          "osProfile": {
            "computerName": "(generalSettings).vmSQLName",
            "adminUsername": "(generalSettings).localAdminUserName",
            "adminPassword": "GEN-PASSWORD",
            "windowsConfiguration": {
              "timeZone": "Romance Standard Time",
              "enableAutomaticUpdates": true,
              "provisionVMAgent": true,
              "patchSettings": {
                "patchMode": "[if(parameters('enableAutomaticUpdates'), 'AutomaticByOS', 'Manual')]",
                "assessmentMode": "ImageDefault"
              }
            }
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "(vmSQL).vmImagePublisher",
              "offer": "(vmSQL).vmImageOffer",
              "sku": "(vmSQL).vmImageSKU",
              "version": "latest"
            },
            "osDisk": {
              "name": "(vmSQL).vmOSDiskName",
              "caching": "ReadWrite",
              "osType": "Windows",
              "createOption": "FromImage",
              "diskSizeGB": 128,
              "managedDisk": {
                "storageAccountType": "StandardSSD_LRS"
              }
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "Microsoft.Network/networkInterfaces/(vmSQL).vmNicName"
              }
            ]
          },
          "licenseType": "[if(parameters('enableHybridBenefitServerLicenses'), 'Windows_Server', json('null'))]"
        },
        "resources": []
      },
      {
        "condition": false,
        "name": "(vmSP).vmPublicIPName",
        "type": "Microsoft.Network/publicIPAddresses",
        "location": "[resourceGroup().location]",
        "apiVersion": "2021-02-01",
        "tags": {
          "displayName": "(vmSP).vmPublicIPName"
        },
        "sku": {
          "name": "Basic",
          "tier": "Regional"
        },
        "properties": {
          "publicIPAllocationMethod": "Dynamic",
          "dnsSettings": {
            "domainNameLabel": "(vmSP).vmPublicIPDnsName"
          }
        }
      },
      {
        "name": "(vmSP).vmNicName",
        "type": "Microsoft.Network/networkInterfaces",
        "location": "[resourceGroup().location]",
        "apiVersion": "2021-02-01",
        "dependsOn": [
          "Microsoft.Network/virtualNetworks/(networkSettings).vNetPrivateName",
          "Microsoft.Network/publicIPAddresses/(vmSP).vmPublicIPName"
        ],
        "tags": {
          "displayName": "(vmSP).vmNicName"
        },
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipconfig1",
              "properties": {
                "privateIPAllocationMethod": "Dynamic",
                "subnet": {
                  "id": "Microsoft.Network/virtualNetworks/subnets/(networkSettings).vNetPrivateName/(networkSettings).subnetSPName"
                },
                "publicIPAddress": "[if(parameters('addPublicIPAddressToEachVM'), variables('networkSettings').vmSPPublicIPNicAssociation, json('null'))]"
              }
            }
          ]
        }
      },
      {
        "name": "(generalSettings).vmSPName",
        "type": "Microsoft.Compute/virtualMachines",
        "location": "[resourceGroup().location]",
        "apiVersion": "2021-04-01",
        "dependsOn": [
          "Microsoft.Network/networkInterfaces/(vmSP).vmNicName"
        ],
        "tags": {
          "displayName": "(generalSettings).vmSPName"
        },
        "properties": {
          "hardwareProfile": {
            "vmSize": "(vmSP).vmVmSize"
          },
          "osProfile": {
            "computerName": "(generalSettings).vmSPName",
            "adminUsername": "(generalSettings).localAdminUserName",
            "adminPassword": "GEN-PASSWORD",
            "windowsConfiguration": {
              "timeZone": "Romance Standard Time",
              "enableAutomaticUpdates": true,
              "provisionVMAgent": true,
              "patchSettings": {
                "patchMode": "[if(parameters('enableAutomaticUpdates'), 'AutomaticByOS', 'Manual')]",
                "assessmentMode": "ImageDefault"
              }
            }
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "(vmSP).vmImagePublisher",
              "offer": "(vmSP).vmImageOffer",
              "sku": "(vmSP).vmImageSKU",
              "version": "latest"
            },
            "osDisk": {
              "name": "(vmSP).vmOSDiskName",
              "caching": "ReadWrite",
              "osType": "Windows",
              "createOption": "FromImage",
              "diskSizeGB": 128,
              "managedDisk": {
                "storageAccountType": "StandardSSD_LRS"
              }
            },
            "dataDisks": "[if(equals(parameters('sharePointDataDiskSize'), 0), json('null'), variables('vmSPDataDisk'))]"
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "Microsoft.Network/networkInterfaces/(vmSP).vmNicName"
              }
            ]
          },
          "licenseType": "[if(parameters('enableHybridBenefitServerLicenses'), 'Windows_Server', json('null'))]"
        },
        "resources": []
      },
      {
        "name": "(generalSettings).vmSQLName/ConfigureSQLVM",
        "type": "Microsoft.Compute/virtualMachines/extensions",
        "location": "[resourceGroup().location]",
        "apiVersion": "2021-04-01",
        "dependsOn": [
          "Microsoft.Compute/virtualMachines/(generalSettings).vmSQLName"
        ],
        "tags": {
          "displayName": "(generalSettings).vmSQLName/ConfigureSQLVM"
        },
        "properties": {
          "publisher": "Microsoft.Powershell",
          "type": "DSC",
          "typeHandlerVersion": "2.9",
          "autoUpgradeMinorVersion": true,
          "forceUpdateTag": "(dscConfigureSQLVM).forceUpdateTag",
          "settings": {
            "wmfVersion": "latest",
            "configuration": {
              "url": "(dscConfigureSQLVM).scriptFileUri",
              "script": "(dscConfigureSQLVM).script",
              "function": "(dscConfigureSQLVM).function"
            },
            "configurationArguments": {
              "DNSServer": "(networkSettings).dcPrivateIPAddress",
              "DomainFQDN": "contoso.local"
            },
            "privacy": {
              "dataCollection": "enable"
            }
          },
          "protectedSettings": {
            "configurationArguments": {
              "DomainAdminCreds": {
                "UserName": "GEN-UNIQUE",
                "Password": "GEN-PASSWORD"
              },
              "SqlSvcCreds": {
                "UserName": "(generalSettings).sqlSvcUserName",
                "Password": "(generalSettings).sqlSvcPassword"
              },
              "SPSetupCreds": {
                "UserName": "(generalSettings).spSetupUserName",
                "Password": "(generalSettings).spSetupPassword"
              }
            }
          }
        }
      },
      {
        "name": "(generalSettings).vmSPName/ConfigureSPVM",
        "type": "Microsoft.Compute/virtualMachines/extensions",
        "location": "[resourceGroup().location]",
        "apiVersion": "2021-04-01",
        "dependsOn": [
          "Microsoft.Compute/virtualMachines/(generalSettings).vmSPName"
        ],
        "tags": {
          "displayName": "(generalSettings).vmSPName/ConfigureSPVM"
        },
        "properties": {
          "publisher": "Microsoft.Powershell",
          "type": "DSC",
          "typeHandlerVersion": "2.9",
          "autoUpgradeMinorVersion": true,
          "forceUpdateTag": "(dscConfigureSPVM).forceUpdateTag",
          "settings": {
            "wmfVersion": "latest",
            "configuration": {
              "url": "(dscConfigureSPVM).scriptFileUri",
              "script": "(dscConfigureSPVM).script",
              "function": "(dscConfigureSPVM).function"
            },
            "configurationArguments": {
              "DNSServer": "(networkSettings).dcPrivateIPAddress",
              "DomainFQDN": "contoso.local",
              "DCName": "(generalSettings).vmDCName",
              "SQLName": "(generalSettings).vmSQLName",
              "SQLAlias": "(generalSettings).sqlAlias",
              "SharePointVersion": "Subscription",
              "EnableAnalysis": "(generalSettings).enableAnalysis"
            },
            "privacy": {
              "dataCollection": "enable"
            }
          },
          "protectedSettings": {
            "configurationArguments": {
              "DomainAdminCreds": {
                "UserName": "GEN-UNIQUE",
                "Password": "GEN-PASSWORD"
              },
              "SPSetupCreds": {
                "UserName": "(generalSettings).spSetupUserName",
                "Password": "(generalSettings).spSetupPassword"
              },
              "SPFarmCreds": {
                "UserName": "(generalSettings).spFarmUserName",
                "Password": "(generalSettings).spFarmPassword"
              },
              "SPSvcCreds": {
                "UserName": "(generalSettings).spSvcUserName",
                "Password": "(generalSettings).spSvcPassword"
              },
              "SPAppPoolCreds": {
                "UserName": "(generalSettings).spAppPoolUserName",
                "Password": "(generalSettings).spAppPoolPassword"
              },
              "SPPassphraseCreds": {
                "UserName": "Passphrase",
                "Password": "(generalSettings).spPassphrase"
              },
              "SPSuperUserCreds": {
                "UserName": "(generalSettings).spSuperUserName",
                "Password": "GEN-PASSWORD"
              },
              "SPSuperReaderCreds": {
                "UserName": "(generalSettings).spSuperReaderName",
                "Password": "GEN-PASSWORD"
              }
            }
          }
        }
      },
      {
        "condition": "[and(greaterOrEquals(parameters('numberOfAdditionalFrontEnd'), 1), equals(parameters('addPublicIPAddressToEachVM'), true()))]",
        "name": "(vmFE).vmPublicIPName-copyIndex()",
        "type": "Microsoft.Network/publicIPAddresses",
        "location": "[resourceGroup().location]",
        "apiVersion": "2021-02-01",
        "tags": {
          "displayName": "(vmFE).vmPublicIPName-copyIndex()"
        },
        "copy": {
          "name": "frontendPublicIPAddresses",
          "count": 0
        },
        "sku": {
          "name": "Basic",
          "tier": "Regional"
        },
        "properties": {
          "publicIPAllocationMethod": "Dynamic",
          "dnsSettings": {
            "domainNameLabel": "(vmFE).vmPublicIPDnsName-copyIndex()"
          }
        }
      },
      {
        "condition": "[greaterOrEquals(parameters('numberOfAdditionalFrontEnd'), 1)]",
        "name": "(vmFE).vmNicName-copyIndex()",
        "type": "Microsoft.Network/networkInterfaces",
        "location": "[resourceGroup().location]",
        "apiVersion": "2021-02-01",
        "dependsOn": [
          "Microsoft.Network/virtualNetworks/(networkSettings).vNetPrivateName",
          "frontendPublicIPAddresses"
        ],
        "tags": {
          "displayName": "(vmFE).vmNicName-copyIndex()"
        },
        "copy": {
          "name": "frontendNetworkInterfaces",
          "count": 0
        },
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipconfig1",
              "properties": {
                "privateIPAllocationMethod": "Dynamic",
                "subnet": {
                  "id": "Microsoft.Network/virtualNetworks/subnets/(networkSettings).vNetPrivateName/(networkSettings).subnetSPName"
                },
                "publicIPAddress": "[if(parameters('addPublicIPAddressToEachVM'), json(concat('{\"id\": \"', resourceId('Microsoft.Network/publicIPAddresses', concat(variables('vmFE').vmPublicIPName, '-', copyIndex())), '\" }')), json('null'))]"
              }
            }
          ]
        }
      },
      {
        "condition": "[greaterOrEquals(parameters('numberOfAdditionalFrontEnd'), 1)]",
        "name": "(generalSettings).vmFEName-copyIndex()",
        "type": "Microsoft.Compute/virtualMachines",
        "location": "[resourceGroup().location]",
        "apiVersion": "2021-04-01",
        "dependsOn": [
          "frontendNetworkInterfaces"
        ],
        "tags": {
          "displayName": "(generalSettings).vmFEName-copyIndex()"
        },
        "copy": {
          "name": "frontendVirtualMachines",
          "count": 0
        },
        "properties": {
          "hardwareProfile": {
            "vmSize": "(vmSP).vmVmSize"
          },
          "osProfile": {
            "computerName": "(generalSettings).vmFEName-copyIndex()",
            "adminUsername": "(generalSettings).localAdminUserName",
            "adminPassword": "GEN-PASSWORD",
            "windowsConfiguration": {
              "timeZone": "Romance Standard Time",
              "enableAutomaticUpdates": true,
              "provisionVMAgent": true,
              "patchSettings": {
                "patchMode": "[if(parameters('enableAutomaticUpdates'), 'AutomaticByOS', 'Manual')]",
                "assessmentMode": "ImageDefault"
              }
            }
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "(vmSP).vmImagePublisher",
              "offer": "(vmSP).vmImageOffer",
              "sku": "(vmSP).vmImageSKU",
              "version": "latest"
            },
            "osDisk": {
              "name": "(vmFE).vmOSDiskName-copyIndex()",
              "caching": "ReadWrite",
              "osType": "Windows",
              "createOption": "FromImage",
              "diskSizeGB": 128,
              "managedDisk": {
                "storageAccountType": "StandardSSD_LRS"
              }
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "Microsoft.Network/networkInterfaces/(vmFE).vmNicName-copyIndex()"
              }
            ]
          },
          "licenseType": "[if(parameters('enableHybridBenefitServerLicenses'), 'Windows_Server', json('null'))]"
        },
        "resources": []
      },
      {
        "condition": "[greaterOrEquals(parameters('numberOfAdditionalFrontEnd'), 1)]",
        "name": "(generalSettings).vmFEName-copyIndex()/ConfigureFEVM",
        "type": "Microsoft.Compute/virtualMachines/extensions",
        "location": "[resourceGroup().location]",
        "apiVersion": "2021-04-01",
        "dependsOn": [
          "frontendVirtualMachines"
        ],
        "tags": {
          "displayName": "(generalSettings).vmFEName-copyIndex()/ConfigureFEVM"
        },
        "copy": {
          "name": "frontendVirtualMachineExtensions",
          "count": 0
        },
        "properties": {
          "publisher": "Microsoft.Powershell",
          "type": "DSC",
          "typeHandlerVersion": "2.9",
          "autoUpgradeMinorVersion": true,
          "forceUpdateTag": "(dscConfigureFEVM).forceUpdateTag",
          "settings": {
            "wmfVersion": "latest",
            "configuration": {
              "url": "(dscConfigureFEVM).scriptFileUri",
              "script": "(dscConfigureFEVM).script",
              "function": "(dscConfigureFEVM).function"
            },
            "configurationArguments": {
              "DNSServer": "(networkSettings).dcPrivateIPAddress",
              "DomainFQDN": "contoso.local",
              "DCName": "(generalSettings).vmDCName",
              "SQLName": "(generalSettings).vmSQLName",
              "SQLAlias": "(generalSettings).sqlAlias",
              "SharePointVersion": "Subscription",
              "EnableAnalysis": "(generalSettings).enableAnalysis"
            },
            "privacy": {
              "dataCollection": "enable"
            }
          },
          "protectedSettings": {
            "configurationArguments": {
              "DomainAdminCreds": {
                "UserName": "GEN-UNIQUE",
                "Password": "GEN-PASSWORD"
              },
              "SPSetupCreds": {
                "UserName": "(generalSettings).spSetupUserName",
                "Password": "(generalSettings).spSetupPassword"
              },
              "SPFarmCreds": {
                "UserName": "(generalSettings).spFarmUserName",
                "Password": "(generalSettings).spFarmPassword"
              },
              "SPPassphraseCreds": {
                "UserName": "Passphrase",
                "Password": "(generalSettings).spPassphrase"
              }
            }
          }
        }
      },
      {
        "condition": "[not(equals(parameters('vmsAutoShutdownTime'), '9999'))]",
        "type": "Microsoft.DevTestLab/schedules",
        "name": "(vmDC).shutdownResourceName",
        "apiVersion": "2018-09-15",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "Microsoft.Compute/virtualMachines/(generalSettings).vmDCName"
        ],
        "properties": {
          "status": "Enabled",
          "taskType": "ComputeVmShutdownTask",
          "dailyRecurrence": {
            "time": "1900"
          },
          "timeZoneId": "Romance Standard Time",
          "notificationSettings": {
            "status": "Disabled",
            "timeInMinutes": 30
          },
          "targetResourceId": "Microsoft.Compute/virtualMachines/(generalSettings).vmDCName"
        }
      },
      {
        "condition": "[not(equals(parameters('vmsAutoShutdownTime'), '9999'))]",
        "type": "Microsoft.DevTestLab/schedules",
        "name": "(vmSQL).shutdownResourceName",
        "apiVersion": "2018-09-15",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "Microsoft.Compute/virtualMachines/(generalSettings).vmSQLName"
        ],
        "properties": {
          "status": "Enabled",
          "taskType": "ComputeVmShutdownTask",
          "dailyRecurrence": {
            "time": "1900"
          },
          "timeZoneId": "Romance Standard Time",
          "notificationSettings": {
            "status": "Disabled",
            "timeInMinutes": 30
          },
          "targetResourceId": "Microsoft.Compute/virtualMachines/(generalSettings).vmSQLName"
        }
      },
      {
        "condition": "[not(equals(parameters('vmsAutoShutdownTime'), '9999'))]",
        "type": "Microsoft.DevTestLab/schedules",
        "name": "(vmSP).shutdownResourceName",
        "apiVersion": "2018-09-15",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "Microsoft.Compute/virtualMachines/(generalSettings).vmSPName"
        ],
        "properties": {
          "status": "Enabled",
          "taskType": "ComputeVmShutdownTask",
          "dailyRecurrence": {
            "time": "1900"
          },
          "timeZoneId": "Romance Standard Time",
          "notificationSettings": {
            "status": "Disabled",
            "timeInMinutes": 30
          },
          "targetResourceId": "Microsoft.Compute/virtualMachines/(generalSettings).vmSPName"
        }
      },
      {
        "condition": "[and(greaterOrEquals(parameters('numberOfAdditionalFrontEnd'), 1), not(equals(parameters('vmsAutoShutdownTime'), '9999')))]",
        "type": "Microsoft.DevTestLab/schedules",
        "name": "(vmFE).shutdownResourceName-copyIndex()",
        "apiVersion": "2018-09-15",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "frontendVirtualMachines"
        ],
        "copy": {
          "name": "frontendAutoShutdowns",
          "count": 0
        },
        "properties": {
          "status": "Enabled",
          "taskType": "ComputeVmShutdownTask",
          "dailyRecurrence": {
            "time": "1900"
          },
          "timeZoneId": "Romance Standard Time",
          "notificationSettings": {
            "status": "Disabled",
            "timeInMinutes": 30
          },
          "targetResourceId": "Microsoft.Compute/virtualMachines/(generalSettings).vmFEName-copyIndex()"
        }
      },
      {
        "condition": false,
        "apiVersion": "2021-02-01",
        "type": "Microsoft.Network/networkSecurityGroups",
        "name": "NSG-Subnet-AzureBastion",
        "location": "[resourceGroup().location]",
        "tags": {
          "displayName": "NSG-Subnet-AzureBastion"
        },
        "properties": {
          "securityRules": [
            {
              "name": "allow-443-internet",
              "properties": {
                "description": "Allow 443 Internet",
                "direction": "Inbound",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "443",
                "sourceAddressPrefix": "Internet",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 120
              }
            },
            {
              "name": "allow-443-gatewaymanager",
              "properties": {
                "description": "Allow 443 GatewayManager ",
                "direction": "Inbound",
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "443",
                "sourceAddressPrefix": "GatewayManager",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 130
              }
            },
            {
              "name": "allow-rdp-outbound",
              "properties": {
                "description": "Allow RDP Outbound ",
                "direction": "Outbound",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "3389",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "VirtualNetwork",
                "access": "Allow",
                "priority": 120
              }
            },
            {
              "name": "allow-ssh-outbound",
              "properties": {
                "description": "Allow SSH Outbound",
                "direction": "Outbound",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "22",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "VirtualNetwork",
                "access": "Allow",
                "priority": 121
              }
            },
            {
              "name": "allow-azurecloud-outbound",
              "properties": {
                "description": "Allow AzureCloud Outbound ",
                "direction": "Outbound",
                "protocol": "TCP",
                "sourcePortRange": "*",
                "destinationPortRange": "443",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "AzureCloud",
                "access": "Allow",
                "priority": 130
              }
            }
          ]
        }
      },
      {
        "condition": false,
        "type": "Microsoft.Network/virtualNetworks/subnets",
        "name": "(networkSettings).vNetPrivateName/AzureBastionSubnet",
        "apiVersion": "2021-02-01",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "Microsoft.Network/virtualNetworks/(networkSettings).vNetPrivateName",
          "Microsoft.Network/networkSecurityGroups/NSG-Subnet-AzureBastion"
        ],
        "properties": {
          "addressPrefix": "(azureBastion).subnetPrefix",
          "networkSecurityGroup": {
            "id": "Microsoft.Network/networkSecurityGroups/NSG-Subnet-AzureBastion"
          }
        }
      },
      {
        "condition": false,
        "name": "PublicIP-Bastion",
        "type": "Microsoft.Network/publicIPAddresses",
        "location": "[resourceGroup().location]",
        "apiVersion": "2021-02-01",
        "tags": {
          "displayName": "PublicIP-Bastion"
        },
        "sku": {
          "name": "Standard",
          "tier": "Regional"
        },
        "properties": {
          "publicIPAllocationMethod": "Static",
          "dnsSettings": {
            "domainNameLabel": "(azureBastion).publicIPDnsName"
          }
        }
      },
      {
        "condition": false,
        "name": "Bastion",
        "type": "Microsoft.Network/bastionHosts",
        "location": "[resourceGroup().location]",
        "apiVersion": "2021-02-01",
        "dependsOn": [
          "Microsoft.Network/publicIPAddresses/PublicIP-Bastion",
          "Microsoft.Network/virtualNetworks/subnets/(networkSettings).vNetPrivateName/AzureBastionSubnet"
        ],
        "properties": {
          "ipConfigurations": [
            {
              "name": "IpConf",
              "properties": {
                "privateIPAllocationMethod": "Dynamic",
                "publicIPAddress": {
                  "id": "Microsoft.Network/publicIPAddresses/PublicIP-Bastion"
                },
                "subnet": {
                  "id": "Microsoft.Network/virtualNetworks/subnets/(networkSettings).vNetPrivateName/AzureBastionSubnet"
                }
              }
            }
          ]
        }
      }
    ],
    "outputs": {
      "publicIPAddressSP": {
        "condition": "[equals(parameters('addPublicIPAddressToEachVM'), true())]",
        "type": "string",
        "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', variables('vmSP').vmPublicIPName)).dnsSettings.fqdn]"
      },
      "publicIPAddressFEs": {
        "condition": "[and(greaterOrEquals(parameters('numberOfAdditionalFrontEnd'), 1), equals(parameters('addPublicIPAddressToEachVM'), true()))]",
        "type": "array",
        "copy": {
          "count": "[parameters('numberOfAdditionalFrontEnd')]",
          "input": "[reference(resourceId('Microsoft.Network/publicIPAddresses', concat(variables('vmFE').vmPublicIPName, '-', copyIndex()))).dnsSettings.fqdn]"
        }
      },
      "publicIPAddressSQL": {
        "condition": "[equals(parameters('addPublicIPAddressToEachVM'), true())]",
        "type": "string",
        "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', variables('vmSQL').vmPublicIPName)).dnsSettings.fqdn]"
      },
      "publicIPAddressDC": {
        "condition": "[equals(parameters('addPublicIPAddressToEachVM'), true())]",
        "type": "string",
        "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', variables('vmDC').vmPublicIPName)).dnsSettings.fqdn]"
      },
      "domainAdminAccount": {
        "type": "string",
        "value": "[concat(substring(parameters('domainFQDN'), 0, indexOf(parameters('domainFQDN'), '.')), '\\', parameters('adminUserName'))]"
      },
      "domainAdminAccountFormatForBastion": {
        "type": "string",
        "value": "[concat(parameters('adminUserName'), '@', parameters('domainFQDN'))]"
      },
      "localAdminAccount": {
        "type": "string",
        "value": "[variables('generalSettings').localAdminUserName]"
      }
    },
    "\uff04schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#"
  }
}