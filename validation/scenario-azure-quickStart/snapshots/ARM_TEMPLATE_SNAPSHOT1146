{
  "structure": "filesystem",
  "error": null,
  "reference": "master",
  "contentType": "json",
  "source": "gitConnectorAzureQuickStart",
  "paths": [
    "/quickstarts/microsoft.compute/vmss-automatic-repairs-slb-health-probe/azuredeploy.json",
    "/quickstarts/microsoft.compute/vmss-automatic-repairs-slb-health-probe/azuredeploy.parameters.json"
  ],
  "timestamp": 1642962904796,
  "queryuser": null,
  "checksum": "99914b932bd37a50b983c5e7c90ae93b",
  "node": {
    "masterSnapshotId": "ARM_TEMPLATE_SNAPSHOT",
    "type": "arm",
    "collection": "armtemplate",
    "paths": [
      "/quickstarts/microsoft.compute/vmss-automatic-repairs-slb-health-probe/azuredeploy.json",
      "/quickstarts/microsoft.compute/vmss-automatic-repairs-slb-health-probe/azuredeploy.parameters.json"
    ],
    "snapshotId": "ARM_TEMPLATE_SNAPSHOT1146",
    "status": "active",
    "validate": true,
    "resourceTypes": [
      "microsoft.network/virtualnetworks",
      "microsoft.network/loadbalancers",
      "microsoft.compute/virtualmachinescalesets"
    ]
  },
  "snapshotId": "ARM_TEMPLATE_SNAPSHOT1146",
  "collection": "armtemplate",
  "json": {
    "contentVersion": "1.0.0.0",
    "parameters": {
      "vmSku": {
        "type": "string",
        "defaultValue": "Standard_D2s_v3",
        "metadata": {
          "description": "Size of VMs in the VM Scale Set."
        }
      },
      "imagePublisher": {
        "type": "string",
        "defaultValue": "Canonical"
      },
      "imageOffer": {
        "type": "string",
        "defaultValue": "UbuntuServer"
      },
      "imageSku": {
        "type": "string",
        "defaultValue": "18.04-LTS"
      },
      "imageOSVersion": {
        "type": "string",
        "defaultValue": "latest"
      },
      "vmssName": {
        "type": "string",
        "metadata": {
          "description": "String used as a base for naming resources. Must be 3-61 characters in length and globally unique across Azure. A hash is prepended to this string for some resources, and resource-specific information is appended."
        },
        "maxLength": 61,
        "value": "GEN-UNIQUE-32"
      },
      "instanceCount": {
        "type": "int",
        "defaultValue": 2,
        "metadata": {
          "description": "Number of VM instances (100 or less)."
        },
        "maxValue": 100,
        "minValue": 2
      },
      "adminUsername": {
        "type": "string",
        "metadata": {
          "description": "Admin username on all VMs."
        },
        "value": "GEN-UNIQUE"
      },
      "adminPassword": {
        "type": "securestring",
        "metadata": {
          "description": "Admin password on all VMs."
        },
        "value": "GEN-PASSWORD"
      },
      "healthProbePort": {
        "type": "int",
        "defaultValue": 80,
        "metadata": {
          "description": "Local http port on VM at which health extension to probe"
        }
      },
      "healthProbeProtocol": {
        "type": "string",
        "defaultValue": "http",
        "metadata": {
          "description": "Protocol used by health extension to probe app health"
        }
      },
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Location for the VM scale set"
        }
      },
      "_artifactsLocation": {
        "type": "string",
        "metadata": {
          "description": "The base URI where artifacts required by this template are located including a trailing '/'"
        },
        "defaultValue": "[deployment().properties.templateLink.uri]"
      },
      "_artifactsLocationSasToken": {
        "type": "securestring",
        "metadata": {
          "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated. Use the defaultValue if the staging location is not secured."
        },
        "defaultValue": ""
      }
    },
    "variables": {
      "addressPrefix": "10.0.0.0/16",
      "subnetName": "Subnet",
      "subnetPrefix": "10.0.0.0/24",
      "namingInfix": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]",
      "virtualNetworkName": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]vnet",
      "lbName": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]lb",
      "bepoolName": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]lbbepool",
      "fepoolName": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]lbfepool",
      "feIpConfigName": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]lbfepoolIpConfig",
      "probeName": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]lbprobe",
      "bepoolID": "Microsoft.Network/loadBalancers/backendAddressPools//[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]lb/[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]lbbepool",
      "feIpConfigId": "Microsoft.Network/loadBalancers/frontendIPConfigurations//[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]lb/[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]lbfepoolIpConfig",
      "platformImageReference": {
        "publisher": "Canonical",
        "offer": "UbuntuServer",
        "sku": "18.04-LTS",
        "version": "latest"
      },
      "imageReference": {
        "publisher": "Canonical",
        "offer": "UbuntuServer",
        "sku": "18.04-LTS",
        "version": "latest"
      }
    },
    "resources": [
      {
        "apiVersion": "2019-12-01",
        "type": "Microsoft.Network/virtualNetworks",
        "name": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]vnet",
        "location": "[resourceGroup().location]",
        "properties": {
          "addressSpace": {
            "addressPrefixes": [
              "10.0.0.0/16"
            ]
          },
          "subnets": [
            {
              "name": "Subnet",
              "properties": {
                "addressPrefix": "10.0.0.0/24"
              }
            }
          ]
        }
      },
      {
        "type": "Microsoft.Network/loadBalancers",
        "name": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]lb",
        "location": "[resourceGroup().location]",
        "sku": {
          "name": "Standard"
        },
        "apiVersion": "2019-12-01",
        "dependsOn": [
          "Microsoft.Network/virtualNetworks//[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]vnet"
        ],
        "properties": {
          "frontendIPConfigurations": [
            {
              "name": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]lbfepoolIpConfig",
              "properties": {
                "subnet": {
                  "id": "Microsoft.Network/virtualNetworks/subnets/[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]vnet/Subnet"
                }
              }
            }
          ],
          "backendAddressPools": [
            {
              "name": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]lbbepool"
            }
          ],
          "loadBalancingRules": [
            {
              "name": "ProbeRule",
              "properties": {
                "loadDistribution": "Default",
                "frontendIPConfiguration": {
                  "id": "Microsoft.Network/loadBalancers/frontendIPConfigurations//[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]lb/[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]lbfepoolIpConfig"
                },
                "backendAddressPool": {
                  "id": "Microsoft.Network/loadBalancers/backendAddressPools//[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]lb/[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]lbbepool"
                },
                "protocol": "Tcp",
                "frontendPort": 80,
                "backendPort": 80,
                "enableFloatingIP": false,
                "idleTimeoutInMinutes": 5,
                "probe": {
                  "id": "Microsoft.Network/loadBalancers/probes//[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]lb/[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]lbprobe"
                }
              }
            }
          ],
          "probes": [
            {
              "name": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]lbprobe",
              "properties": {
                "protocol": "http",
                "port": 80,
                "requestPath": "/",
                "intervalInSeconds": 5,
                "numberOfProbes": 2
              }
            }
          ]
        }
      },
      {
        "type": "Microsoft.Compute/virtualMachineScaleSets",
        "apiVersion": "2019-03-01",
        "name": "GEN-UNIQUE-32",
        "location": "[resourceGroup().location]",
        "tags": {
          "vmsstag": "automaticrepairs"
        },
        "dependsOn": [
          "Microsoft.Network/loadBalancers//[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]lb",
          "Microsoft.Network/virtualNetworks//[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]vnet"
        ],
        "sku": {
          "name": "Standard_D2s_v3",
          "tier": "Standard",
          "capacity": 2
        },
        "properties": {
          "upgradePolicy": {
            "mode": "Manual"
          },
          "automaticRepairsPolicy": {
            "enabled": true,
            "gracePeriod": "PT30M"
          },
          "virtualMachineProfile": {
            "storageProfile": {
              "imageReference": {
                "publisher": "Canonical",
                "offer": "UbuntuServer",
                "sku": "18.04-LTS",
                "version": "latest"
              }
            },
            "osProfile": {
              "computerNamePrefix": "vmss",
              "adminUsername": "GEN-UNIQUE",
              "adminPassword": "GEN-PASSWORD"
            },
            "extensionProfile": {
              "extensions": [
                {
                  "name": "CustomScriptToInstallApache",
                  "properties": {
                    "publisher": "Microsoft.Azure.Extensions",
                    "type": "CustomScript",
                    "typeHandlerVersion": "2.0",
                    "autoUpgradeMinorVersion": true,
                    "settings": {
                      "fileUris": [
                        "[uri(parameters('_artifactsLocation'), concat('install_apache.sh', parameters('_artifactsLocationSasToken')))]"
                      ],
                      "commandToExecute": "sh install_apache.sh"
                    }
                  }
                }
              ]
            },
            "networkProfile": {
              "healthProbe": {
                "id": "Microsoft.Network/loadBalancers/probes//[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]lb/[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]lbprobe"
              },
              "networkInterfaceConfigurations": [
                {
                  "name": "nic1",
                  "properties": {
                    "primary": true,
                    "ipConfigurations": [
                      {
                        "name": "ip1",
                        "properties": {
                          "subnet": {
                            "id": "Microsoft.Network/virtualNetworks/subnets/[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]vnet/Subnet"
                          },
                          "loadBalancerBackendAddressPools": [
                            {
                              "id": "Microsoft.Network/loadBalancers/backendAddressPools//[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]lb/[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]lbbepool"
                            }
                          ],
                          "publicipaddressconfiguration": {
                            "name": "pub1",
                            "properties": {
                              "idleTimeoutInMinutes": 15
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      }
    ],
    "\uff04schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#"
  }
}