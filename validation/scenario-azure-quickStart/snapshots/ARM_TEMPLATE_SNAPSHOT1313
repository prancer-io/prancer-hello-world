{
  "structure": "filesystem",
  "error": null,
  "reference": "master",
  "contentType": "json",
  "source": "gitConnectorAzureQuickStart",
  "paths": [
    "/quickstarts/microsoft.eventgrid/event-grid-event-hubs-handler/azuredeploy.json",
    "/quickstarts/microsoft.eventgrid/event-grid-event-hubs-handler/azuredeploy.parameters.json"
  ],
  "timestamp": 1642962906710,
  "queryuser": null,
  "checksum": "99914b932bd37a50b983c5e7c90ae93b",
  "node": {
    "masterSnapshotId": "ARM_TEMPLATE_SNAPSHOT",
    "type": "arm",
    "collection": "armtemplate",
    "paths": [
      "/quickstarts/microsoft.eventgrid/event-grid-event-hubs-handler/azuredeploy.json",
      "/quickstarts/microsoft.eventgrid/event-grid-event-hubs-handler/azuredeploy.parameters.json"
    ],
    "snapshotId": "ARM_TEMPLATE_SNAPSHOT1313",
    "status": "active",
    "validate": true,
    "resourceTypes": [
      "microsoft.eventgrid/eventsubscriptions",
      "microsoft.eventgrid/topics",
      "microsoft.eventhub/namespaces"
    ]
  },
  "snapshotId": "ARM_TEMPLATE_SNAPSHOT1313",
  "collection": "armtemplate",
  "json": {
    "contentVersion": "1.0.0.0",
    "parameters": {
      "topicName": {
        "type": "string",
        "defaultValue": "[concat('topic', uniqueString(resourceGroup().id))]",
        "metadata": {
          "description": "The name of the Event Grid custom topic."
        },
        "value": "GEN-UNIQUE"
      },
      "subscriptionName": {
        "type": "string",
        "defaultValue": "subSendToEventHubs",
        "metadata": {
          "description": "The name of the Event Grid custom topic's subscription."
        }
      },
      "eventHubNamespace": {
        "type": "string",
        "defaultValue": "[concat('namespace', uniqueString(resourceGroup().id))]",
        "metadata": {
          "description": "The name of the Event Hubs namespace."
        }
      },
      "eventHubName": {
        "type": "string",
        "defaultValue": "eventhub",
        "metadata": {
          "description": "The name of the event hub."
        }
      },
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "The location in which the Event Grid resources should be deployed."
        }
      }
    },
    "resources": [
      {
        "type": "Microsoft.EventGrid/topics",
        "apiVersion": "2020-06-01",
        "name": "GEN-UNIQUE",
        "location": "[resourceGroup().location]"
      },
      {
        "type": "Microsoft.EventHub/namespaces",
        "apiVersion": "2018-01-01-preview",
        "name": "[concat('namespace', uniqueString(resourceGroup().id))]",
        "location": "[resourceGroup().location]",
        "sku": {
          "name": "Standard"
        },
        "properties": {
          "isAutoInflateEnabled": true,
          "maximumThroughputUnits": 7
        },
        "resources": [
          {
            "type": "EventHubs",
            "apiVersion": "2017-04-01",
            "name": "eventhub",
            "dependsOn": [
              "Microsoft.EventHub/namespaces/[concat('namespace', uniqueString(resourceGroup().id))]"
            ],
            "properties": {
              "messageRetentionInDays": 1,
              "partitionCount": 2
            }
          }
        ]
      },
      {
        "scope": "[format('Microsoft.EventGrid/topics/{0}', parameters('topicName'))]",
        "type": "Microsoft.EventGrid/eventSubscriptions",
        "apiVersion": "2020-06-01",
        "name": "subSendToEventHubs",
        "dependsOn": [
          "Microsoft.EventGrid/topics/GEN-UNIQUE",
          "Microsoft.EventHub/namespaces/eventHubs/[concat('namespace', uniqueString(resourceGroup().id))]/eventhub"
        ],
        "properties": {
          "destination": {
            "endpointType": "EventHub",
            "properties": {
              "resourceId": "Microsoft.EventHub/namespaces/eventhubs/[concat('namespace', uniqueString(resourceGroup().id))]/eventhub"
            }
          },
          "filter": {
            "isSubjectCaseSensitive": false
          }
        }
      }
    ],
    "outputs": {
      "endpoint": {
        "type": "string",
        "value": "[reference(parameters('topicName')).endpoint]"
      }
    },
    "\uff04schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#"
  }
}