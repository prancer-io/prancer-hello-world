{
  "structure": "filesystem",
  "error": null,
  "reference": "master",
  "contentType": "json",
  "source": "gitConnectorAzureQuickStart",
  "paths": [
    "/quickstarts/microsoft.datafactory/data-factory-v2-blob-to-blob-copy/azuredeploy.json",
    "/quickstarts/microsoft.datafactory/data-factory-v2-blob-to-blob-copy/azuredeploy.parameters.json"
  ],
  "timestamp": 1642962905706,
  "queryuser": null,
  "checksum": "99914b932bd37a50b983c5e7c90ae93b",
  "node": {
    "masterSnapshotId": "ARM_TEMPLATE_SNAPSHOT",
    "type": "arm",
    "collection": "armtemplate",
    "paths": [
      "/quickstarts/microsoft.datafactory/data-factory-v2-blob-to-blob-copy/azuredeploy.json",
      "/quickstarts/microsoft.datafactory/data-factory-v2-blob-to-blob-copy/azuredeploy.parameters.json"
    ],
    "snapshotId": "ARM_TEMPLATE_SNAPSHOT1224",
    "status": "active",
    "validate": true,
    "resourceTypes": [
      "microsoft.datafactory/factories/linkedservices",
      "microsoft.storage/storageaccounts/blobservices/containers",
      "microsoft.datafactory/factories",
      "microsoft.storage/storageaccounts",
      "microsoft.datafactory/factories/datasets",
      "microsoft.datafactory/factories/pipelines"
    ]
  },
  "snapshotId": "ARM_TEMPLATE_SNAPSHOT1224",
  "collection": "armtemplate",
  "json": {
    "contentVersion": "1.0.0.0",
    "metadata": {
      "_generator": {
        "name": "bicep",
        "version": "0.4.412.5873",
        "templateHash": "5138689633595887430"
      }
    },
    "parameters": {
      "dataFactoryName": {
        "type": "string",
        "defaultValue": "[format('datafactory{0}', uniqueString(resourceGroup().id))]",
        "metadata": {
          "description": "Data Factory Name"
        }
      },
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Location of the data factory."
        }
      },
      "storageAccountName": {
        "type": "string",
        "defaultValue": "[format('storage{0}', uniqueString(resourceGroup().id))]",
        "metadata": {
          "description": "Name of the Azure storage account that contains the input/output data."
        }
      },
      "blobContainerName": {
        "type": "string",
        "defaultValue": "[format('blob{0}', uniqueString(resourceGroup().id))]",
        "metadata": {
          "description": "Name of the blob container in the Azure Storage account."
        }
      }
    },
    "functions": [],
    "variables": {
      "dataFactoryLinkedServiceName": "ArmtemplateStorageLinkedService",
      "dataFactoryDataSetInName": "ArmtemplateTestDatasetIn",
      "dataFactoryDataSetOutName": "ArmtemplateTestDatasetOut",
      "pipelineName": "ArmtemplateSampleCopyPipeline"
    },
    "resources": [
      {
        "type": "Microsoft.Storage/storageAccounts",
        "apiVersion": "2021-04-01",
        "name": "[format('storage{0}', uniqueString(resourceGroup().id))]",
        "location": "[resourceGroup().location]",
        "sku": {
          "name": "Standard_LRS"
        },
        "kind": "StorageV2"
      },
      {
        "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
        "apiVersion": "2021-04-01",
        "name": "[format('{0}/default/{1}', parameters('storageAccountName'), parameters('blobContainerName'))]",
        "dependsOn": [
          "Microsoft.Storage/storageAccounts/[format('storage{0}', uniqueString(resourceGroup().id))]"
        ]
      },
      {
        "type": "Microsoft.DataFactory/factories",
        "apiVersion": "2018-06-01",
        "name": "[format('datafactory{0}', uniqueString(resourceGroup().id))]",
        "location": "[resourceGroup().location]",
        "identity": {
          "type": "SystemAssigned"
        }
      },
      {
        "type": "Microsoft.DataFactory/factories/linkedservices",
        "apiVersion": "2018-06-01",
        "name": "[format('{0}/{1}', parameters('dataFactoryName'), variables('dataFactoryLinkedServiceName'))]",
        "properties": {
          "type": "AzureBlobStorage",
          "typeProperties": {
            "connectionString": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1}', parameters('storageAccountName'), listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2021-04-01').keys[0].value)]"
          }
        },
        "dependsOn": [
          "Microsoft.DataFactory/factories/[format('datafactory{0}', uniqueString(resourceGroup().id))]",
          "Microsoft.Storage/storageAccounts/[format('storage{0}', uniqueString(resourceGroup().id))]"
        ]
      },
      {
        "type": "Microsoft.DataFactory/factories/datasets",
        "apiVersion": "2018-06-01",
        "name": "[format('{0}/{1}', parameters('dataFactoryName'), variables('dataFactoryDataSetInName'))]",
        "properties": {
          "linkedServiceName": {
            "referenceName": "ArmtemplateStorageLinkedService",
            "type": "LinkedServiceReference"
          },
          "type": "Binary",
          "typeProperties": {
            "location": {
              "type": "AzureBlobStorageLocation",
              "container": "[format('{0}/default/{1}', parameters('storageAccountName'), parameters('blobContainerName'))]",
              "folderPath": "input",
              "fileName": "emp.txt"
            }
          }
        },
        "dependsOn": [
          "[resourceId('Microsoft.Storage/storageAccounts/blobServices/containers', split(format('{0}/default/{1}', parameters('storageAccountName'), parameters('blobContainerName')), '/')[0], split(format('{0}/default/{1}', parameters('storageAccountName'), parameters('blobContainerName')), '/')[1], split(format('{0}/default/{1}', parameters('storageAccountName'), parameters('blobContainerName')), '/')[2])]",
          "Microsoft.DataFactory/factories/[format('datafactory{0}', uniqueString(resourceGroup().id))]",
          "Microsoft.DataFactory/factories/linkedservices/[format('datafactory{0}', uniqueString(resourceGroup().id))]/ArmtemplateStorageLinkedService"
        ]
      },
      {
        "type": "Microsoft.DataFactory/factories/datasets",
        "apiVersion": "2018-06-01",
        "name": "[format('{0}/{1}', parameters('dataFactoryName'), variables('dataFactoryDataSetOutName'))]",
        "properties": {
          "linkedServiceName": {
            "referenceName": "ArmtemplateStorageLinkedService",
            "type": "LinkedServiceReference"
          },
          "type": "Binary",
          "typeProperties": {
            "location": {
              "type": "AzureBlobStorageLocation",
              "container": "[format('{0}/default/{1}', parameters('storageAccountName'), parameters('blobContainerName'))]",
              "folderPath": "output"
            }
          }
        },
        "dependsOn": [
          "[resourceId('Microsoft.Storage/storageAccounts/blobServices/containers', split(format('{0}/default/{1}', parameters('storageAccountName'), parameters('blobContainerName')), '/')[0], split(format('{0}/default/{1}', parameters('storageAccountName'), parameters('blobContainerName')), '/')[1], split(format('{0}/default/{1}', parameters('storageAccountName'), parameters('blobContainerName')), '/')[2])]",
          "Microsoft.DataFactory/factories/[format('datafactory{0}', uniqueString(resourceGroup().id))]",
          "Microsoft.DataFactory/factories/linkedservices/[format('datafactory{0}', uniqueString(resourceGroup().id))]/ArmtemplateStorageLinkedService"
        ]
      },
      {
        "type": "Microsoft.DataFactory/factories/pipelines",
        "apiVersion": "2018-06-01",
        "name": "[format('{0}/{1}', parameters('dataFactoryName'), variables('pipelineName'))]",
        "properties": {
          "activities": [
            {
              "name": "MyCopyActivity",
              "type": "Copy",
              "policy": {
                "timeout": "7.00:00:00",
                "retry": 0,
                "retryIntervalInSeconds": 30,
                "secureOutput": false,
                "secureInput": false
              },
              "typeProperties": {
                "source": {
                  "type": "BinarySource",
                  "storeSettings": {
                    "type": "AzureBlobStorageReadSettings",
                    "recursive": true
                  }
                },
                "sink": {
                  "type": "BinarySink",
                  "storeSettings": {
                    "type": "AzureBlobStorageWriterSettings"
                  }
                },
                "enableStaging": false
              },
              "inputs": [
                {
                  "referenceName": "ArmtemplateTestDatasetIn",
                  "type": "DatasetReference"
                }
              ],
              "outputs": [
                {
                  "referenceName": "ArmtemplateTestDatasetOut",
                  "type": "DatasetReference"
                }
              ]
            }
          ]
        },
        "dependsOn": [
          "Microsoft.DataFactory/factories/[format('datafactory{0}', uniqueString(resourceGroup().id))]",
          "Microsoft.DataFactory/factories/datasets/[format('datafactory{0}', uniqueString(resourceGroup().id))]/ArmtemplateTestDatasetIn",
          "Microsoft.DataFactory/factories/datasets/[format('datafactory{0}', uniqueString(resourceGroup().id))]/ArmtemplateTestDatasetOut"
        ]
      }
    ],
    "\uff04schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#"
  }
}