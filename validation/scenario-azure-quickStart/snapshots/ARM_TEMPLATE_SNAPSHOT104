{
  "structure": "filesystem",
  "error": null,
  "reference": "master",
  "contentType": "json",
  "source": "gitConnectorAzureQuickStart",
  "paths": [
    "/application-workloads/consul/consul-on-ubuntu/azuredeploy.json",
    "/application-workloads/consul/consul-on-ubuntu/azuredeploy.parameters.json"
  ],
  "timestamp": 1642962886656,
  "queryuser": null,
  "checksum": "99914b932bd37a50b983c5e7c90ae93b",
  "node": {
    "masterSnapshotId": "ARM_TEMPLATE_SNAPSHOT",
    "type": "arm",
    "collection": "armtemplate",
    "paths": [
      "/application-workloads/consul/consul-on-ubuntu/azuredeploy.json",
      "/application-workloads/consul/consul-on-ubuntu/azuredeploy.parameters.json"
    ],
    "snapshotId": "ARM_TEMPLATE_SNAPSHOT104",
    "status": "active",
    "validate": true,
    "resourceTypes": [
      "microsoft.network/publicipaddresses",
      "microsoft.network/virtualnetworks",
      "microsoft.network/loadbalancers",
      "microsoft.network/networkinterfaces",
      "microsoft.compute/virtualmachines/extensions",
      "microsoft.compute/virtualmachines",
      "microsoft.network/networksecuritygroups",
      "microsoft.storage/storageaccounts",
      "microsoft.compute/availabilitysets"
    ]
  },
  "snapshotId": "ARM_TEMPLATE_SNAPSHOT104",
  "collection": "armtemplate",
  "json": {
    "contentVersion": "1.0.0.0",
    "parameters": {
      "adminUsername": {
        "type": "string",
        "metadata": {
          "description": "Admin username for VM"
        },
        "value": "GEN-UNIQUE"
      },
      "vmSize": {
        "defaultValue": "Standard_A1",
        "metadata": {
          "description": "Size of the Virtual Machine."
        },
        "type": "string",
        "allowedValues": [
          "Standard_A1",
          "Standard_A2",
          "Standard_A3",
          "Standard_D2_v3",
          "Standard_D2_v3",
          "Standard_D4_v3"
        ]
      },
      "appPrefix": {
        "type": "string",
        "metadata": {
          "description": "Prefix for each component (VMs, networks, etc)"
        },
        "maxLength": 13,
        "value": "GEN-UNIQUE-10"
      },
      "existingAtlasToken": {
        "type": "string",
        "metadata": {
          "description": "Your existing access token from Atlas"
        },
        "value": "GEN-UNIQUE"
      },
      "existingAtlasInfraName": {
        "type": "string",
        "metadata": {
          "description": "The name of your existing infrastructure in Atlas (username/infraName)"
        },
        "value": "GEN-UNIQUE"
      },
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Location for all resources."
        }
      },
      "authenticationType": {
        "type": "string",
        "defaultValue": "sshPublicKey",
        "allowedValues": [
          "sshPublicKey",
          "password"
        ],
        "metadata": {
          "description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."
        }
      },
      "adminPasswordOrKey": {
        "type": "securestring",
        "metadata": {
          "description": "SSH Key or password for the Virtual Machine. SSH key is recommended."
        },
        "value": "GEN-SSH-PUB-KEY"
      },
      "_artifactsLocation": {
        "type": "string",
        "metadata": {
          "description": "The base URI where artifacts required by this template are located including a trailing '/'"
        },
        "defaultValue": "[deployment().properties.templateLink.uri]"
      },
      "_artifactsLocationSasToken": {
        "type": "securestring",
        "metadata": {
          "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated. Use the defaultValue if the staging location is not secured."
        },
        "defaultValue": ""
      },
      "vmsize": {
        "value": "Standard_A1"
      }
    },
    "variables": {
      "imagePublisher": "Canonical",
      "subnet1Name": "Subnet-1",
      "customScriptFilePath": "[uri(parameters('_artifactsLocation'), concat('install-consul.sh', parameters('_artifactsLocationSasToken')))]",
      "addressPrefix": "10.0.0.0/16",
      "numberOfInstances": 3,
      "customScriptCommandToExecute": "bash install-consul.sh",
      "subnet1Prefix": "10.0.0.0/24",
      "publicIPAddressType": "Dynamic",
      "imageSKU": "14.04.5-LTS",
      "vnetIDRef": "GEN-UNIQUE-10_VNET",
      "imageOffer": "UbuntuServer",
      "storageAccountName": "[concat(uniquestring(resourceGroup().id), parameters('appPrefix'))]",
      "linuxConfiguration": {
        "disablePasswordAuthentication": true,
        "ssh": {
          "publicKeys": [
            {
              "path": "/home/GEN-UNIQUE/.ssh/authorized_keys",
              "keyData": "GEN-SSH-PUB-KEY"
            }
          ]
        }
      }
    },
    "resources": [
      {
        "sku": {
          "name": "Standard_LRS"
        },
        "type": "Microsoft.Storage/storageAccounts",
        "location": "[resourceGroup().location]",
        "apiVersion": "2021-04-01",
        "name": "[variables('storageAccountName')]"
      },
      {
        "name": "publicIPcopyindex()",
        "apiVersion": "2020-07-01",
        "location": "[resourceGroup().location]",
        "copy": {
          "count": 3,
          "name": "ipLoop"
        },
        "type": "Microsoft.Network/publicIPAddresses",
        "properties": {
          "publicIPAllocationMethod": "Dynamic"
        }
      },
      {
        "type": "Microsoft.Compute/availabilitySets",
        "location": "[resourceGroup().location]",
        "apiVersion": "2020-12-01",
        "name": "GEN-UNIQUE-10_AS",
        "sku": {
          "name": "Aligned"
        },
        "properties": {
          "platformFaultDomainCount": 2,
          "platformUpdateDomainCount": 5
        }
      },
      {
        "properties": {
          "securityRules": [
            {
              "name": "ssh_rule",
              "properties": {
                "priority": 100,
                "direction": "Inbound",
                "protocol": "Tcp",
                "description": "Allow external SSH",
                "access": "Allow",
                "destinationPortRange": "22",
                "sourcePortRange": "*",
                "destinationAddressPrefix": "*",
                "sourceAddressPrefix": "Internet"
              }
            }
          ]
        },
        "type": "Microsoft.Network/networkSecurityGroups",
        "location": "[resourceGroup().location]",
        "apiVersion": "2020-07-01",
        "name": "GEN-UNIQUE-10_SG"
      },
      {
        "name": "GEN-UNIQUE-10_VNET",
        "apiVersion": "2020-07-01",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "Microsoft.Network/networkSecurityGroups//GEN-UNIQUE-10_SG"
        ],
        "type": "Microsoft.Network/virtualNetworks",
        "properties": {
          "subnets": [
            {
              "name": "Subnet-1",
              "properties": {
                "addressPrefix": "10.0.0.0/24"
              }
            }
          ],
          "addressSpace": {
            "addressPrefixes": [
              "10.0.0.0/16"
            ]
          }
        }
      },
      {
        "name": "GEN-UNIQUE-10_LB",
        "apiVersion": "2020-07-01",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "Microsoft.Network/virtualNetworks//GEN-UNIQUE-10_VNET"
        ],
        "type": "Microsoft.Network/loadBalancers",
        "properties": {
          "frontendIPConfigurations": [
            {
              "name": "loadBalancerFrontEnd",
              "properties": {
                "subnet": {
                  "id": "Microsoft.Network/virtualNetworks/subnets/GEN-UNIQUE-10_VNET/Subnet-1"
                }
              }
            }
          ],
          "loadBalancingRules": [
            {
              "name": "lbrule",
              "properties": {
                "frontendIPConfiguration": {
                  "id": "Microsoft.Network/loadBalancers/frontendIpConfigurations/GEN-UNIQUE-10_LB/loadBalancerFrontEnd"
                },
                "backendPort": 8500,
                "probe": {
                  "id": "Microsoft.Network/loadBalancers/probes/GEN-UNIQUE-10_LB/lbprobe"
                },
                "protocol": "Tcp",
                "backendAddressPool": {
                  "id": "Microsoft.Network/loadBalancers/backendaddresspools/GEN-UNIQUE-10_LB/loadBalancerBackEnd"
                },
                "frontendPort": 8500,
                "idleTimeoutInMinutes": 15
              }
            }
          ],
          "backendAddressPools": [
            {
              "name": "loadBalancerBackEnd"
            }
          ],
          "probes": [
            {
              "name": "lbprobe",
              "properties": {
                "protocol": "Tcp",
                "numberOfProbes": 2,
                "intervalInSeconds": 15,
                "port": 8500
              }
            }
          ]
        }
      },
      {
        "name": "GEN-UNIQUE-10_nic1copyindex()",
        "apiVersion": "2020-07-01",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "Microsoft.Network/publicIPAddresses//publicIPcopyindex()",
          "Microsoft.Network/virtualNetworks//GEN-UNIQUE-10_VNET",
          "Microsoft.Network/loadBalancers//GEN-UNIQUE-10_LB"
        ],
        "copy": {
          "count": 3,
          "name": "nicLoop"
        },
        "type": "Microsoft.Network/networkInterfaces",
        "properties": {
          "networkSecurityGroup": {
            "id": "Microsoft.Network/networkSecurityGroups/GEN-UNIQUE-10_SG"
          },
          "ipConfigurations": [
            {
              "name": "ipconfig1",
              "properties": {
                "subnet": {
                  "id": "Microsoft.Network/virtualNetworks/subnets/GEN-UNIQUE-10_VNET/Subnet-1"
                },
                "privateIPAllocationMethod": "Dynamic",
                "loadBalancerBackendAddressPools": [
                  {
                    "id": "Microsoft.Network/loadBalancers/backendAddressPools/GEN-UNIQUE-10_LB/loadBalancerBackEnd"
                  }
                ],
                "publicIPAddress": {
                  "id": "Microsoft.Network/publicIpAddresses/publicIPcopyindex()"
                }
              }
            }
          ]
        }
      },
      {
        "name": "GEN-UNIQUE-10_vmcopyIndex()",
        "apiVersion": "2020-12-01",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "[resourceId('Microsoft.Network/networkInterfaces/', concat(parameters('appPrefix'),'_nic1', copyIndex()))]",
          "[resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
          "[resourceId('Microsoft.Compute/availabilitySets/', concat(parameters('appPrefix'),'_AS'))]"
        ],
        "copy": {
          "count": 3,
          "name": "virtualMachineLoop"
        },
        "type": "Microsoft.Compute/virtualMachines",
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_A1"
          },
          "osProfile": {
            "adminUsername": "GEN-UNIQUE",
            "computerName": "vmcopyIndex()",
            "adminPassword": "GEN-SSH-PUB-KEY",
            "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]"
          },
          "availabilitySet": {
            "id": "Microsoft.Compute/availabilitySets/GEN-UNIQUE-10_AS"
          },
          "storageProfile": {
            "imageReference": {
              "sku": "14.04.5-LTS",
              "publisher": "Canonical",
              "version": "latest",
              "offer": "UbuntuServer"
            },
            "osDisk": {
              "caching": "ReadWrite",
              "name": "GEN-UNIQUE-10_vmcopyIndex()_OSDisk",
              "createOption": "FromImage"
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "Microsoft.Network/networkInterfaces/GEN-UNIQUE-10_nic1copyindex()",
                "properties": {
                  "primary": true
                }
              }
            ]
          }
        }
      },
      {
        "name": "GEN-UNIQUE-10_vmcopyIndex()/extension",
        "apiVersion": "2020-12-01",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "Microsoft.Compute/virtualMachines//GEN-UNIQUE-10_vmcopyIndex()"
        ],
        "copy": {
          "count": 3,
          "name": "virtualMachineLoop"
        },
        "type": "Microsoft.Compute/virtualMachines/extensions",
        "properties": {
          "publisher": "Microsoft.Azure.Extensions",
          "type": "CustomScript",
          "typeHandlerVersion": "2.0",
          "autoUpgradeMinorVersion": true,
          "settings": {
            "fileUris": [
              "[uri(parameters('_artifactsLocation'), concat('install-consul.sh', parameters('_artifactsLocationSasToken')))]"
            ]
          },
          "protectedSettings": {
            "commandToExecute": "bash install-consul.sh GEN-UNIQUE GEN-UNIQUE"
          }
        }
      }
    ],
    "\uff04schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#"
  }
}