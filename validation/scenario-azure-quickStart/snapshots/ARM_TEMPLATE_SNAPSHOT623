{
  "structure": "filesystem",
  "error": null,
  "reference": "master",
  "contentType": "json",
  "source": "gitConnectorAzureQuickStart",
  "paths": [
    "/demos/azmgmt-demo/nestedtemplates/managedVms.json"
  ],
  "timestamp": 1642962898266,
  "queryuser": null,
  "checksum": "99914b932bd37a50b983c5e7c90ae93b",
  "node": {
    "masterSnapshotId": "ARM_TEMPLATE_SNAPSHOT",
    "type": "arm",
    "collection": "armtemplate",
    "paths": [
      "/demos/azmgmt-demo/nestedtemplates/managedVms.json"
    ],
    "snapshotId": "ARM_TEMPLATE_SNAPSHOT623",
    "status": "active",
    "validate": true,
    "resourceTypes": [
      "microsoft.network/publicipaddresses",
      "microsoft.network/virtualnetworks",
      "microsoft.resources/deployments",
      "microsoft.network/networkinterfaces",
      "microsoft.compute/virtualmachines/extensions",
      "microsoft.compute/virtualmachines",
      "microsoft.compute/availabilitysets"
    ]
  },
  "snapshotId": "ARM_TEMPLATE_SNAPSHOT623",
  "collection": "armtemplate",
  "json": {
    "contentVersion": "1.0.0.0",
    "parameters": {
      "instanceCount": {
        "type": "int",
        "defaultValue": 2,
        "maxValue": 10,
        "metadata": {
          "description": "Specify the number of VMs to create"
        }
      },
      "automationAccountName": {
        "type": "string",
        "metadata": {
          "description": "Azure Automation account name"
        }
      },
      "vmNamePrefix": {
        "type": "string",
        "defaultValue": "VM",
        "metadata": {
          "description": "Assing a prefix for the VMs you will create"
        }
      },
      "platform": {
        "type": "string",
        "defaultValue": "WinSrv",
        "allowedValues": [
          "WinSrv",
          "Linux"
        ],
        "metadata": {
          "description": "Select the OS type to deploy"
        }
      },
      "username": {
        "type": "string",
        "defaultValue": "azureadmin",
        "metadata": {
          "description": "User name for the OS."
        }
      },
      "pwdOrSsh": {
        "type": "securestring",
        "metadata": {
          "description": "Provide pwd if WinSrv, SSH if Linux."
        }
      },
      "omsResourceGroup": {
        "type": "string",
        "metadata": {
          "description": "Specify name of Resource Group containing the mgmt services"
        }
      },
      "omsWorkspaceName": {
        "type": "string",
        "metadata": {
          "description": "Specify the name of your OMS workspace"
        }
      },
      "omsRecoveryVaultName": {
        "type": "string",
        "metadata": {
          "description": "Name of Recovery Vault"
        }
      },
      "omsRecoveryVaultRegion": {
        "type": "string",
        "metadata": {
          "description": "Recovery Vault region"
        }
      },
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Location for all resources."
        }
      }
    },
    "variables": {
      "availabilitySetName": "vmAvSet",
      "vNetName": "managedVnet",
      "vNetAddressPrefix": "192.168.0.0/16",
      "subnetName": "subnet01",
      "subnetAddressPrefix": "192.168.0.0/24",
      "subnetRef": "Microsoft.Network/virtualNetworks/subnets/managedVnet/subnet01",
      "windowsOffer": "WindowsServer",
      "windowsSku": "2016-Datacenter",
      "windowsPublisher": "MicrosoftWindowsServer",
      "linuxOffer": "UbuntuServer",
      "linuxSku": "12.04.5-LTS",
      "linuxPublisher": "Canonical",
      "windowsMgmtType": "MicrosoftMonitoringAgent",
      "windowsMgmtVersion": "1.0",
      "linuxMgmtType": "OmsAgentForLinux",
      "linuxMgmtVersion": "1.4",
      "modulesUrl": "[uri(deployment().properties.templateLink.uri, 'scripts/UpdateLCMforAAPull.zip')]",
      "configurationFunction": "UpdateLCMforAAPull.ps1\\ConfigureLCMforAAPull",
      "configurationMode": "ApplyAndMonitor",
      "configurationModeFrequencyMins": 15,
      "refreshFrequencyMins": 30,
      "rebootNodeIfNeeded": true,
      "actionAfterReboot": "ContinueConfiguration",
      "allowModuleOverwrite": true,
      "configName": "OMSSERVICE.localhost"
    },
    "resources": [
      {
        "apiVersion": "2017-04-01",
        "type": "Microsoft.Network/publicIPAddresses",
        "name": "VMIPcopyIndex()",
        "location": "[resourceGroup().location]",
        "copy": {
          "name": "VMIP",
          "count": "instancecount"
        },
        "properties": {
          "publicIPAllocationMethod": "Dynamic",
          "dnsSettings": {
            "domainNameLabel": "[toLower(concat(parameters('vmNamePrefix'), 'VM', copyIndex()))]"
          }
        }
      },
      {
        "apiVersion": "2017-04-01",
        "type": "Microsoft.Network/virtualNetworks",
        "name": "managedVnet",
        "location": "[resourceGroup().location]",
        "properties": {
          "addressSpace": {
            "addressPrefixes": [
              "192.168.0.0/16"
            ]
          },
          "subnets": [
            {
              "name": "subnet01",
              "properties": {
                "addressPrefix": "192.168.0.0/24"
              }
            }
          ]
        }
      },
      {
        "apiVersion": "2017-04-01",
        "type": "Microsoft.Network/networkInterfaces",
        "name": "VMniccopyIndex()",
        "location": "[resourceGroup().location]",
        "copy": {
          "name": "VMnic",
          "count": 2
        },
        "dependsOn": [
          "Microsoft.Network/publicIPAddresses/VMIPcopyIndex()",
          "Microsoft.Network/virtualNetworks/managedVnet"
        ],
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipconfig1",
              "properties": {
                "privateIPAllocationMethod": "Dynamic",
                "publicIPAddress": {
                  "id": "Microsoft.Network/publicIPAddresses/VMIPcopyIndex()"
                },
                "subnet": {
                  "id": "Microsoft.Network/virtualNetworks/subnets/managedVnet/subnet01"
                }
              }
            }
          ]
        }
      },
      {
        "type": "Microsoft.Compute/availabilitySets",
        "apiVersion": "2017-03-30",
        "name": "vmAvSet",
        "location": "[resourceGroup().location]",
        "properties": {
          "platformFaultDomainCount": 2,
          "platformUpdateDomainCount": 3
        },
        "sku": {
          "name": "Aligned"
        }
      },
      {
        "apiVersion": "2017-03-30",
        "type": "Microsoft.Compute/virtualMachines",
        "name": "VMWinSrvcopyIndex()",
        "location": "[resourceGroup().location]",
        "copy": {
          "name": "VM",
          "count": 2
        },
        "dependsOn": [
          "Microsoft.Network/networkinterfaces/VMniccopyIndex()",
          "Microsoft.Compute/availabilitySets//vmAvSet"
        ],
        "properties": {
          "availabilitySet": {
            "id": "Microsoft.Compute/availabilitySets//vmAvSet"
          },
          "hardwareprofile": {
            "vmsize": "Standard_D2s_v3"
          },
          "osProfile": {
            "computerName": "VMWinSrvcopyIndex()",
            "adminusername": "azureadmin",
            "adminpassword": "pwdOrSsh"
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "[if(equals(parameters('platform'), 'WinSrv'), variables('windowsPublisher'), variables('linuxPublisher'))]",
              "offer": "[if(equals(parameters('platform'), 'WinSrv'), variables('windowsOffer'), variables('linuxOffer'))]",
              "version": "latest",
              "sku": "[if(equals(parameters('platform'), 'WinSrv'), variables('windowsSku'), variables('linuxSku'))]"
            },
            "osdisk": {
              "name": "WinSrv-osDiskcopyIndex()",
              "createOption": "FromImage",
              "managedDisk": {
                "storageAccountType": "StandardSSD_LRS"
              },
              "caching": "ReadWrite"
            }
          },
          "networkprofile": {
            "networkinterfaces": [
              {
                "id": "Microsoft.Network/networkinterfaces/VMniccopyIndex()"
              }
            ]
          }
        }
      },
      {
        "type": "Microsoft.Compute/virtualMachines/extensions",
        "apiVersion": "2017-03-30",
        "name": "VMWinSrvcopyIndex()/OMS",
        "location": "[resourceGroup().location]",
        "copy": {
          "name": "VMWinSrvOMS",
          "count": 2
        },
        "dependsOn": [
          "Microsoft.Compute/virtualMachines/VMWinSrvcopyIndex()"
        ],
        "properties": {
          "publisher": "Microsoft.EnterpriseCloud.Monitoring",
          "type": "[if(equals(parameters('platform'), 'WinSrv'), variables('windowsMgmtType'), variables('linuxMgmtType'))]",
          "typeHandlerVersion": "[if(equals(parameters('platform'), 'WinSrv'), variables('windowsMgmtVersion'), variables('linuxMgmtVersion'))]",
          "autoUpgradeMinorVersion": true,
          "settings": {
            "workspaceId": "[reference(resourceId(parameters('omsResourceGroup'), 'Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName')), '2015-11-01-preview').customerId]",
            "azureResourceId": "Microsoft.Compute/virtualMachines//VMWinSrvcopyIndex()"
          },
          "protectedSettings": {
            "workspaceKey": "[listKeys(resourceId(parameters('omsResourceGroup'),'Microsoft.OperationalInsights/workspaces/', parameters('omsWorkspaceName')), '2015-11-01-preview').primarySharedKey]"
          }
        }
      },
      {
        "type": "Microsoft.Compute/virtualMachines/extensions",
        "name": "VMWinSrvcopyIndex()/ServiceMap",
        "apiVersion": "2017-03-30",
        "location": "[resourceGroup().location]",
        "copy": {
          "name": "VMWinSrvServiceMap",
          "count": 2
        },
        "dependsOn": [
          "Microsoft.Compute/virtualMachines/VMWinSrvcopyIndex()/extensions//OMS"
        ],
        "properties": {
          "publisher": "Microsoft.Azure.Monitoring.DependencyAgent",
          "type": "[if(equals(parameters('platform'), 'WinSrv'), 'DependencyAgentWindows', 'DependencyAgentLinux')]",
          "typeHandlerVersion": "9.1",
          "autoUpgradeMinorVersion": true
        }
      },
      {
        "condition": false,
        "type": "Microsoft.Compute/virtualMachines/extensions",
        "name": "VMWinSrvcopyIndex()/DSC",
        "apiVersion": "2017-03-30",
        "location": "[resourceGroup().location]",
        "copy": {
          "name": "VMWinSrvDSC",
          "count": 2
        },
        "dependsOn": [
          "Microsoft.Compute/virtualMachines/VMWinSrvcopyIndex()"
        ],
        "properties": {
          "publisher": "Microsoft.Powershell",
          "type": "DSC",
          "typeHandlerVersion": "2.19",
          "autoUpgradeMinorVersion": true,
          "protectedSettings": {
            "Items": {
              "registrationKeyPrivate": "[listKeys(resourceId(parameters('omsResourceGroup'), 'Microsoft.Automation/automationAccounts/', parameters('automationAccountName')), '2015-01-01-preview').Keys[0].value]"
            }
          },
          "settings": {
            "ModulesUrl": "[uri(deployment().properties.templateLink.uri, 'scripts/UpdateLCMforAAPull.zip')]",
            "SasToken": "",
            "ConfigurationFunction": "UpdateLCMforAAPull.ps1\\ConfigureLCMforAAPull",
            "Properties": [
              {
                "Name": "RegistrationKey",
                "Value": {
                  "UserName": "PLACEHOLDER_DONOTUSE",
                  "Password": "PrivateSettingsRef:registrationKeyPrivate"
                },
                "TypeName": "System.Management.Automation.PSCredential"
              },
              {
                "Name": "RegistrationUrl",
                "Value": "[reference(resourceId(parameters('omsResourceGroup'), 'Microsoft.Automation/automationAccounts/', parameters('automationAccountName')), '2015-01-01-preview').registrationUrl]",
                "TypeName": "System.String"
              },
              {
                "Name": "NodeConfigurationName",
                "Value": "OMSSERVICE.localhost",
                "TypeName": "System.String"
              },
              {
                "Name": "ConfigurationMode",
                "Value": "ApplyAndMonitor",
                "TypeName": "System.String"
              },
              {
                "Name": "ConfigurationModeFrequencyMins",
                "Value": 15,
                "TypeName": "System.Int32"
              },
              {
                "Name": "RefreshFrequencyMins",
                "Value": 30,
                "TypeName": "System.Int32"
              },
              {
                "Name": "RebootNodeIfNeeded",
                "Value": true,
                "TypeName": "System.Boolean"
              },
              {
                "Name": "ActionAfterReboot",
                "Value": "ContinueConfiguration",
                "TypeName": "System.String"
              },
              {
                "Name": "AllowModuleOverwrite",
                "Value": true,
                "TypeName": "System.Boolean"
              }
            ]
          }
        }
      },
      {
        "apiVersion": "2017-05-10",
        "type": "Microsoft.Resources/deployments",
        "resourceGroup": "omsResourceGroup",
        "name": "enableBackup",
        "dependsOn": [
          "Microsoft.Compute/virtualMachines/VMWinSrv0/extensions/OMS"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(deployment().properties.templateLink.uri, 'managedVmsBackup.json')]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "instanceCount": {
              "value": 2
            },
            "vmNamePrefix": {
              "value": "VM"
            },
            "vmRgName": {
              "value": "[resourceGroup().name]"
            },
            "omsRecoveryVaultName": {
              "value": "omsRecoveryVaultName"
            },
            "omsRecoveryVaultRegion": {
              "value": "omsRecoveryVaultRegion"
            },
            "platform": {
              "value": "WinSrv"
            }
          }
        }
      }
    ],
    "outputs": {},
    "\uff04schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#"
  }
}