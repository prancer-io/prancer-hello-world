{
  "structure": "filesystem",
  "error": null,
  "reference": "master",
  "contentType": "json",
  "source": "gitConnectorAzureQuickStart",
  "paths": [
    "/application-workloads/ros/ros-vm-linux/azuredeploy.json",
    "/application-workloads/ros/ros-vm-linux/azuredeploy.parameters.json"
  ],
  "timestamp": 1642962893372,
  "queryuser": null,
  "checksum": "99914b932bd37a50b983c5e7c90ae93b",
  "node": {
    "masterSnapshotId": "ARM_TEMPLATE_SNAPSHOT",
    "type": "arm",
    "collection": "armtemplate",
    "paths": [
      "/application-workloads/ros/ros-vm-linux/azuredeploy.json",
      "/application-workloads/ros/ros-vm-linux/azuredeploy.parameters.json"
    ],
    "snapshotId": "ARM_TEMPLATE_SNAPSHOT373",
    "status": "active",
    "validate": true,
    "resourceTypes": [
      "microsoft.network/publicipaddresses",
      "microsoft.network/virtualnetworks",
      "microsoft.resources/deployments",
      "microsoft.network/networkinterfaces",
      "microsoft.compute/virtualmachines",
      "microsoft.network/networksecuritygroups"
    ]
  },
  "snapshotId": "ARM_TEMPLATE_SNAPSHOT373",
  "collection": "armtemplate",
  "json": {
    "contentVersion": "1.0.0.0",
    "parameters": {
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Location for all resources."
        }
      },
      "projectName": {
        "type": "string",
        "metadata": {
          "description": "Specifies a name for generating resource names."
        },
        "value": "GEN-UNIQUE-8"
      },
      "adminUsername": {
        "type": "string",
        "metadata": {
          "description": "Username for the Virtual Machine."
        },
        "value": "GEN-UNIQUE"
      },
      "authenticationType": {
        "type": "string",
        "defaultValue": "password",
        "allowedValues": [
          "sshPublicKey",
          "password"
        ],
        "metadata": {
          "description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."
        }
      },
      "adminPasswordOrKey": {
        "type": "securestring",
        "metadata": {
          "description": "SSH Key or password for the Virtual Machine. SSH key is recommended."
        },
        "value": "GEN-PASSWORD"
      },
      "virtualMachineSize": {
        "type": "string",
        "defaultValue": "Standard_D2_v3",
        "metadata": {
          "description": "The virtual machine size."
        }
      },
      "pipelineProvider": {
        "type": "string",
        "defaultValue": "None",
        "allowedValues": [
          "None",
          "AzurePipelines",
          "GitHubRunner"
        ],
        "metadata": {
          "description": "The continuous integration provider to register."
        }
      },
      "vstsAccount": {
        "type": "string",
        "metadata": {
          "description": "The Visual Studio Team Services account name, that is, the first part of your VSTSAccount.visualstudio.com"
        },
        "defaultValue": ""
      },
      "vstsPersonalAccessToken": {
        "type": "securestring",
        "metadata": {
          "description": "The personal access token to connect to VSTS"
        },
        "defaultValue": ""
      },
      "vstsPoolName": {
        "type": "string",
        "defaultValue": "Default",
        "metadata": {
          "description": "The Visual Studio Team Services build agent pool for this build agent to join. Use 'Default' if you don't have a separate pool."
        }
      },
      "githubRepo": {
        "type": "string",
        "metadata": {
          "description": "The github account and repo alias."
        },
        "defaultValue": ""
      },
      "githubPersonalAccessToken": {
        "type": "securestring",
        "metadata": {
          "description": "The personal access token to connect to GitHub."
        },
        "defaultValue": ""
      },
      "_artifactsLocation": {
        "type": "string",
        "metadata": {
          "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
        },
        "defaultValue": "[deployment().properties.templatelink.uri]"
      },
      "_artifactsLocationSasToken": {
        "type": "securestring",
        "metadata": {
          "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."
        },
        "defaultValue": ""
      }
    },
    "variables": {
      "location": "[resourceGroup().location]",
      "networkInterfaceName": "GEN-UNIQUE-8-nic",
      "networkSecurityGroupName": "GEN-UNIQUE-8-nsg",
      "virtualNetworkName": "GEN-UNIQUE-8-vnet",
      "publicIpAddressName": "GEN-UNIQUE-8-ip",
      "virtualMachineName": "GEN-UNIQUE-8-vm",
      "ciAgentName": "GEN-UNIQUE-8-agent",
      "subnetRef": "Microsoft.Network/virtualNetworks/subnets/GEN-UNIQUE-8-vnet/default",
      "ubuntuOSVersion": "18.04-LTS",
      "osDiskType": "StandardSSD_LRS",
      "linuxConfiguration": {
        "disablePasswordAuthentication": true,
        "ssh": {
          "publicKeys": [
            {
              "path": "/home/GEN-UNIQUE/.ssh/authorized_keys",
              "keyData": "GEN-PASSWORD"
            }
          ]
        }
      },
      "addressPrefixes": [
        "10.0.0.0/24"
      ],
      "subnets": [
        {
          "name": "default",
          "properties": {
            "addressPrefix": "10.0.0.0/24"
          }
        }
      ],
      "nvidiaGpuDriverLinuxUri": "[uri(parameters('_artifactsLocation'), concat('nestedtemplates/nvidiaGpuDriverLinux.json', parameters('_artifactsLocationSasToken')))]",
      "extensionUrl": "[uri(parameters('_artifactsLocation'), concat('nestedtemplates/customScriptExtension.json', parameters('_artifactsLocationSasToken')))]",
      "vstsScriptFileUri": "[uri(parameters('_artifactsLocation'), concat('scripts/install-vsts.sh', parameters('_artifactsLocationSasToken')))]",
      "rosScriptFileUri": "[uri(parameters('_artifactsLocation'), concat('scripts/install-ros.sh', parameters('_artifactsLocationSasToken')))]",
      "vstsParameters": "GEN-UNIQUE-8-agent  parameters('vstsAccount')  parameters('vstsPersonalAccessToken') Default",
      "githubScriptFileUri": "[uri(parameters('_artifactsLocation'), concat('scripts/install-github.sh', parameters('_artifactsLocationSasToken')))]",
      "githubParameters": "GEN-UNIQUE-8-agent  parameters('githubRepo')  parameters('githubPersonalAccessToken') GEN-UNIQUE"
    },
    "resources": [
      {
        "type": "Microsoft.Network/networkInterfaces",
        "apiVersion": "2020-07-01",
        "name": "GEN-UNIQUE-8-nic",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "Microsoft.Network/networkSecurityGroups//GEN-UNIQUE-8-nsg",
          "Microsoft.Network/virtualNetworks//GEN-UNIQUE-8-vnet",
          "Microsoft.Network/publicIpAddresses//GEN-UNIQUE-8-ip"
        ],
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipconfig1",
              "properties": {
                "subnet": {
                  "id": "Microsoft.Network/virtualNetworks/subnets/GEN-UNIQUE-8-vnet/default"
                },
                "privateIPAllocationMethod": "Dynamic",
                "publicIpAddress": {
                  "id": "Microsoft.Network/publicIPAddresses/publicIPAddressName"
                }
              }
            }
          ],
          "networkSecurityGroup": {
            "id": "Microsoft.Network/networkSecurityGroups/GEN-UNIQUE-8-nsg"
          }
        }
      },
      {
        "type": "Microsoft.Network/networkSecurityGroups",
        "apiVersion": "2020-07-01",
        "name": "GEN-UNIQUE-8-nsg",
        "location": "[resourceGroup().location]",
        "properties": {
          "securityRules": [
            {
              "name": "SSH",
              "properties": {
                "priority": 1000,
                "protocol": "Tcp",
                "access": "Allow",
                "direction": "Inbound",
                "sourceAddressPrefix": "*",
                "sourcePortRange": "*",
                "destinationAddressPrefix": "*",
                "destinationPortRange": "22"
              }
            }
          ]
        }
      },
      {
        "type": "Microsoft.Network/virtualNetworks",
        "apiVersion": "2020-07-01",
        "name": "GEN-UNIQUE-8-vnet",
        "location": "[resourceGroup().location]",
        "properties": {
          "addressSpace": {
            "addressPrefixes": [
              "10.0.0.0/24"
            ]
          },
          "subnets": [
            {
              "name": "default",
              "properties": {
                "addressPrefix": "10.0.0.0/24"
              }
            }
          ]
        }
      },
      {
        "type": "Microsoft.Network/publicIpAddresses",
        "apiVersion": "2020-07-01",
        "name": "GEN-UNIQUE-8-ip",
        "location": "[resourceGroup().location]",
        "properties": {
          "publicIpAllocationMethod": "Dynamic",
          "dnsSettings": {
            "domainNameLabel": "[concat('ros-vm-', uniqueString(resourceGroup().id))]"
          }
        },
        "sku": {
          "name": "Basic"
        }
      },
      {
        "type": "Microsoft.Compute/virtualMachines",
        "apiVersion": "2020-12-01",
        "name": "GEN-UNIQUE-8-vm",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "Microsoft.Network/networkInterfaces//GEN-UNIQUE-8-nic"
        ],
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_D2_v3"
          },
          "storageProfile": {
            "osDisk": {
              "createOption": "fromImage",
              "managedDisk": {
                "storageAccountType": "StandardSSD_LRS"
              }
            },
            "imageReference": {
              "publisher": "Canonical",
              "offer": "UbuntuServer",
              "sku": "18.04-LTS",
              "version": "latest"
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "Microsoft.Network/networkInterfaces/GEN-UNIQUE-8-nic"
              }
            ]
          },
          "osProfile": {
            "computerName": "GEN-UNIQUE-8-vm",
            "adminUsername": "GEN-UNIQUE",
            "adminPassword": "GEN-PASSWORD",
            "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]"
          }
        }
      },
      {
        "condition": "[contains(parameters('virtualMachineSize'), 'Standard_NV')]",
        "name": "nvidia-gpu-driver-linux",
        "apiVersion": "2021-04-01",
        "type": "Microsoft.Resources/deployments",
        "dependsOn": [
          "Microsoft.Resources/deployments/GEN-UNIQUE-8-vm-ROSInstall"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'), concat('nestedtemplates/nvidiaGpuDriverLinux.json', parameters('_artifactsLocationSasToken')))]"
          },
          "parameters": {
            "vmName": {
              "value": "GEN-UNIQUE-8-vm"
            },
            "location": {
              "value": "[resourceGroup().location]"
            }
          }
        }
      },
      {
        "name": "GEN-UNIQUE-8-vm-ROSInstall",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2021-04-01",
        "dependsOn": [
          "Microsoft.Compute/virtualMachines//GEN-UNIQUE-8-vm"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'), concat('nestedtemplates/customScriptExtension.json', parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "location": {
              "value": "[resourceGroup().location]"
            },
            "extensionName": {
              "value": "cse"
            },
            "vmName": {
              "value": "GEN-UNIQUE-8-vm"
            },
            "fileUris": {
              "value": [
                "[uri(parameters('_artifactsLocation'), concat('scripts/install-ros.sh', parameters('_artifactsLocationSasToken')))]"
              ]
            },
            "commandToExecute": {
              "value": "bash install-ros.sh"
            }
          }
        }
      },
      {
        "condition": "[contains(parameters('pipelineProvider'), 'AzurePipelines')]",
        "name": "GEN-UNIQUE-8-vm-VSTSAgentInstall",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2021-04-01",
        "dependsOn": [
          "Microsoft.Resources/deployments/GEN-UNIQUE-8-vm-ROSInstall"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'), concat('nestedtemplates/customScriptExtension.json', parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "location": {
              "value": "[resourceGroup().location]"
            },
            "extensionName": {
              "value": "cse"
            },
            "vmName": {
              "value": "GEN-UNIQUE-8-vm"
            },
            "fileUris": {
              "value": [
                "[uri(parameters('_artifactsLocation'), concat('scripts/install-vsts.sh', parameters('_artifactsLocationSasToken')))]"
              ]
            },
            "commandToExecute": {
              "value": "bash install-vsts.sh GEN-UNIQUE-8-agent  parameters('vstsAccount')  parameters('vstsPersonalAccessToken') Default"
            }
          }
        }
      },
      {
        "condition": "[contains(parameters('pipelineProvider'), 'GitHubRunner')]",
        "name": "GEN-UNIQUE-8-vm-GitHubAgentInstall",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2021-04-01",
        "dependsOn": [
          "Microsoft.Resources/deployments/GEN-UNIQUE-8-vm-ROSInstall"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[uri(parameters('_artifactsLocation'), concat('nestedtemplates/customScriptExtension.json', parameters('_artifactsLocationSasToken')))]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "location": {
              "value": "[resourceGroup().location]"
            },
            "extensionName": {
              "value": "cse"
            },
            "vmName": {
              "value": "GEN-UNIQUE-8-vm"
            },
            "fileUris": {
              "value": [
                "[uri(parameters('_artifactsLocation'), concat('scripts/install-github.sh', parameters('_artifactsLocationSasToken')))]"
              ]
            },
            "commandToExecute": {
              "value": "bash install-github.sh GEN-UNIQUE-8-agent  parameters('githubRepo')  parameters('githubPersonalAccessToken') GEN-UNIQUE"
            }
          }
        }
      }
    ],
    "outputs": {
      "adminUsername": {
        "type": "string",
        "value": "[parameters('adminUsername')]"
      },
      "hostname": {
        "type": "string",
        "value": "[reference(variables('publicIPAddressName')).dnsSettings.fqdn]"
      },
      "sshCommand": {
        "type": "string",
        "value": "[concat('ssh ', parameters('adminUsername'), '@', reference(variables('publicIPAddressName')).dnsSettings.fqdn)]"
      }
    },
    "\uff04schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#"
  }
}