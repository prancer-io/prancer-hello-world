{
  "structure": "filesystem",
  "error": null,
  "reference": "master",
  "contentType": "json",
  "source": "gitConnectorAzureQuickStart",
  "paths": [
    "/demos/memcached-multi-vm-ubuntu/azuredeploy.json",
    "/demos/memcached-multi-vm-ubuntu/azuredeploy.parameters.json"
  ],
  "timestamp": 1642962899730,
  "queryuser": null,
  "checksum": "99914b932bd37a50b983c5e7c90ae93b",
  "node": {
    "masterSnapshotId": "ARM_TEMPLATE_SNAPSHOT",
    "type": "arm",
    "collection": "armtemplate",
    "paths": [
      "/demos/memcached-multi-vm-ubuntu/azuredeploy.json",
      "/demos/memcached-multi-vm-ubuntu/azuredeploy.parameters.json"
    ],
    "snapshotId": "ARM_TEMPLATE_SNAPSHOT727",
    "status": "active",
    "validate": true,
    "resourceTypes": [
      "microsoft.network/publicipaddresses",
      "microsoft.network/virtualnetworks",
      "microsoft.network/networkinterfaces",
      "microsoft.compute/virtualmachines/extensions",
      "microsoft.compute/virtualmachines",
      "microsoft.storage/storageaccounts"
    ]
  },
  "snapshotId": "ARM_TEMPLATE_SNAPSHOT727",
  "collection": "armtemplate",
  "json": {
    "contentVersion": "1.0.0.0",
    "parameters": {
      "newStorageAccountName": {
        "type": "string",
        "metadata": {
          "description": "Unique name of the new storage account that will be created to store virtual machine VHDs"
        },
        "value": "GEN-UNIQUE"
      },
      "domainName": {
        "type": "string",
        "metadata": {
          "description": "Domain name of the publicly accessible Apache test web server"
        },
        "value": "GEN-UNIQUE"
      },
      "adminUsername": {
        "type": "string",
        "defaultValue": "azureuser",
        "metadata": {
          "description": "Virtual machine administrator username"
        },
        "value": "GEN-UNIQUE"
      },
      "adminPassword": {
        "type": "securestring",
        "metadata": {
          "description": "Virtual machine administrator password"
        },
        "value": "GEN-PASSWORD"
      },
      "memcachedVmSize": {
        "type": "string",
        "defaultValue": "Standard_A0",
        "metadata": {
          "description": "Size of the memcached virtual machine"
        }
      },
      "apacheVmSize": {
        "type": "string",
        "defaultValue": "Standard_A0",
        "metadata": {
          "description": "Size of the Apache virtual machine"
        }
      },
      "numberOfMemcachedInstances": {
        "type": "int",
        "defaultValue": 1,
        "metadata": {
          "description": "Number of memcached virtual machines to provision"
        }
      },
      "virtualNetworkName": {
        "type": "string",
        "metadata": {
          "description": "Virtual network name"
        },
        "value": "GEN-UNIQUE"
      },
      "addressPrefix": {
        "type": "string",
        "defaultValue": "10.1.0.0/16",
        "metadata": {
          "description": "Virtual network address prefix"
        }
      },
      "subnetDmzPrefix": {
        "type": "string",
        "defaultValue": "10.1.0.0/24",
        "metadata": {
          "description": "Address prefix for the DMZ subnet"
        }
      },
      "subnetMemcachedPrefix": {
        "type": "string",
        "defaultValue": "10.1.1.0/24",
        "metadata": {
          "description": "Address prefix for the Memcached subnet"
        }
      },
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Location for all resources."
        }
      },
      "_artifactsLocation": {
        "type": "string",
        "metadata": {
          "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
        },
        "defaultValue": "[deployment().properties.templateLink.uri]"
      },
      "_artifactsLocationSasToken": {
        "type": "securestring",
        "metadata": {
          "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."
        },
        "defaultValue": ""
      }
    },
    "variables": {
      "subnetMemcachedName": "GEN-UNIQUE-subnet",
      "subnetDmzName": "GEN-UNIQUE-dmzsubnet",
      "imageReference": {
        "publisher": "Canonical",
        "offer": "UbuntuServer",
        "sku": "14.04.5-LTS",
        "version": "latest"
      },
      "subnetDmzRef": "Microsoft.Network/virtualNetworks/subnets//GEN-UNIQUE/GEN-UNIQUE-dmzsubnet",
      "subnetMemcachedRef": "Microsoft.Network/virtualNetworks/subnets//GEN-UNIQUE/GEN-UNIQUE-subnet",
      "memcachedMachineNamePrefix": "memcached"
    },
    "resources": [
      {
        "apiVersion": "2021-01-01",
        "type": "Microsoft.Storage/storageAccounts",
        "name": "GEN-UNIQUE",
        "location": "[resourceGroup().location]",
        "sku": {
          "name": "Standard_LRS"
        }
      },
      {
        "apiVersion": "2020-11-01",
        "type": "Microsoft.Network/virtualNetworks",
        "name": "GEN-UNIQUE",
        "location": "[resourceGroup().location]",
        "properties": {
          "addressSpace": {
            "addressPrefixes": [
              "10.1.0.0/16"
            ]
          },
          "subnets": [
            {
              "name": "GEN-UNIQUE-dmzsubnet",
              "properties": {
                "addressPrefix": "10.1.0.0/24"
              }
            },
            {
              "name": "GEN-UNIQUE-subnet",
              "properties": {
                "addressPrefix": "10.1.1.0/24"
              }
            }
          ]
        }
      },
      {
        "apiVersion": "2020-11-01",
        "type": "Microsoft.Network/publicIPAddresses",
        "name": "publicip",
        "location": "[resourceGroup().location]",
        "properties": {
          "publicIPAllocationMethod": "Dynamic",
          "dnsSettings": {
            "domainNameLabel": "GEN-UNIQUE"
          }
        }
      },
      {
        "apiVersion": "2020-11-01",
        "type": "Microsoft.Network/networkInterfaces",
        "name": "nicapache",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "Microsoft.Network/virtualNetworks//GEN-UNIQUE"
        ],
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipconfig1",
              "properties": {
                "privateIPAllocationMethod": "Dynamic",
                "publicIPAddress": {
                  "id": "Microsoft.Network/publicIPAddresses/publicip"
                },
                "subnet": {
                  "id": "Microsoft.Network/virtualNetworks/subnets//GEN-UNIQUE/GEN-UNIQUE-dmzsubnet"
                }
              }
            }
          ]
        }
      },
      {
        "apiVersion": "2020-11-01",
        "type": "Microsoft.Network/networkInterfaces",
        "name": "nicmemcachedcopyindex()",
        "location": "[resourceGroup().location]",
        "copy": {
          "name": "memcachedNicLoop",
          "count": 1
        },
        "dependsOn": [
          "Microsoft.Network/virtualNetworks//GEN-UNIQUE"
        ],
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipconfig1",
              "properties": {
                "privateIPAllocationMethod": "Dynamic",
                "subnet": {
                  "id": "Microsoft.Network/virtualNetworks/subnets//GEN-UNIQUE/GEN-UNIQUE-subnet"
                }
              }
            }
          ]
        }
      },
      {
        "apiVersion": "2020-12-01",
        "type": "Microsoft.Compute/virtualMachines",
        "name": "GEN-UNIQUE",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "Microsoft.Network/networkInterfaces//nicapache",
          "Microsoft.Storage/storageAccounts//GEN-UNIQUE"
        ],
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_A0"
          },
          "osProfile": {
            "computerName": "GEN-UNIQUE",
            "adminUsername": "GEN-UNIQUE",
            "adminPassword": "GEN-PASSWORD"
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "Canonical",
              "offer": "UbuntuServer",
              "sku": "14.04.5-LTS",
              "version": "latest"
            },
            "osDisk": {
              "name": "GEN-UNIQUE_OSDisk",
              "caching": "ReadWrite",
              "createOption": "FromImage"
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "Microsoft.Network/networkInterfaces/nicapache"
              }
            ]
          }
        }
      },
      {
        "apiVersion": "2020-12-01",
        "type": "Microsoft.Compute/virtualMachines",
        "name": "memcachedcopyindex()",
        "location": "[resourceGroup().location]",
        "copy": {
          "name": "memcachedVmLoop",
          "count": 1
        },
        "dependsOn": [
          "Microsoft.Network/networkInterfaces//nicmemcachedcopyindex()",
          "Microsoft.Storage/storageAccounts//GEN-UNIQUE"
        ],
        "properties": {
          "hardwareProfile": {
            "vmSize": "Standard_A0"
          },
          "osProfile": {
            "computerName": "memcachedcopyIndex()",
            "adminUsername": "GEN-UNIQUE",
            "adminPassword": "GEN-PASSWORD"
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "Canonical",
              "offer": "UbuntuServer",
              "sku": "14.04.5-LTS",
              "version": "latest"
            },
            "osDisk": {
              "name": "osdisk",
              "vhd": {
                "uri": "[concat('http://', parameters('newStorageAccountName'), '.blob.', environment().suffixes.storage, '/vhds/', variables('memcachedMachineNamePrefix'), copyindex(), '-osdisk.vhd')]"
              },
              "caching": "ReadWrite",
              "createOption": "FromImage"
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "Microsoft.Network/networkInterfaces/nicmemcachedcopyindex()"
              }
            ]
          }
        }
      },
      {
        "apiVersion": "2020-12-01",
        "type": "Microsoft.Compute/virtualMachines/extensions",
        "name": "memcachedcopyindex()/install_memcached",
        "location": "[resourceGroup().location]",
        "copy": {
          "name": "extensionLoop",
          "count": 1
        },
        "dependsOn": [
          "Microsoft.Compute/virtualMachines//memcachedcopyindex()",
          "Microsoft.Compute/virtualMachines//GEN-UNIQUE"
        ],
        "properties": {
          "publisher": "Microsoft.Azure.Extensions",
          "type": "CustomScript",
          "typeHandlerVersion": "2.0",
          "autoUpgradeMinorVersion": true,
          "settings": {
            "fileUris": [
              "[uri(parameters('_artifactsLocation'), concat('install_memcached.sh', parameters('_artifactsLocationSasToken')))]"
            ],
            "commandToExecute": "[concat('sh install_memcached.sh ', ' ', concat(reference(resourceId('Microsoft.Network/networkInterfaces/', concat('nicmemcached', copyindex()))).ipConfigurations[0].properties.privateIPAddress, ' ', reference('nicapache').ipConfigurations[0].properties.privateIPAddress))]"
          }
        }
      },
      {
        "apiVersion": "2020-12-01",
        "type": "Microsoft.Compute/virtualMachines/extensions",
        "name": "GEN-UNIQUE/install_apache",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "Microsoft.Compute/virtualMachines//GEN-UNIQUE"
        ],
        "properties": {
          "publisher": "Microsoft.Azure.Extensions",
          "type": "CustomScript",
          "typeHandlerVersion": "2.0",
          "autoUpgradeMinorVersion": true,
          "settings": {
            "fileUris": [
              "[uri(parameters('_artifactsLocation'), concat('install_apache.sh', parameters('_artifactsLocationSasToken')))]"
            ],
            "commandToExecute": "sh install_apache.sh 1 10.1.1.0/24"
          }
        }
      }
    ],
    "outputs": {},
    "\uff04schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#"
  }
}