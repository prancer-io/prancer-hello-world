{
  "structure": "filesystem",
  "error": null,
  "reference": "master",
  "contentType": "json",
  "source": "gitConnectorArm",
  "paths": [
    "/AKS/aks.azuredeploy.json",
    "/AKS/aks.azuredeploy.parameters.json"
  ],
  "timestamp": 1628750965127,
  "queryuser": null,
  "checksum": "99914b932bd37a50b983c5e7c90ae93b",
  "node": {
    "masterSnapshotId": "value_",
    "type": "arm",
    "collection": "arm",
    "paths": [
      "/AKS/aks.azuredeploy.json",
      "/AKS/aks.azuredeploy.parameters.json"
    ],
    "snapshotId": "value_1",
    "status": "active",
    "validate": true
  },
  "snapshotId": "value_1",
  "collection": "arm",
  "json": {
    "contentVersion": "1.0.0.0",
    "parameters": {
      "resourceName": {
        "type": "string",
        "metadata": {
          "description": "The name of the Managed Cluster resource."
        },
        "value": "prancer-aks-cluster"
      },
      "location": {
        "type": "string",
        "metadata": {
          "description": "The location of AKS resource."
        },
        "value": "eastus"
      },
      "dnsPrefix": {
        "type": "string",
        "metadata": {
          "description": "Optional DNS prefix to use with hosted Kubernetes API server FQDN."
        },
        "value": "prancer-aks"
      },
      "osDiskSizeGB": {
        "type": "int",
        "defaultValue": 0,
        "metadata": {
          "description": "Disk size (in GiB) to provision for each of the agent pool nodes. This value ranges from 0 to 1023. Specifying 0 will apply the default disk size for that agentVMSize."
        },
        "minValue": 0,
        "maxValue": 1023
      },
      "kubernetesVersion": {
        "type": "string",
        "defaultValue": "1.7.7",
        "metadata": {
          "description": "The version of Kubernetes."
        },
        "value": "1.17.11"
      },
      "networkPlugin": {
        "type": "string",
        "allowedValues": [
          "azure",
          "kubenet"
        ],
        "metadata": {
          "description": "Network plugin used for building Kubernetes network."
        },
        "value": "kubenet"
      },
      "enableRBAC": {
        "type": "bool",
        "defaultValue": true,
        "metadata": {
          "description": "Boolean flag to turn on and off of RBAC."
        },
        "value": false
      },
      "vmssNodePool": {
        "type": "bool",
        "defaultValue": false,
        "metadata": {
          "description": "Boolean flag to turn on and off of virtual machine scale sets"
        },
        "value": true
      },
      "windowsProfile": {
        "type": "bool",
        "defaultValue": false,
        "metadata": {
          "description": "Boolean flag to turn on and off of virtual machine scale sets"
        }
      },
      "enablePrivateCluster": {
        "type": "bool",
        "defaultValue": false,
        "metadata": {
          "description": "Enable private network access to the Kubernetes cluster."
        },
        "value": false
      },
      "enableHttpApplicationRouting": {
        "type": "bool",
        "defaultValue": true,
        "metadata": {
          "description": "Boolean flag to turn on and off http application routing."
        },
        "value": true
      },
      "enableAzurePolicy": {
        "type": "bool",
        "defaultValue": false,
        "metadata": {
          "description": "Boolean flag to turn on and off Azure Policy addon."
        },
        "value": false
      },
      "enableOmsAgent": {
        "type": "bool",
        "defaultValue": false,
        "metadata": {
          "description": "Boolean flag to turn on and off omsagent addon."
        }
      },
      "workspaceRegion": {
        "type": "string",
        "defaultValue": "East US",
        "metadata": {
          "description": "Specify the region for your OMS workspace."
        },
        "value": "eastus"
      },
      "workspaceName": {
        "type": "string",
        "metadata": {
          "description": "Specify the name of the OMS workspace."
        },
        "value": "DefaultWorkspace-b2dbb99e-1315-4654-8a72-15c0bd5f07da-EUS"
      },
      "omsWorkspaceId": {
        "type": "string",
        "metadata": {
          "description": "Specify the resource id of the OMS workspace."
        },
        "value": "/subscriptions/b2dbb99e-1315-4654-8a72-15c0bd5f07da/resourceGroups/DefaultResourceGroup-EUS/providers/Microsoft.OperationalInsights/workspaces/DefaultWorkspace-b2dbb99e-1315-4654-8a72-15c0bd5f07da-EUS"
      },
      "omsSku": {
        "type": "string",
        "defaultValue": "standalone",
        "allowedValues": [
          "free",
          "standalone",
          "pernode"
        ],
        "metadata": {
          "description": "Select the SKU for your workspace."
        }
      },
      "acrName": {
        "type": "string",
        "metadata": {
          "description": "Specify the name of the Azure Container Registry."
        },
        "value": "asadsadasdas"
      },
      "acrResourceGroup": {
        "type": "string",
        "metadata": {
          "description": "The name of the resource group the container registry is associated with."
        },
        "value": "Prancer"
      },
      "guidValue": {
        "type": "string",
        "metadata": {
          "description": "The unique id used in the role assignment of the kubernetes service to the container registry service. It is recommended to use the default value."
        },
        "defaultValue": "[newGuid()]"
      },
      "networkPolicy": {
        "type": "string",
        "metadata": {
          "description": "Network policy used for building Kubernetes network."
        },
        "value": "calico"
      },
      "vnetSubnetID": {
        "type": "string",
        "metadata": {
          "description": "Resource ID of virtual network subnet used for nodes and/or pods IP assignment."
        },
        "value": "/subscriptions/b2dbb99e-1315-4654-8a72-15c0bd5f07da/resourceGroups/Prancer/providers/Microsoft.Network/virtualNetworks/prancer-vnet/subnets/AKS"
      },
      "serviceCidr": {
        "type": "string",
        "metadata": {
          "description": "A CIDR notation IP range from which to assign service cluster IPs."
        },
        "value": "10.0.0.0/16"
      },
      "dnsServiceIP": {
        "type": "string",
        "metadata": {
          "description": "Containers DNS server IP address."
        },
        "value": "10.0.0.10"
      },
      "dockerBridgeCidr": {
        "type": "string",
        "metadata": {
          "description": "A CIDR notation IP for Docker bridge."
        },
        "value": "172.17.0.1/16"
      },
      "VirtualNetworkRGName": {
        "type": "string",
        "metadata": {
          "description": "Virtual Network name"
        },
        "value": "Prancer"
      },
      "VirtualNetworkName": {
        "type": "string",
        "metadata": {
          "description": "Virtual Network Resource Group"
        },
        "value": "prancer-vnet"
      },
      "SubnetName": {
        "type": "string",
        "value": "AKS"
      },
      "aadProfileManaged": {
        "defaultValue": false,
        "type": "bool",
        "metadata": {
          "description": "Specifies whether to enable managed AAD integration."
        }
      },
      "aadProfileEnableAzureRBAC": {
        "defaultValue": false,
        "type": "bool",
        "metadata": {
          "description": "Specifies whether to  to enable Azure RBAC for Kubernetes authorization."
        }
      },
      "aadProfileAdminGroupObjectIDs": {
        "defaultValue": [],
        "type": "array",
        "metadata": {
          "description": "Specifies the AAD group object IDs that will have admin role of the cluster."
        }
      },
      "aadProfileTenantId": {
        "defaultValue": "[subscription().tenantId]",
        "type": "string",
        "metadata": {
          "description": "Specifies the tenant id of the Azure Active Directory used by the AKS cluster for authentication."
        }
      }
    },
    "variables": {
      "vnetID": "[resourceId(parameters('VirtualNetworkRGName'), 'Microsoft.Network/virtualNetworks', parameters('VirtualNetworkName'))]",
      "vnetSubnetID": "vnetId/subnets/subnetName"
    },
    "resources": [
      {
        "apiVersion": "2020-03-01",
        "type": "Microsoft.ContainerService/managedClusters",
        "location": "eastus",
        "name": "prancer-aks-cluster",
        "properties": {
          "kubernetesVersion": "1.17.11",
          "enableRBAC": false,
          "dnsPrefix": "prancer-aks",
          "agentPoolProfiles": [
            {
              "name": "prancer",
              "osDiskSizeGB": 0,
              "count": 1,
              "vmSize": "Standard_DS2_v2",
              "osType": "Linux",
              "storageProfile": "ManagedDisks",
              "type": "VirtualMachineScaleSets",
              "mode": "System",
              "maxPods": 110,
              "availabilityZones": [],
              "vnetSubnetID": "/subscriptions/b2dbb99e-1315-4654-8a72-15c0bd5f07da/resourceGroups/Prancer/providers/Microsoft.Network/virtualNetworks/prancer-vnet/subnets/AKS"
            }
          ],
          "networkProfile": {
            "loadBalancerSku": "standard",
            "networkPlugin": "kubenet",
            "networkPolicy": "calico",
            "serviceCidr": "10.0.0.0/16",
            "dnsServiceIP": "10.0.0.10",
            "dockerBridgeCidr": "172.17.0.1/16"
          },
          "aadProfile": {
            "managed": false,
            "enableAzureRBAC": false,
            "adminGroupObjectIDs": [],
            "clientAppID": "",
            "serverAppID": "",
            "serverAppSecret": "",
            "tenantID": "[subscription().tenantId]"
          },
          "apiServerAccessProfile": {
            "enablePrivateCluster": false
          },
          "addonProfiles": {
            "httpApplicationRouting": {
              "enabled": true
            },
            "azurePolicy": {
              "enabled": false
            },
            "omsagent": {
              "enabled": false,
              "config": {
                "logAnalyticsWorkspaceResourceID": "/subscriptions/b2dbb99e-1315-4654-8a72-15c0bd5f07da/resourceGroups/DefaultResourceGroup-EUS/providers/Microsoft.OperationalInsights/workspaces/DefaultWorkspace-b2dbb99e-1315-4654-8a72-15c0bd5f07da-EUS"
              }
            }
          }
        },
        "tags": {},
        "identity": {
          "type": "SystemAssigned"
        }
      },
      {
        "type": "Microsoft.Resources/deployments",
        "name": "ClusterSubnetRoleAssignmentDeployment-20201016230336",
        "apiVersion": "2017-05-10",
        "resourceGroup": "Prancer",
        "subscriptionId": "b2dbb99e-1315-4654-8a72-15c0bd5f07da",
        "properties": {
          "mode": "Incremental",
          "template": {
            "contentVersion": "1.0.0.0",
            "parameters": {},
            "variables": {},
            "resources": [
              {
                "type": "Microsoft.Network/virtualNetworks/subnets/providers/roleAssignments",
                "apiVersion": "2017-05-01",
                "name": "[concat(parameters('VirtualNetworkName'), '/', parameters('SubnetName'), '/Microsoft.Authorization/', guid(resourceGroup().id, deployment().name))]",
                "properties": {
                  "roleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', '4d97b98b-1d4f-4787-a291-c67834d212e7')]",
                  "principalId": "[reference(parameters('resourceName')).identityProfile.kubeletidentity.objectId]",
                  "scope": "vnetSubnetId"
                }
              }
            ],
            "\uff04schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
          }
        },
        "dependsOn": []
      }
    ],
    "outputs": {
      "controlPlaneFQDN": {
        "type": "string",
        "value": "[reference(concat('Microsoft.ContainerService/managedClusters/', parameters('resourceName'))).fqdn]"
      }
    },
    "\uff04schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#"
  }
}