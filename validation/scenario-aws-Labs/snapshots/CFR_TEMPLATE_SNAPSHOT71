{
  "structure": "filesystem",
  "error": null,
  "reference": "master",
  "contentType": "json",
  "source": "gitConnectorAwsLabs",
  "paths": [
    "/aws/solutions/CloudFormationEndpointSignals/cfn-endpoint-creationpolicy.yaml"
  ],
  "timestamp": 1642972590570,
  "queryuser": null,
  "checksum": "99914b932bd37a50b983c5e7c90ae93b",
  "node": {
    "masterSnapshotId": "CFR_TEMPLATE_SNAPSHOT",
    "type": "cloudformation",
    "collection": "cloudformationtemplate",
    "paths": [
      "/aws/solutions/CloudFormationEndpointSignals/cfn-endpoint-creationpolicy.yaml"
    ],
    "snapshotId": "CFR_TEMPLATE_SNAPSHOT71",
    "status": "active",
    "validate": true,
    "resourceTypes": [
      "aws::ec2::instance",
      "aws::ec2::vpcendpoint",
      "aws::ec2::vpc",
      "aws::iam::instanceprofile",
      "aws::ec2::subnet",
      "aws::ec2::routetable",
      "aws::ec2::securitygroup",
      "aws::iam::role",
      "aws::ec2::route",
      "aws::ec2::internetgateway",
      "aws::ec2::subnetroutetableassociation",
      "aws::ec2::vpcgatewayattachment"
    ]
  },
  "snapshotId": "CFR_TEMPLATE_SNAPSHOT71",
  "collection": "cloudformationtemplate",
  "json": {
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "This template deploys a VPC with a pair of public and private subnets spread across two Availabilty Zones. It deploys an Internet Gateway, with a default route on the public subnets and a bastion server. It deploys a VPC Endpoint for CloudFormation so an instance in the private subnet can use cfn-signal for its CreationPolicy. **WARNING** You will be billed for the AWS resources used if you create a stack from this template.\n",
    "Parameters": {
      "EnvironmentName": {
        "Description": "An environment name that will be prefixed to resource names",
        "Type": "String"
      },
      "VpcCIDR": {
        "Description": "Please enter the IP range (CIDR notation) for this VPC",
        "Type": "String",
        "Default": "10.192.0.0/16",
        "AllowedPattern": "((\\d{1,3})\\.){3}\\d{1,3}/\\d{1,2}"
      },
      "PublicSubnet1CIDR": {
        "Description": "Please enter the IP range (CIDR notation) for the public subnet in the first Availability Zone",
        "Type": "String",
        "Default": "10.192.10.0/24",
        "AllowedPattern": "((\\d{1,3})\\.){3}\\d{1,3}/\\d{1,2}"
      },
      "PublicSubnet2CIDR": {
        "Description": "Please enter the IP range (CIDR notation) for the public subnet in the second Availability Zone",
        "Type": "String",
        "Default": "10.192.11.0/24",
        "AllowedPattern": "((\\d{1,3})\\.){3}\\d{1,3}/\\d{1,2}"
      },
      "PrivateSubnet1CIDR": {
        "Description": "Please enter the IP range (CIDR notation) for the private subnet in the first Availability Zone",
        "Type": "String",
        "Default": "10.192.20.0/24",
        "AllowedPattern": "((\\d{1,3})\\.){3}\\d{1,3}/\\d{1,2}"
      },
      "PrivateSubnet2CIDR": {
        "Description": "Please enter the IP range (CIDR notation) for the private subnet in the second Availability Zone",
        "Type": "String",
        "Default": "10.192.21.0/24",
        "AllowedPattern": "((\\d{1,3})\\.){3}\\d{1,3}/\\d{1,2}"
      },
      "KeyName": {
        "Description": "Key pair for EC2 access",
        "Type": "AWS::EC2::KeyPair::KeyName"
      },
      "LinuxAMI": {
        "Description": "Managed AMI ID for Amazon Linux",
        "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
        "Default": "/aws/service/ami-amazon-linux-latest/amzn-ami-hvm-x86_64-gp2"
      }
    },
    "Resources": [
      {
        "Type": "AWS::EC2::VPC",
        "Properties": {
          "EnableDnsSupport": true,
          "EnableDnsHostnames": true,
          "CidrBlock": "10.192.0.0/16",
          "Tags": [
            {
              "Key": "Name",
              "Value": {
                "Ref": "EnvironmentName"
              }
            }
          ]
        },
        "Name": "VPC"
      },
      {
        "Type": "AWS::EC2::InternetGateway",
        "Properties": {
          "Tags": [
            {
              "Key": "Name",
              "Value": {
                "Ref": "EnvironmentName"
              }
            }
          ]
        },
        "Name": "InternetGateway"
      },
      {
        "Type": "AWS::EC2::VPCGatewayAttachment",
        "Properties": {
          "InternetGatewayId": {
            "Ref": "InternetGateway"
          },
          "VpcId": {
            "Ref": "VPC"
          }
        },
        "Name": "InternetGatewayAttachment"
      },
      {
        "Type": "AWS::EC2::VPCEndpoint",
        "Properties": {
          "VpcId": {
            "Ref": "VPC"
          },
          "ServiceName": {
            "Fn::Sub": "com.amazonaws.${AWS::Region}.cloudformation"
          },
          "VpcEndpointType": "Interface",
          "PrivateDnsEnabled": true,
          "SubnetIds": [
            {
              "Ref": "PrivateSubnet1"
            },
            {
              "Ref": "PrivateSubnet2"
            }
          ],
          "SecurityGroupIds": [
            {
              "Ref": "EndpointSG"
            }
          ]
        },
        "Name": "CfnEndpoint"
      },
      {
        "Type": "AWS::EC2::Subnet",
        "Properties": {
          "VpcId": {
            "Ref": "VPC"
          },
          "AvailabilityZone": {
            "Fn::Select": [
              0,
              {
                "Fn::GetAZs": ""
              }
            ]
          },
          "CidrBlock": "10.192.10.0/24",
          "MapPublicIpOnLaunch": true,
          "Tags": [
            {
              "Key": "Name",
              "Value": {
                "Fn::Sub": "${EnvironmentName} Public Subnet (AZ1)"
              }
            }
          ]
        },
        "Name": "PublicSubnet1"
      },
      {
        "Type": "AWS::EC2::Subnet",
        "Properties": {
          "VpcId": {
            "Ref": "VPC"
          },
          "AvailabilityZone": {
            "Fn::Select": [
              1,
              {
                "Fn::GetAZs": ""
              }
            ]
          },
          "CidrBlock": "10.192.11.0/24",
          "MapPublicIpOnLaunch": true,
          "Tags": [
            {
              "Key": "Name",
              "Value": {
                "Fn::Sub": "${EnvironmentName} Public Subnet (AZ2)"
              }
            }
          ]
        },
        "Name": "PublicSubnet2"
      },
      {
        "Type": "AWS::EC2::Subnet",
        "Properties": {
          "VpcId": {
            "Ref": "VPC"
          },
          "AvailabilityZone": {
            "Fn::Select": [
              0,
              {
                "Fn::GetAZs": ""
              }
            ]
          },
          "CidrBlock": "10.192.20.0/24",
          "MapPublicIpOnLaunch": false,
          "Tags": [
            {
              "Key": "Name",
              "Value": {
                "Fn::Sub": "${EnvironmentName} Private Subnet (AZ1)"
              }
            }
          ]
        },
        "Name": "PrivateSubnet1"
      },
      {
        "Type": "AWS::EC2::Subnet",
        "Properties": {
          "VpcId": {
            "Ref": "VPC"
          },
          "AvailabilityZone": {
            "Fn::Select": [
              1,
              {
                "Fn::GetAZs": ""
              }
            ]
          },
          "CidrBlock": "10.192.21.0/24",
          "MapPublicIpOnLaunch": false,
          "Tags": [
            {
              "Key": "Name",
              "Value": {
                "Fn::Sub": "${EnvironmentName} Private Subnet (AZ2)"
              }
            }
          ]
        },
        "Name": "PrivateSubnet2"
      },
      {
        "Type": "AWS::EC2::RouteTable",
        "Properties": {
          "VpcId": {
            "Ref": "VPC"
          },
          "Tags": [
            {
              "Key": "Name",
              "Value": {
                "Fn::Sub": "${EnvironmentName} Public Routes"
              }
            }
          ]
        },
        "Name": "PublicRouteTable"
      },
      {
        "Type": "AWS::EC2::Route",
        "DependsOn": "InternetGatewayAttachment",
        "Properties": {
          "RouteTableId": {
            "Ref": "PublicRouteTable"
          },
          "DestinationCidrBlock": "0.0.0.0/0",
          "GatewayId": {
            "Ref": "InternetGateway"
          }
        },
        "Name": "DefaultPublicRoute"
      },
      {
        "Type": "AWS::EC2::SubnetRouteTableAssociation",
        "Properties": {
          "RouteTableId": {
            "Ref": "PublicRouteTable"
          },
          "SubnetId": {
            "Ref": "PublicSubnet1"
          }
        },
        "Name": "PublicSubnet1RouteTableAssociation"
      },
      {
        "Type": "AWS::EC2::SubnetRouteTableAssociation",
        "Properties": {
          "RouteTableId": {
            "Ref": "PublicRouteTable"
          },
          "SubnetId": {
            "Ref": "PublicSubnet2"
          }
        },
        "Name": "PublicSubnet2RouteTableAssociation"
      },
      {
        "Type": "AWS::EC2::RouteTable",
        "Properties": {
          "VpcId": {
            "Ref": "VPC"
          },
          "Tags": [
            {
              "Key": "Name",
              "Value": {
                "Fn::Sub": "${EnvironmentName} Private Routes (AZ1)"
              }
            }
          ]
        },
        "Name": "PrivateRouteTable1"
      },
      {
        "Type": "AWS::EC2::SubnetRouteTableAssociation",
        "Properties": {
          "RouteTableId": {
            "Ref": "PrivateRouteTable1"
          },
          "SubnetId": {
            "Ref": "PrivateSubnet1"
          }
        },
        "Name": "PrivateSubnet1RouteTableAssociation"
      },
      {
        "Type": "AWS::EC2::RouteTable",
        "Properties": {
          "VpcId": {
            "Ref": "VPC"
          },
          "Tags": [
            {
              "Key": "Name",
              "Value": {
                "Fn::Sub": "${EnvironmentName} Private Routes (AZ2)"
              }
            }
          ]
        },
        "Name": "PrivateRouteTable2"
      },
      {
        "Type": "AWS::EC2::SubnetRouteTableAssociation",
        "Properties": {
          "RouteTableId": {
            "Ref": "PrivateRouteTable2"
          },
          "SubnetId": {
            "Ref": "PrivateSubnet2"
          }
        },
        "Name": "PrivateSubnet2RouteTableAssociation"
      },
      {
        "Type": "AWS::IAM::Role",
        "Properties": {
          "AssumeRolePolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Principal": {
                  "Service": [
                    "ec2.amazonaws.com"
                  ]
                },
                "Action": [
                  "sts:AssumeRole"
                ]
              }
            ]
          },
          "Path": "/",
          "Policies": [
            {
              "PolicyName": "root",
              "PolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Action": "cloudformation:*",
                    "Resource": "*"
                  }
                ]
              }
            }
          ]
        },
        "Name": "RootRole"
      },
      {
        "Type": "AWS::EC2::Instance",
        "Properties": {
          "KeyName": {
            "Ref": "KeyName"
          },
          "InstanceType": "t2.micro",
          "SecurityGroupIds": [
            {
              "Ref": "BastionSG"
            }
          ],
          "SubnetId": {
            "Ref": "PublicSubnet1"
          },
          "ImageId": "/aws/service/ami-amazon-linux-latest/amzn-ami-hvm-x86_64-gp2",
          "IamInstanceProfile": {
            "Ref": "BastionProfile"
          },
          "Tags": [
            {
              "Key": "Name",
              "Value": "Bastion"
            }
          ]
        },
        "Name": "BastionInstance"
      },
      {
        "Type": "AWS::EC2::SecurityGroup",
        "Properties": {
          "GroupDescription": "Inbound Bastion Traffic",
          "SecurityGroupIngress": [
            {
              "IpProtocol": "tcp",
              "FromPort": 22,
              "ToPort": 22,
              "CidrIp": "0.0.0.0/0"
            }
          ],
          "VpcId": {
            "Ref": "VPC"
          },
          "Tags": [
            {
              "Key": "Name",
              "Value": "BastionSG"
            }
          ]
        },
        "Name": "BastionSG"
      },
      {
        "Type": "AWS::IAM::InstanceProfile",
        "Properties": {
          "Path": "/",
          "Roles": [
            {
              "Ref": "RootRole"
            }
          ]
        },
        "Name": "BastionProfile"
      },
      {
        "DependsOn": "CfnEndpoint",
        "Type": "AWS::EC2::Instance",
        "Properties": {
          "KeyName": {
            "Ref": "KeyName"
          },
          "InstanceType": "t2.micro",
          "SecurityGroupIds": [
            {
              "Ref": "PrivateSG"
            }
          ],
          "SubnetId": {
            "Ref": "PrivateSubnet1"
          },
          "ImageId": "/aws/service/ami-amazon-linux-latest/amzn-ami-hvm-x86_64-gp2",
          "IamInstanceProfile": {
            "Ref": "PrivateProfile"
          },
          "UserData": {
            "Fn::Base64": {
              "Fn::Sub": "#!/bin/bash -x\ndate > /tmp/datefile\ncat /tmp/datefile\n# Signal the status from instance\n/opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource PrivateInstance --region ${AWS::Region}\n"
            }
          },
          "Tags": [
            {
              "Key": "Name",
              "Value": "Private"
            }
          ]
        },
        "CreationPolicy": {
          "ResourceSignal": {
            "Count": 1,
            "Timeout": "PT15M"
          }
        },
        "Name": "PrivateInstance"
      },
      {
        "Type": "AWS::EC2::SecurityGroup",
        "Properties": {
          "GroupDescription": "Traffic from Bastion",
          "SecurityGroupIngress": [
            {
              "IpProtocol": "tcp",
              "FromPort": 22,
              "ToPort": 22,
              "SourceSecurityGroupId": {
                "Ref": "BastionSG"
              }
            }
          ],
          "VpcId": {
            "Ref": "VPC"
          },
          "Tags": [
            {
              "Key": "Name",
              "Value": "PrivateSG"
            }
          ]
        },
        "Name": "PrivateSG"
      },
      {
        "Type": "AWS::IAM::InstanceProfile",
        "Properties": {
          "Path": "/",
          "Roles": [
            {
              "Ref": "RootRole"
            }
          ]
        },
        "Name": "PrivateProfile"
      },
      {
        "Type": "AWS::EC2::SecurityGroup",
        "Properties": {
          "GroupDescription": "Traffic into CloudFormation Endpoint",
          "SecurityGroupIngress": [
            {
              "IpProtocol": "tcp",
              "FromPort": 443,
              "ToPort": 443,
              "CidrIp": "0.0.0.0/0"
            }
          ],
          "VpcId": {
            "Ref": "VPC"
          },
          "Tags": [
            {
              "Key": "Name",
              "Value": "EndpointSG"
            }
          ]
        },
        "Name": "EndpointSG"
      }
    ],
    "Outputs": {
      "VPC": {
        "Description": "A reference to the created VPC",
        "Value": {
          "Ref": "VPC"
        }
      },
      "PublicSubnets": {
        "Description": "A list of the public subnets",
        "Value": {
          "Fn::Join": [
            ",",
            [
              {
                "Ref": "PublicSubnet1"
              },
              {
                "Ref": "PublicSubnet2"
              }
            ]
          ]
        }
      },
      "PrivateSubnets": {
        "Description": "A list of the private subnets",
        "Value": {
          "Fn::Join": [
            ",",
            [
              {
                "Ref": "PrivateSubnet1"
              },
              {
                "Ref": "PrivateSubnet2"
              }
            ]
          ]
        }
      },
      "CfnEndpoint": {
        "Description": "A reference to the CloudFormation Endpoint used for signaling from the private instance",
        "Value": {
          "Ref": "CfnEndpoint"
        }
      }
    }
  }
}