{
  "structure": "filesystem",
  "error": null,
  "reference": "master",
  "contentType": "json",
  "source": "gitConnectorAwsLabs",
  "paths": [
    "/aws/services/AutoScaling/AutoScalingRollingUpdates.yaml"
  ],
  "timestamp": 1642972590275,
  "queryuser": null,
  "checksum": "99914b932bd37a50b983c5e7c90ae93b",
  "node": {
    "masterSnapshotId": "CFR_TEMPLATE_SNAPSHOT",
    "type": "cloudformation",
    "collection": "cloudformationtemplate",
    "paths": [
      "/aws/services/AutoScaling/AutoScalingRollingUpdates.yaml"
    ],
    "snapshotId": "CFR_TEMPLATE_SNAPSHOT2",
    "status": "active",
    "validate": true,
    "resourceTypes": [
      "aws::iam::instanceprofile",
      "aws::autoscaling::autoscalinggroup",
      "aws::autoscaling::launchconfiguration",
      "aws::ec2::securitygroup",
      "aws::iam::role",
      "aws::elasticloadbalancing::loadbalancer"
    ]
  },
  "snapshotId": "CFR_TEMPLATE_SNAPSHOT2",
  "collection": "cloudformationtemplate",
  "json": {
    "AWSTemplateFormatVersion": "2010-09-09",
    "Metadata": {
      "License": "Apache-2.0"
    },
    "Description": "AWS CloudFormation Sample Template ELBGuidedAutoScalingRollingUpdates: This example creates an auto scaling group behind a load balancer with a simple health check. The Auto Scaling launch configuration includes an update policy that will keep 2 instances running while doing an autoscaling rolling update. The update will roll forward only when the ELB health check detects an updated instance in-service. **WARNING** This template creates one or more Amazon EC2  instances and an Elastic Load Balancer. You will be billed for the AWS resources used if you create a stack from this template.",
    "Parameters": {
      "InstanceType": {
        "Description": "WebServer EC2 instance type",
        "Type": "String",
        "Default": "t2.small",
        "AllowedValues": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "m1.small",
          "m1.medium",
          "m1.large",
          "m1.xlarge",
          "m2.xlarge",
          "m2.2xlarge",
          "m2.4xlarge",
          "m3.medium",
          "m3.large",
          "m3.xlarge",
          "m3.2xlarge",
          "m4.large",
          "m4.xlarge",
          "m4.2xlarge",
          "m4.4xlarge",
          "m4.10xlarge",
          "c1.medium",
          "c1.xlarge",
          "c3.large",
          "c3.xlarge",
          "c3.2xlarge",
          "c3.4xlarge",
          "c3.8xlarge",
          "c4.large",
          "c4.xlarge",
          "c4.2xlarge",
          "c4.4xlarge",
          "c4.8xlarge",
          "g2.2xlarge",
          "g2.8xlarge",
          "r3.large",
          "r3.xlarge",
          "r3.2xlarge",
          "r3.4xlarge",
          "r3.8xlarge",
          "i2.xlarge",
          "i2.2xlarge",
          "i2.4xlarge",
          "i2.8xlarge",
          "d2.xlarge",
          "d2.2xlarge",
          "d2.4xlarge",
          "d2.8xlarge",
          "hi1.4xlarge",
          "hs1.8xlarge",
          "cr1.8xlarge",
          "cc2.8xlarge",
          "cg1.4xlarge"
        ],
        "ConstraintDescription": "must be a valid EC2 instance type."
      },
      "KeyName": {
        "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instances",
        "Type": "AWS::EC2::KeyPair::KeyName",
        "ConstraintDescription": "must be the name of an existing EC2 KeyPair."
      },
      "SSHLocation": {
        "Description": "The IP address range that can be used to SSH to the EC2 instances",
        "Type": "String",
        "MinLength": "9",
        "MaxLength": "18",
        "Default": "0.0.0.0/0",
        "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
        "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
      }
    },
    "Mappings": {
      "AWSInstanceType2Arch": {
        "t1.micro": {
          "Arch": "PV64"
        },
        "t2.nano": {
          "Arch": "HVM64"
        },
        "t2.micro": {
          "Arch": "HVM64"
        },
        "t2.small": {
          "Arch": "HVM64"
        },
        "t2.medium": {
          "Arch": "HVM64"
        },
        "t2.large": {
          "Arch": "HVM64"
        },
        "m1.small": {
          "Arch": "PV64"
        },
        "m1.medium": {
          "Arch": "PV64"
        },
        "m1.large": {
          "Arch": "PV64"
        },
        "m1.xlarge": {
          "Arch": "PV64"
        },
        "m2.xlarge": {
          "Arch": "PV64"
        },
        "m2.2xlarge": {
          "Arch": "PV64"
        },
        "m2.4xlarge": {
          "Arch": "PV64"
        },
        "m3.medium": {
          "Arch": "HVM64"
        },
        "m3.large": {
          "Arch": "HVM64"
        },
        "m3.xlarge": {
          "Arch": "HVM64"
        },
        "m3.2xlarge": {
          "Arch": "HVM64"
        },
        "m4.large": {
          "Arch": "HVM64"
        },
        "m4.xlarge": {
          "Arch": "HVM64"
        },
        "m4.2xlarge": {
          "Arch": "HVM64"
        },
        "m4.4xlarge": {
          "Arch": "HVM64"
        },
        "m4.10xlarge": {
          "Arch": "HVM64"
        },
        "c1.medium": {
          "Arch": "PV64"
        },
        "c1.xlarge": {
          "Arch": "PV64"
        },
        "c3.large": {
          "Arch": "HVM64"
        },
        "c3.xlarge": {
          "Arch": "HVM64"
        },
        "c3.2xlarge": {
          "Arch": "HVM64"
        },
        "c3.4xlarge": {
          "Arch": "HVM64"
        },
        "c3.8xlarge": {
          "Arch": "HVM64"
        },
        "c4.large": {
          "Arch": "HVM64"
        },
        "c4.xlarge": {
          "Arch": "HVM64"
        },
        "c4.2xlarge": {
          "Arch": "HVM64"
        },
        "c4.4xlarge": {
          "Arch": "HVM64"
        },
        "c4.8xlarge": {
          "Arch": "HVM64"
        },
        "g2.2xlarge": {
          "Arch": "HVMG2"
        },
        "g2.8xlarge": {
          "Arch": "HVMG2"
        },
        "r3.large": {
          "Arch": "HVM64"
        },
        "r3.xlarge": {
          "Arch": "HVM64"
        },
        "r3.2xlarge": {
          "Arch": "HVM64"
        },
        "r3.4xlarge": {
          "Arch": "HVM64"
        },
        "r3.8xlarge": {
          "Arch": "HVM64"
        },
        "i2.xlarge": {
          "Arch": "HVM64"
        },
        "i2.2xlarge": {
          "Arch": "HVM64"
        },
        "i2.4xlarge": {
          "Arch": "HVM64"
        },
        "i2.8xlarge": {
          "Arch": "HVM64"
        },
        "d2.xlarge": {
          "Arch": "HVM64"
        },
        "d2.2xlarge": {
          "Arch": "HVM64"
        },
        "d2.4xlarge": {
          "Arch": "HVM64"
        },
        "d2.8xlarge": {
          "Arch": "HVM64"
        },
        "hi1.4xlarge": {
          "Arch": "HVM64"
        },
        "hs1.8xlarge": {
          "Arch": "HVM64"
        },
        "cr1.8xlarge": {
          "Arch": "HVM64"
        },
        "cc2.8xlarge": {
          "Arch": "HVM64"
        }
      },
      "AWSInstanceType2NATArch": {
        "t1.micro": {
          "Arch": "NATPV64"
        },
        "t2.nano": {
          "Arch": "NATHVM64"
        },
        "t2.micro": {
          "Arch": "NATHVM64"
        },
        "t2.small": {
          "Arch": "NATHVM64"
        },
        "t2.medium": {
          "Arch": "NATHVM64"
        },
        "t2.large": {
          "Arch": "NATHVM64"
        },
        "m1.small": {
          "Arch": "NATPV64"
        },
        "m1.medium": {
          "Arch": "NATPV64"
        },
        "m1.large": {
          "Arch": "NATPV64"
        },
        "m1.xlarge": {
          "Arch": "NATPV64"
        },
        "m2.xlarge": {
          "Arch": "NATPV64"
        },
        "m2.2xlarge": {
          "Arch": "NATPV64"
        },
        "m2.4xlarge": {
          "Arch": "NATPV64"
        },
        "m3.medium": {
          "Arch": "NATHVM64"
        },
        "m3.large": {
          "Arch": "NATHVM64"
        },
        "m3.xlarge": {
          "Arch": "NATHVM64"
        },
        "m3.2xlarge": {
          "Arch": "NATHVM64"
        },
        "m4.large": {
          "Arch": "NATHVM64"
        },
        "m4.xlarge": {
          "Arch": "NATHVM64"
        },
        "m4.2xlarge": {
          "Arch": "NATHVM64"
        },
        "m4.4xlarge": {
          "Arch": "NATHVM64"
        },
        "m4.10xlarge": {
          "Arch": "NATHVM64"
        },
        "c1.medium": {
          "Arch": "NATPV64"
        },
        "c1.xlarge": {
          "Arch": "NATPV64"
        },
        "c3.large": {
          "Arch": "NATHVM64"
        },
        "c3.xlarge": {
          "Arch": "NATHVM64"
        },
        "c3.2xlarge": {
          "Arch": "NATHVM64"
        },
        "c3.4xlarge": {
          "Arch": "NATHVM64"
        },
        "c3.8xlarge": {
          "Arch": "NATHVM64"
        },
        "c4.large": {
          "Arch": "NATHVM64"
        },
        "c4.xlarge": {
          "Arch": "NATHVM64"
        },
        "c4.2xlarge": {
          "Arch": "NATHVM64"
        },
        "c4.4xlarge": {
          "Arch": "NATHVM64"
        },
        "c4.8xlarge": {
          "Arch": "NATHVM64"
        },
        "g2.2xlarge": {
          "Arch": "NATHVMG2"
        },
        "g2.8xlarge": {
          "Arch": "NATHVMG2"
        },
        "r3.large": {
          "Arch": "NATHVM64"
        },
        "r3.xlarge": {
          "Arch": "NATHVM64"
        },
        "r3.2xlarge": {
          "Arch": "NATHVM64"
        },
        "r3.4xlarge": {
          "Arch": "NATHVM64"
        },
        "r3.8xlarge": {
          "Arch": "NATHVM64"
        },
        "i2.xlarge": {
          "Arch": "NATHVM64"
        },
        "i2.2xlarge": {
          "Arch": "NATHVM64"
        },
        "i2.4xlarge": {
          "Arch": "NATHVM64"
        },
        "i2.8xlarge": {
          "Arch": "NATHVM64"
        },
        "d2.xlarge": {
          "Arch": "NATHVM64"
        },
        "d2.2xlarge": {
          "Arch": "NATHVM64"
        },
        "d2.4xlarge": {
          "Arch": "NATHVM64"
        },
        "d2.8xlarge": {
          "Arch": "NATHVM64"
        },
        "hi1.4xlarge": {
          "Arch": "NATHVM64"
        },
        "hs1.8xlarge": {
          "Arch": "NATHVM64"
        },
        "cr1.8xlarge": {
          "Arch": "NATHVM64"
        },
        "cc2.8xlarge": {
          "Arch": "NATHVM64"
        }
      },
      "AWSRegionArch2AMI": {
        "us-east-1": {
          "PV64": "ami-2a69aa47",
          "HVM64": "ami-6869aa05",
          "HVMG2": "ami-a41a3fb3"
        },
        "us-west-2": {
          "PV64": "ami-7f77b31f",
          "HVM64": "ami-7172b611",
          "HVMG2": "ami-caf253aa"
        },
        "us-west-1": {
          "PV64": "ami-a2490dc2",
          "HVM64": "ami-31490d51",
          "HVMG2": "ami-00347e60"
        },
        "eu-west-1": {
          "PV64": "ami-4cdd453f",
          "HVM64": "ami-f9dd458a",
          "HVMG2": "ami-e2f7bd91"
        },
        "eu-west-2": {
          "PV64": "NOT_SUPPORTED",
          "HVM64": "ami-886369ec",
          "HVMG2": "NOT_SUPPORTED"
        },
        "eu-central-1": {
          "PV64": "ami-6527cf0a",
          "HVM64": "ami-ea26ce85",
          "HVMG2": "ami-d2ff04bd"
        },
        "ap-northeast-1": {
          "PV64": "ami-3e42b65f",
          "HVM64": "ami-374db956",
          "HVMG2": "ami-4c78d52d"
        },
        "ap-northeast-2": {
          "PV64": "NOT_SUPPORTED",
          "HVM64": "ami-2b408b45",
          "HVMG2": "NOT_SUPPORTED"
        },
        "ap-southeast-1": {
          "PV64": "ami-df9e4cbc",
          "HVM64": "ami-a59b49c6",
          "HVMG2": "ami-f3f95990"
        },
        "ap-southeast-2": {
          "PV64": "ami-63351d00",
          "HVM64": "ami-dc361ebf",
          "HVMG2": "ami-3a122e59"
        },
        "ap-south-1": {
          "PV64": "NOT_SUPPORTED",
          "HVM64": "ami-ffbdd790",
          "HVMG2": "ami-21a7d34e"
        },
        "us-east-2": {
          "PV64": "NOT_SUPPORTED",
          "HVM64": "ami-f6035893",
          "HVMG2": "NOT_SUPPORTED"
        },
        "ca-central-1": {
          "PV64": "NOT_SUPPORTED",
          "HVM64": "ami-730ebd17",
          "HVMG2": "NOT_SUPPORTED"
        },
        "sa-east-1": {
          "PV64": "ami-1ad34676",
          "HVM64": "ami-6dd04501",
          "HVMG2": "NOT_SUPPORTED"
        },
        "cn-north-1": {
          "PV64": "ami-77559f1a",
          "HVM64": "ami-8e6aa0e3",
          "HVMG2": "NOT_SUPPORTED"
        }
      }
    },
    "Resources": [
      {
        "Type": "AWS::AutoScaling::AutoScalingGroup",
        "CreationPolicy": {
          "ResourceSignal": {
            "Timeout": "PT15M",
            "Count": "2"
          }
        },
        "UpdatePolicy": {
          "AutoScalingRollingUpdate": {
            "MaxBatchSize": "1",
            "MinInstancesInService": "1",
            "PauseTime": "PT15M",
            "WaitOnResourceSignals": "true"
          }
        },
        "Properties": {
          "AvailabilityZones": {
            "Fn::GetAZs": ""
          },
          "LaunchConfigurationName": {
            "Ref": "LaunchConfig"
          },
          "MinSize": "2",
          "MaxSize": "4",
          "LoadBalancerNames": [
            {
              "Ref": "ElasticLoadBalancer"
            }
          ]
        },
        "Name": "WebServerGroup"
      },
      {
        "Type": "AWS::AutoScaling::LaunchConfiguration",
        "Metadata": {
          "AWS::CloudFormation::Init": {
            "configSets": {
              "full_install": [
                "install_cfn",
                "install_app",
                "verify_instance_health"
              ]
            },
            "install_cfn": {
              "files": {
                "/etc/cfn/cfn-hup.conf": {
                  "content": {
                    "Fn::Sub": "[main]\nstack=${AWS::StackId}\nregion=${AWS::Region}\n"
                  },
                  "mode": "000400",
                  "owner": "root",
                  "group": "root"
                },
                "/etc/cfn/hooks.d/cfn-auto-reloader.conf": {
                  "content": {
                    "Fn::Sub": "[cfn-auto-reloader-hook]\ntriggers=post.update\npath=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init\naction=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfig --configsets full_install --region ${AWS::Region}\nrunas=root\n"
                  }
                }
              },
              "services": {
                "sysvinit": {
                  "cfn-hup": {
                    "enabled": "true",
                    "ensureRunning": "true",
                    "files": [
                      "/etc/cfn/cfn-hup.conf",
                      "/etc/cfn/hooks.d/cfn-auto-reloader.conf"
                    ]
                  }
                }
              }
            },
            "install_app": {
              "packages": {
                "yum": {
                  "httpd": []
                }
              },
              "files": {
                "/var/www/html/index.html": {
                  "content": "<h1>Congratulations, you have successfully launched the AWS CloudFormation sample.</h1><p>Version: 1.0</p>",
                  "mode": "000644",
                  "owner": "root",
                  "group": "root"
                }
              },
              "services": {
                "sysvinit": {
                  "httpd": {
                    "enabled": "true",
                    "ensureRunning": "true"
                  }
                }
              }
            },
            "verify_instance_health": {
              "commands": {
                "ELBHealthCheck": {
                  "command": {
                    "Fn::Sub": "until [ \"$state\" == \"\\\"InService\\\"\" ]; do state=$(aws --region ${AWS::Region} elb describe-instance-health --load-balancer-name ${ElasticLoadBalancer} --instances $(curl -s http://169.254.169.254/latest/meta-data/instance-id) --query InstanceStates[0].State); sleep 10; done"
                  }
                }
              }
            }
          }
        },
        "Properties": {
          "KeyName": {
            "Ref": "KeyName"
          },
          "ImageId": {
            "Fn::FindInMap": [
              "AWSRegionArch2AMI",
              {
                "Ref": "AWS::Region"
              },
              {
                "Fn::FindInMap": [
                  "AWSInstanceType2Arch",
                  {
                    "Ref": "InstanceType"
                  },
                  "Arch"
                ]
              }
            ]
          },
          "InstanceType": "t2.small",
          "SecurityGroups": [
            {
              "Ref": "InstanceSecurityGroup"
            }
          ],
          "IamInstanceProfile": {
            "Ref": "WebServerInstanceProfile"
          },
          "UserData": {
            "Fn::Base64": {
              "Fn::Sub": "#!/bin/bash -xe\nyum install -y aws-cfn-bootstrap\n/opt/aws/bin/cfn-init -v --stack ${AWS::StackId} --resource LaunchConfig --configsets full_install --region ${AWS::Region}\n/opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackId} --resource WebServerGroup --region ${AWS::Region}\n"
            }
          }
        },
        "Name": "LaunchConfig"
      },
      {
        "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
        "Properties": {
          "AvailabilityZones": {
            "Fn::GetAZs": ""
          },
          "CrossZone": "true",
          "Listeners": [
            {
              "LoadBalancerPort": "80",
              "InstancePort": "80",
              "Protocol": "HTTP"
            }
          ],
          "HealthCheck": {
            "Target": "HTTP:80/",
            "HealthyThreshold": "3",
            "UnhealthyThreshold": "5",
            "Interval": "30",
            "Timeout": "5"
          }
        },
        "Name": "ElasticLoadBalancer"
      },
      {
        "Type": "AWS::EC2::SecurityGroup",
        "Properties": {
          "GroupDescription": "Enable SSH access and HTTP access on the configured port",
          "SecurityGroupIngress": [
            {
              "IpProtocol": "tcp",
              "FromPort": "22",
              "ToPort": "22",
              "CidrIp": "0.0.0.0/0"
            },
            {
              "IpProtocol": "tcp",
              "FromPort": "80",
              "ToPort": "80",
              "CidrIp": "0.0.0.0/0"
            }
          ]
        },
        "Name": "InstanceSecurityGroup"
      },
      {
        "Type": "AWS::IAM::InstanceProfile",
        "Properties": {
          "Path": "/",
          "Roles": [
            {
              "Ref": "DescribeHealthRole"
            }
          ]
        },
        "Name": "WebServerInstanceProfile"
      },
      {
        "Type": "AWS::IAM::Role",
        "Properties": {
          "AssumeRolePolicyDocument": {
            "Statement": [
              {
                "Effect": "Allow",
                "Principal": {
                  "Service": [
                    "ec2.amazonaws.com"
                  ]
                },
                "Action": [
                  "sts:AssumeRole"
                ]
              }
            ]
          },
          "Path": "/",
          "Policies": [
            {
              "PolicyName": "describe-instance-health-policy",
              "PolicyDocument": {
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Action": [
                      "elasticloadbalancing:DescribeInstanceHealth"
                    ],
                    "Resource": "*"
                  }
                ]
              }
            }
          ]
        },
        "Name": "DescribeHealthRole"
      }
    ],
    "Outputs": {
      "URL": {
        "Description": "URL of the website",
        "Value": {
          "Fn::Join": [
            "",
            [
              "http://",
              {
                "Fn::GetAtt": [
                  "ElasticLoadBalancer",
                  "DNSName"
                ]
              }
            ]
          ]
        }
      }
    }
  }
}