{
  "structure": "filesystem",
  "error": null,
  "reference": "master",
  "contentType": "json",
  "source": "gitConnectorAwsLabs",
  "paths": [
    "/aws/services/SQS/SQSStandardQueue.json"
  ],
  "timestamp": 1642972590490,
  "queryuser": null,
  "checksum": "99914b932bd37a50b983c5e7c90ae93b",
  "node": {
    "masterSnapshotId": "CFR_TEMPLATE_SNAPSHOT",
    "type": "cloudformation",
    "collection": "cloudformationtemplate",
    "paths": [
      "/aws/services/SQS/SQSStandardQueue.json"
    ],
    "snapshotId": "CFR_TEMPLATE_SNAPSHOT53",
    "status": "active",
    "validate": true,
    "resourceTypes": [
      "aws::sqs::queue"
    ]
  },
  "snapshotId": "CFR_TEMPLATE_SNAPSHOT53",
  "collection": "cloudformationtemplate",
  "json": {
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Best Practice SQS Standard Queue",
    "Parameters": {
      "DelaySeconds": {
        "Description": "The time in seconds that the delivery of all messages in the queue is delayed. You can specify an integer value of 0 to 900 (15 minutes).",
        "Type": "Number",
        "Default": "5"
      },
      "MaximumMessageSize": {
        "Type": "Number",
        "Description": "The limit of how many bytes that a message can contain before Amazon SQS rejects it, 1024 bytes (1 KiB) to 262144 bytes (256 KiB)",
        "Default": "262144"
      },
      "MessageRetentionPeriod": {
        "Description": "The number of seconds that Amazon SQS retains a message. You can specify an integer value from 60 seconds (1 minute) to 1209600 seconds (14 days). ",
        "Type": "Number",
        "Default": "345600"
      },
      "ReceiveMessageWaitTimeSeconds": {
        "Description": "Specifies the duration, in seconds, that the ReceiveMessage action call waits until a message is in the queue in order to include it in the response, as opposed to returning an empty response if a message is not yet available. 1 to 20",
        "Type": "Number",
        "Default": "0"
      },
      "UsedeadletterQueue": {
        "Description": "A dead-letter queue is a queue that other (source) queues can target for messages that can't be processed (consumed) successfully. You can set aside and isolate these messages in the dead-letter queue to determine why their processing doesn't succeed.",
        "Type": "String",
        "AllowedValues": [
          "true",
          "false"
        ],
        "Default": "false"
      },
      "VisibilityTimeout": {
        "Description": "This should be longer than the time it would take to process and delete a message, this should not exceed 12 hours.",
        "Type": "Number",
        "Default": "5"
      }
    },
    "Mappings": {},
    "Conditions": {
      "CreateDeadLetterQueue": {
        "Fn::Equals": [
          {
            "Ref": "UsedeadletterQueue"
          },
          "true"
        ]
      }
    },
    "Resources": [
      {
        "Type": "AWS::SQS::Queue",
        "Properties": {
          "DelaySeconds": "5",
          "MaximumMessageSize": "262144",
          "MessageRetentionPeriod": "345600",
          "ReceiveMessageWaitTimeSeconds": "0",
          "RedrivePolicy": {
            "Ref": "AWS::NoValue"
          },
          "VisibilityTimeout": "5"
        },
        "Name": "SQSQueue"
      },
      {
        "Condition": "CreateDeadLetterQueue",
        "Type": "AWS::SQS::Queue",
        "Name": "MyDeadLetterQueue"
      }
    ],
    "Outputs": {
      "QueueURL": {
        "Description": "URL of newly created SQS Queue",
        "Value": {
          "Ref": "SQSQueue"
        }
      },
      "QueueARN": {
        "Description": "ARN of newly created SQS Queue",
        "Value": {
          "Fn::GetAtt": [
            "SQSQueue",
            "Arn"
          ]
        }
      },
      "QueueName": {
        "Description": "Name newly created SQS Queue",
        "Value": {
          "Fn::GetAtt": [
            "SQSQueue",
            "QueueName"
          ]
        }
      },
      "DeadLetterQueueURL": {
        "Condition": "CreateDeadLetterQueue",
        "Description": "URL of the dead letter queue",
        "Value": {
          "Ref": "MyDeadLetterQueue"
        }
      },
      "DeadLetterQueueARN": {
        "Condition": "CreateDeadLetterQueue",
        "Description": "ARN of the dead letter queue",
        "Value": {
          "Fn::GetAtt": [
            "MyDeadLetterQueue",
            "Arn"
          ]
        }
      }
    }
  }
}