{
  "structure": "filesystem",
  "error": null,
  "reference": "master",
  "contentType": "json",
  "source": "gitConnectorAwsLabs",
  "paths": [
    "/aws/solutions/createVPCInterfaceEndpoint/lambda_vpce_interface.json"
  ],
  "timestamp": 1642972590592,
  "queryuser": null,
  "checksum": "99914b932bd37a50b983c5e7c90ae93b",
  "node": {
    "masterSnapshotId": "CFR_TEMPLATE_SNAPSHOT",
    "type": "cloudformation",
    "collection": "cloudformationtemplate",
    "paths": [
      "/aws/solutions/createVPCInterfaceEndpoint/lambda_vpce_interface.json"
    ],
    "snapshotId": "CFR_TEMPLATE_SNAPSHOT75",
    "status": "active",
    "validate": true,
    "resourceTypes": [
      "aws::iam::role",
      "custom::vpceinterface",
      "aws::lambda::function"
    ]
  },
  "snapshotId": "CFR_TEMPLATE_SNAPSHOT75",
  "collection": "cloudformationtemplate",
  "json": {
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "This template create a lambda function and use it to create interface VPC endpoint",
    "Metadata": {},
    "Parameters": {
      "VPC": {
        "Description": "VPC ID",
        "Type": "String"
      },
      "Subnet": {
        "Description": "Subnet ID",
        "Type": "String"
      },
      "SecurityGroup": {
        "Description": "Security group ID",
        "Type": "String"
      },
      "Servicename": {
        "Description": "Service name to create inetrafce endpoint",
        "Type": "String"
      }
    },
    "Resources": [
      {
        "Description": "IAM role to allow Lambda permissions to create interafce endpoint",
        "Type": "AWS::IAM::Role",
        "Properties": {
          "AssumeRolePolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Principal": {
                  "Service": [
                    "lambda.amazonaws.com"
                  ]
                },
                "Action": [
                  "sts:AssumeRole"
                ]
              }
            ]
          },
          "Path": "/",
          "Policies": [
            {
              "PolicyName": "root",
              "PolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Action": [
                      "ec2:CreateVpcEndpoint",
                      "ec2:DeleteVpcEndpoint",
                      "logs:CreateLogGroup",
                      "logs:CreateLogStream",
                      "logs:PutLogEvents"
                    ],
                    "Resource": "*"
                  }
                ]
              }
            }
          ]
        },
        "Name": "LambdaRole"
      },
      {
        "Type": "AWS::Lambda::Function",
        "Properties": {
          "Code": {
            "ZipFile": "import boto3\nimport json\nimport os\nimport cfnresponse\ndef lambda_handler(event, context):\n client = boto3.client('ec2')\n responseData = {}\n responseValue = client.create_vpc_endpoint(\n  VpcEndpointType = os.environ['endpointtype'],\n  VpcId = os.environ['vpcid'],\n  ServiceName = os.environ['servicename'],\n  SubnetIds = [os.environ['subnet']],\n  SecurityGroupIds = [os.environ['securitygroup']],\n  PrivateDnsEnabled = True\n )\n responseData['Data'] = str(responseValue)\n cfnresponse.send(event, context, cfnresponse.SUCCESS, responseData, \"CustomResourcePhysicalID\")"
          },
          "Handler": "index.lambda_handler",
          "Runtime": "python3.6",
          "Timeout": "30",
          "Role": {
            "Fn::GetAtt": [
              "LambdaRole",
              "Arn"
            ]
          },
          "Environment": {
            "Variables": {
              "vpcid": {
                "Ref": "VPC"
              },
              "subnet": {
                "Ref": "Subnet"
              },
              "servicename": {
                "Ref": "Servicename"
              },
              "securitygroup": {
                "Ref": "SecurityGroup"
              },
              "endpointtype": "Interface"
            }
          }
        },
        "Name": "LambdaFunction"
      },
      {
        "Type": "Custom::VPCEInterface",
        "Properties": {
          "ServiceToken": {
            "Fn::GetAtt": [
              "LambdaFunction",
              "Arn"
            ]
          }
        },
        "Name": "CreateVPCEInterface"
      }
    ]
  }
}