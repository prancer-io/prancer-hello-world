{
  "structure": "filesystem",
  "error": null,
  "reference": "master",
  "contentType": "json",
  "source": "gitConnectorAwsLabs",
  "paths": [
    "/community/services/EFS/efs_with_automount_to_ec2.json"
  ],
  "timestamp": 1642972590715,
  "queryuser": null,
  "checksum": "99914b932bd37a50b983c5e7c90ae93b",
  "node": {
    "masterSnapshotId": "CFR_TEMPLATE_SNAPSHOT",
    "type": "cloudformation",
    "collection": "cloudformationtemplate",
    "paths": [
      "/community/services/EFS/efs_with_automount_to_ec2.json"
    ],
    "snapshotId": "CFR_TEMPLATE_SNAPSHOT104",
    "status": "active",
    "validate": true,
    "resourceTypes": [
      "aws::autoscaling::scalingpolicy",
      "aws::iam::instanceprofile",
      "aws::efs::mounttarget",
      "aws::autoscaling::autoscalinggroup",
      "aws::efs::filesystem",
      "aws::ec2::securitygroup",
      "aws::autoscaling::launchconfiguration",
      "aws::iam::role",
      "aws::elasticloadbalancing::loadbalancer",
      "aws::cloudwatch::alarm"
    ]
  },
  "snapshotId": "CFR_TEMPLATE_SNAPSHOT104",
  "collection": "cloudformationtemplate",
  "json": {
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Multi-AZ EFS with automount EFS.",
    "Mappings": {
      "EC2RegionMap": {
        "ap-northeast-1": {
          "64": "ami-d85e7fbf"
        },
        "ap-northeast-2": {
          "64": "ami-15d5077b"
        },
        "ap-south-1": {
          "64": "ami-83a8dbec"
        },
        "ap-southeast-1": {
          "64": "ami-0a19a669"
        },
        "ap-southeast-2": {
          "64": "ami-807876e3"
        },
        "ca-central-1": {
          "64": "ami-beea56da"
        },
        "eu-central-1": {
          "64": "ami-25a97a4a"
        },
        "eu-west-1": {
          "64": "ami-09447c6f"
        },
        "eu-west-2": {
          "64": "ami-63342007"
        },
        "sa-east-1": {
          "64": "ami-8df695e1"
        },
        "us-east-1": {
          "64": "ami-772aa961"
        },
        "us-east-2": {
          "64": "ami-8fab8fea"
        },
        "us-west-1": {
          "64": "ami-1da8f27d"
        },
        "us-west-2": {
          "64": "ami-7c22b41c"
        }
      }
    },
    "Outputs": {
      "AutoScalingGroup": {
        "Description": "AutoScaling Group Name",
        "Export": {
          "Name": {
            "Fn::Sub": "${AWS::StackName}-AutoScalingGroup"
          }
        },
        "Value": {
          "Ref": "AutoScalingGroup"
        }
      },
      "StackName": {
        "Description": "Stack Name",
        "Value": {
          "Ref": "AWS::StackName"
        }
      },
      "URL": {
        "Description": "The URL of the website",
        "Value": {
          "Fn::Join": [
            "",
            [
              "http://",
              {
                "Fn::GetAtt": [
                  "ElasticLoadBalancer",
                  "DNSName"
                ]
              }
            ]
          ]
        }
      }
    },
    "Parameters": {
      "InstanceType": {
        "AllowedValues": [
          "t1.micro",
          "t2.nano",
          "t2.micro",
          "t2.small",
          "t2.medium",
          "t2.large",
          "m1.small",
          "m1.medium",
          "m1.large",
          "m1.xlarge",
          "m2.xlarge",
          "m2.2xlarge",
          "m2.4xlarge",
          "m3.medium",
          "m3.large",
          "m3.xlarge",
          "m3.2xlarge",
          "m4.large",
          "m4.xlarge",
          "m4.2xlarge",
          "m4.4xlarge",
          "m4.10xlarge",
          "c1.medium",
          "c1.xlarge",
          "c3.large",
          "c3.xlarge",
          "c3.2xlarge",
          "c3.4xlarge",
          "c3.8xlarge",
          "c4.large",
          "c4.xlarge",
          "c4.2xlarge",
          "c4.4xlarge",
          "c4.8xlarge",
          "g2.2xlarge",
          "g2.8xlarge",
          "r3.large",
          "r3.xlarge",
          "r3.2xlarge",
          "r3.4xlarge",
          "r3.8xlarge",
          "i2.xlarge",
          "i2.2xlarge",
          "i2.4xlarge",
          "i2.8xlarge",
          "d2.xlarge",
          "d2.2xlarge",
          "d2.4xlarge",
          "d2.8xlarge",
          "hi1.4xlarge",
          "hs1.8xlarge",
          "cr1.8xlarge",
          "cc2.8xlarge",
          "cg1.4xlarge"
        ],
        "ConstraintDescription": "must be a valid EC2 instance type.",
        "Default": "t2.micro",
        "Description": "EC2 instance type",
        "Type": "String"
      },
      "KeyName": {
        "ConstraintDescription": "must be the name of an existing EC2 KeyPair.",
        "Description": "The EC2 Key Pair to allow SSH access to the instances",
        "Type": "AWS::EC2::KeyPair::KeyName"
      },
      "Subnets": {
        "Type": "CommaDelimitedList",
        "Description": "The list of SubnetIds, for at least two Availability Zones in the region in your Virtual Private Cloud (VPC) Defaults: "
      },
      "VPC": {
        "Description": "VPC ID for EC2 and Elastic Load Balancer",
        "Type": "AWS::EC2::VPC::Id"
      }
    },
    "Resources": [
      {
        "Type": "AWS::EFS::FileSystem",
        "Properties": {
          "PerformanceMode": "generalPurpose"
        },
        "Name": "EFSFileSystem"
      },
      {
        "Type": "AWS::EFS::MountTarget",
        "Properties": {
          "FileSystemId": {
            "Ref": "EFSFileSystem"
          },
          "SecurityGroups": [
            {
              "Fn::GetAtt": [
                "EFSSecurityGroup",
                "GroupId"
              ]
            }
          ],
          "SubnetId": {
            "Fn::Select": [
              0,
              {
                "Ref": "Subnets"
              }
            ]
          }
        },
        "Name": "EFSMountTarget1"
      },
      {
        "Type": "AWS::EFS::MountTarget",
        "Properties": {
          "FileSystemId": {
            "Ref": "EFSFileSystem"
          },
          "SecurityGroups": [
            {
              "Fn::GetAtt": [
                "EFSSecurityGroup",
                "GroupId"
              ]
            }
          ],
          "SubnetId": {
            "Fn::Select": [
              1,
              {
                "Ref": "Subnets"
              }
            ]
          }
        },
        "Name": "EFSMountTarget2"
      },
      {
        "Type": "AWS::EFS::MountTarget",
        "Properties": {
          "FileSystemId": {
            "Ref": "EFSFileSystem"
          },
          "SecurityGroups": [
            {
              "Fn::GetAtt": [
                "EFSSecurityGroup",
                "GroupId"
              ]
            }
          ],
          "SubnetId": {
            "Fn::Select": [
              2,
              {
                "Ref": "Subnets"
              }
            ]
          }
        },
        "Name": "EFSMountTarget3"
      },
      {
        "Type": "AWS::EFS::MountTarget",
        "Properties": {
          "FileSystemId": {
            "Ref": "EFSFileSystem"
          },
          "SecurityGroups": [
            {
              "Fn::GetAtt": [
                "EFSSecurityGroup",
                "GroupId"
              ]
            }
          ],
          "SubnetId": {
            "Fn::Select": [
              3,
              {
                "Ref": "Subnets"
              }
            ]
          }
        },
        "Name": "EFSMountTarget4"
      },
      {
        "Properties": {
          "AlarmActions": [
            {
              "Ref": "ScaleUpPolicy"
            }
          ],
          "AlarmDescription": "Scale-up if CPU > 90% for 10 minutes",
          "ComparisonOperator": "GreaterThanThreshold",
          "Dimensions": [
            {
              "Name": "AutoScalingGroupName",
              "Value": {
                "Ref": "AutoScalingGroup"
              }
            }
          ],
          "EvaluationPeriods": "2",
          "MetricName": "CPUUtilization",
          "Namespace": "AWS/EC2",
          "Period": "300",
          "Statistic": "Average",
          "Threshold": "90"
        },
        "Type": "AWS::CloudWatch::Alarm",
        "Name": "CPUAlarmHigh"
      },
      {
        "Properties": {
          "AlarmActions": [
            {
              "Ref": "ScaleDownPolicy"
            }
          ],
          "AlarmDescription": "Scale-down if CPU < 70% for 10 minutes",
          "ComparisonOperator": "LessThanThreshold",
          "Dimensions": [
            {
              "Name": "AutoScalingGroupName",
              "Value": {
                "Ref": "AutoScalingGroup"
              }
            }
          ],
          "EvaluationPeriods": "2",
          "MetricName": "CPUUtilization",
          "Namespace": "AWS/EC2",
          "Period": "300",
          "Statistic": "Average",
          "Threshold": "70"
        },
        "Type": "AWS::CloudWatch::Alarm",
        "Name": "CPUAlarmLow"
      },
      {
        "Properties": {
          "LaunchConfigurationName": {
            "Ref": "LaunchConfig"
          },
          "LoadBalancerNames": [
            {
              "Ref": "ElasticLoadBalancer"
            }
          ],
          "MaxSize": "3",
          "MinSize": "1",
          "VPCZoneIdentifier": {
            "Ref": "Subnets"
          }
        },
        "Type": "AWS::AutoScaling::AutoScalingGroup",
        "Name": "AutoScalingGroup"
      },
      {
        "Properties": {
          "InstanceProfileName": "IAM-InstanceProfile",
          "Path": "/",
          "Roles": [
            {
              "Ref": "IAMAssumeInstanceRole"
            }
          ]
        },
        "Type": "AWS::IAM::InstanceProfile",
        "Name": "InstanceProfile"
      },
      {
        "Properties": {
          "AdjustmentType": "ChangeInCapacity",
          "AutoScalingGroupName": {
            "Ref": "AutoScalingGroup"
          },
          "Cooldown": "60",
          "ScalingAdjustment": "-1"
        },
        "Type": "AWS::AutoScaling::ScalingPolicy",
        "Name": "ScaleDownPolicy"
      },
      {
        "Properties": {
          "AdjustmentType": "ChangeInCapacity",
          "AutoScalingGroupName": {
            "Ref": "AutoScalingGroup"
          },
          "Cooldown": "60",
          "ScalingAdjustment": "1"
        },
        "Type": "AWS::AutoScaling::ScalingPolicy",
        "Name": "ScaleUpPolicy"
      },
      {
        "Properties": {
          "SecurityGroups": [
            {
              "Ref": "ELBSecurityGroup"
            }
          ],
          "Subnets": {
            "Ref": "Subnets"
          },
          "CrossZone": "true",
          "HealthCheck": {
            "HealthyThreshold": "3",
            "Interval": "30",
            "Target": "HTTP:80/",
            "Timeout": "5",
            "UnhealthyThreshold": "5"
          },
          "Listeners": [
            {
              "InstancePort": "80",
              "LoadBalancerPort": "80",
              "Protocol": "HTTP"
            }
          ]
        },
        "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
        "Name": "ElasticLoadBalancer"
      },
      {
        "Properties": {
          "AssumeRolePolicyDocument": {
            "Statement": [
              {
                "Action": [
                  "sts:AssumeRole"
                ],
                "Effect": "Allow",
                "Principal": {
                  "Service": [
                    "ec2.amazonaws.com"
                  ]
                }
              }
            ],
            "Version": "2012-10-17"
          },
          "Path": "/",
          "Policies": [
            {
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": [
                      "ec2:DescribeTags"
                    ],
                    "Effect": "Allow",
                    "Resource": "*"
                  },
                  {
                    "Action": [
                      "s3:Get*",
                      "s3:List*"
                    ],
                    "Effect": "Allow",
                    "Resource": "*"
                  },
                  {
                    "Action": "logs:*",
                    "Effect": "Allow",
                    "Resource": "*"
                  }
                ],
                "Version": "2012-10-17"
              },
              "PolicyName": "IAM-EC2-Policy"
            }
          ],
          "RoleName": "IAM-EC2-Role"
        },
        "Type": "AWS::IAM::Role",
        "Name": "IAMAssumeInstanceRole"
      },
      {
        "Properties": {
          "GroupDescription": "Enable SSH public access and HTTP from the load balancer only",
          "SecurityGroupIngress": [
            {
              "CidrIp": "0.0.0.0/0",
              "FromPort": "22",
              "IpProtocol": "tcp",
              "ToPort": "22"
            },
            {
              "FromPort": "80",
              "IpProtocol": "tcp",
              "SourceSecurityGroupId": {
                "Fn::GetAtt": [
                  "ELBSecurityGroup",
                  "GroupId"
                ]
              },
              "ToPort": "80"
            }
          ],
          "VpcId": {
            "Ref": "VPC"
          }
        },
        "Type": "AWS::EC2::SecurityGroup",
        "Name": "InstanceSecurityGroup"
      },
      {
        "Properties": {
          "GroupDescription": "Enable public access HTTP and HTTPS",
          "SecurityGroupIngress": [
            {
              "CidrIp": "0.0.0.0/0",
              "FromPort": "80",
              "IpProtocol": "tcp",
              "ToPort": "80"
            },
            {
              "CidrIp": "0.0.0.0/0",
              "FromPort": "443",
              "IpProtocol": "tcp",
              "ToPort": "443"
            }
          ],
          "VpcId": {
            "Ref": "VPC"
          }
        },
        "Type": "AWS::EC2::SecurityGroup",
        "Name": "ELBSecurityGroup"
      },
      {
        "Type": "AWS::EC2::SecurityGroup",
        "Properties": {
          "GroupDescription": "Enable NFS access from EC2",
          "SecurityGroupIngress": [
            {
              "FromPort": "2049",
              "IpProtocol": "tcp",
              "ToPort": "2049",
              "SourceSecurityGroupId": {
                "Fn::GetAtt": [
                  "InstanceSecurityGroup",
                  "GroupId"
                ]
              }
            }
          ],
          "VpcId": {
            "Ref": "VPC"
          }
        },
        "Name": "EFSSecurityGroup"
      },
      {
        "Properties": {
          "IamInstanceProfile": {
            "Ref": "InstanceProfile"
          },
          "ImageId": {
            "Fn::FindInMap": [
              "EC2RegionMap",
              {
                "Ref": "AWS::Region"
              },
              "64"
            ]
          },
          "InstanceType": "t2.micro",
          "KeyName": {
            "Ref": "KeyName"
          },
          "SecurityGroups": [
            {
              "Fn::GetAtt": [
                "InstanceSecurityGroup",
                "GroupId"
              ]
            }
          ],
          "UserData": {
            "Fn::Base64": {
              "Fn::Join": [
                "",
                [
                  "#!/bin/bash -x\n",
                  "export LC_CTYPE=en_US.UTF-8\n",
                  "export LC_ALL=en_US.UTF-8\n",
                  "apt-get update\n",
                  "apt-get install -y curl nfs-common\n",
                  "EC2_REGION=",
                  {
                    "Ref": "AWS::Region"
                  },
                  "\n",
                  "DIR_TGT=/mnt/efs/",
                  "\n",
                  "EFS_FILE_SYSTEM_ID=",
                  {
                    "Ref": "EFSFileSystem"
                  },
                  "\n",
                  "mkdir -p $DIR_TGT\n",
                  "DIR_SRC=$EFS_FILE_SYSTEM_ID.efs.$EC2_REGION.amazonaws.com\n",
                  "mount -t nfs4 -o nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2 $DIR_SRC:/ $DIR_TGT"
                ]
              ]
            }
          }
        },
        "Type": "AWS::AutoScaling::LaunchConfiguration",
        "Name": "LaunchConfig"
      }
    ]
  }
}